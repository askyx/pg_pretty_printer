
Breakpoint 1, standard_planner (parse=0x5591d14561f0, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$1 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 522} = {
  rtable = List with 1 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 1 elements = {
    0 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 12 13 14 15 16 17 18), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = RangeTblRef rtindex: 1
    },
    quals = List with 1 elements = {
      0 = OpExpr {opno: 2346, opfuncid: 2339, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 402} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 391},
          1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446702083309551616, constisnull: false, constbyval: true, location: -1}
        }
      }
    }
  },
  targetList = List with 10 elements = {
    0 = TargetEntry {resno: 1, resname: 'l_returnflag', ressortgroupref: 1, resorigtbl: 74565, resorigcol: 9, resjunk: false} = {
      expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'l_linestatus', ressortgroupref: 2, resorigtbl: 74565, resorigcol: 10, resjunk: false} = {
      expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: 25}
    },
    2 = TargetEntry {resno: 3, resname: 'sum_qty', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 41} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45}
          }
        }
      }
    },
    3 = TargetEntry {resno: 4, resname: 'sum_base_price', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 71} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 75}
          }
        }
      }
    },
    4 = TargetEntry {resno: 5, resname: 'sum_disc_price', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 2, aggtransno: 2, location: 113} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 133} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 117},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 138} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769652456, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 140}
                  }
                }
              }
            }
          }
        }
      }
    },
    5 = TargetEntry {resno: 6, resname: 'sum_charge', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 3, aggtransno: 3, location: 174} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 213} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 194} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 178},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 199} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769705920, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 201}
                      }
                    }
                  }
                },
                1 = OpExpr {opno: 1758, opfuncid: 1724, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 218} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769712032, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 220}
                  }
                }
              }
            }
          }
        }
      }
    },
    6 = TargetEntry {resno: 7, resname: 'avg_qty', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 4, aggtransno: 0, location: 245} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 249}
          }
        }
      }
    },
    7 = TargetEntry {resno: 8, resname: 'avg_price', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 5, aggtransno: 1, location: 275} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 279}
          }
        }
      }
    },
    8 = TargetEntry {resno: 9, resname: 'avg_disc', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 6, aggtransno: 4, location: 312} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 316}
          }
        }
      }
    },
    9 = TargetEntry {resno: 10, resname: 'count_order', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 7, aggtransno: 5, location: 343}
    }
  },
  groupClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  },
  sortClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  }
}
$2 = AggPath T_Agg (cost=0.01..0.08 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 640} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 248, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 2, 0, 0, 0, 0, 0, 0, 0, 0],
    exprs = List with 10 elements = {
      0 = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: 9},
      1 = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: 25},
      2 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 41} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45}
          }
        }
      },
      3 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 71} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 75}
          }
        }
      },
      4 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 2, aggtransno: 2, location: 113} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 133} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 117},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 138} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769652456, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 140}
                  }
                }
              }
            }
          }
        }
      },
      5 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 3, aggtransno: 3, location: 174} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 213} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 194} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 178},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 199} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769705920, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 201}
                      }
                    }
                  }
                },
                1 = OpExpr {opno: 1758, opfuncid: 1724, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 218} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769712032, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 220}
                  }
                }
              }
            }
          }
        }
      },
      6 = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 4, aggtransno: 0, location: 245} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 249}
          }
        }
      },
      7 = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 5, aggtransno: 1, location: 275} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 279}
          }
        }
      },
      8 = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 6, aggtransno: 4, location: 312} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 316}
          }
        }
      },
      9 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 7, aggtransno: 5, location: 343}
    }
  },
  path.pathkeys = List with 2 elements = {
    0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: 9},
            em_jdomain = JoinDomain jd_relids: (b 1)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: 25},
            em_jdomain = JoinDomain jd_relids: (b 1)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.01..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 88, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1, 2, 0, 0, 0, 0],
      exprs = List with 6 elements = {
        0 = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: 9},
        1 = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: 25},
        2 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45},
        3 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 75},
        4 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 140},
        5 = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 220}
      }
    },
    path.pathkeys = List with 2 elements = {
      0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: 9},
              em_jdomain = JoinDomain jd_relids: (b 1)
            }
          }
        }
      },
      1 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: 25},
              em_jdomain = JoinDomain jd_relids: (b 1)
            }
          }
        }
      }
    },
    subpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
      parent = (b 1),
      pathtarget = PathTarget {cost: (0.00..0.00), width: 88, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 2, 0, 0, 0, 0],
        exprs = List with 6 elements = {
          0 = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: 9},
          1 = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: 25},
          2 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45},
          3 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 75},
          4 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 140},
          5 = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 220}
        }
      }
    }
  },
  groupClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  }
}

Breakpoint 2, standard_planner (parse=0x5591d14561f0, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$3 = Agg (cost=0.01..0.08 rows=1 width=248 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 2, numGroups: 1, transitionSpace: 640, aggParams: 0x0} = {
  grpColIdx = [1, 2],
  grpOperators = [1054, 1054],
  grpCollations = [100, 100],
  plan.targetlist = List with 10 elements = {
    0 = TargetEntry {resno: 1, resname: 'l_returnflag', ressortgroupref: 1, resorigtbl: 74565, resorigcol: 9, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'l_linestatus', ressortgroupref: 2, resorigtbl: 74565, resorigcol: 10, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    2 = TargetEntry {resno: 3, resname: 'sum_qty', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 41} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45}
          }
        }
      }
    },
    3 = TargetEntry {resno: 4, resname: 'sum_base_price', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 71} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 75}
          }
        }
      }
    },
    4 = TargetEntry {resno: 5, resname: 'sum_disc_price', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 2, aggtransno: 2, location: 113} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 133} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 117},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 138} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769652456, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 140}
                  }
                }
              }
            }
          }
        }
      }
    },
    5 = TargetEntry {resno: 6, resname: 'sum_charge', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 3, aggtransno: 3, location: 174} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 213} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 194} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 178},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 199} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769705920, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 201}
                      }
                    }
                  }
                },
                1 = OpExpr {opno: 1758, opfuncid: 1724, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 218} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769712032, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 220}
                  }
                }
              }
            }
          }
        }
      }
    },
    6 = TargetEntry {resno: 7, resname: 'avg_qty', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 4, aggtransno: 0, location: 245} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 249}
          }
        }
      }
    },
    7 = TargetEntry {resno: 8, resname: 'avg_price', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 5, aggtransno: 1, location: 275} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 279}
          }
        }
      }
    },
    8 = TargetEntry {resno: 9, resname: 'avg_disc', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2103, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 6, aggtransno: 4, location: 312} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 316}
          }
        }
      }
    },
    9 = TargetEntry {resno: 10, resname: 'count_order', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 7, aggtransno: 5, location: 343}
    }
  },
  plan.lefttree = Sort (cost=0.01..0.02 rows=1 width=88 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 2 = {
    sortColIdx = [1, 2],
    sortOperators = [1058, 1058],
    collations = [100, 100],
    nullsFirst = [False, False],
    plan.targetlist = List with 6 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
      },
      4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
      },
      5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
      }
    },
    plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=88 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
      scan.plan.targetlist = List with 6 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: 9}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: 25}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 75}
        },
        4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 140}
        },
        5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 220}
        }
      },
      scan.plan.qual = List with 1 elements = {
        0 = OpExpr {opno: 2346, opfuncid: 2339, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 402} = {
          args = List with 2 elements = {
            0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 391},
            1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446702083309551616, constisnull: false, constbyval: true, location: -1}
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d14556b0, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$4 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 414} = {
  rtable = List with 3 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'customer' = {
        colnames = List with 8 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_name' ],
          2 = String [ 'c_address' ],
          3 = String [ 'c_nationkey' ],
          4 = String [ 'c_phone' ],
          5 = String [ 'c_acctbal' ],
          6 = String [ 'c_mktsegment' ],
          7 = String [ 'c_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 3 elements = {
    0 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 14), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 12 15), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 13 14 18), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 3 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2,
      2 = RangeTblRef rtindex: 3
    },
    quals = List with 5 elements = {
      0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 166} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 153},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769638712, constisnull: false, constbyval: false, location: 168}
        }
      },
      1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 195} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 185},
          1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 197}
        }
      },
      2 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 224} = {
        args = List with 2 elements = {
          0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 213},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 226}
        }
      },
      3 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 255} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 243},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549863, constisnull: false, constbyval: true, location: 262}
        }
      },
      4 = OpExpr {opno: 1097, opfuncid: 1089, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 292} = {
        args = List with 2 elements = {
          0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 281},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549863, constisnull: false, constbyval: true, location: 299}
        }
      }
    }
  },
  targetList = List with 4 elements = {
    0 = TargetEntry {resno: 1, resname: 'l_orderkey', ressortgroupref: 3, resorigtbl: 74565, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 43} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 48} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769645776, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
                  }
                }
              }
            }
          }
        }
      }
    },
    2 = TargetEntry {resno: 3, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77}
    },
    3 = TargetEntry {resno: 4, resname: 'o_shippriority', ressortgroupref: 4, resorigtbl: 74562, resorigcol: 8, resjunk: false} = {
      expr = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92}
    }
  },
  groupClause = List with 3 elements = {
    0 = SortGroupClause {tleSortGroupRef: 3, eqop: 96, sortop: 97, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1093, sortop: 1095, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 4, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
  },
  sortClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1093, sortop: 1095, nulls_first: false, hashable: true}
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 10, constisnull: false, constbyval: true, location: -1}
}
$5 = LimitPath T_Limit (cost=0.06..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) limitOption: LIMIT_OPTION_COUNT = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [3, 1, 2, 4],
    exprs = List with 4 elements = {
      0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9},
      1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 43} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 48} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769645776, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
                  }
                }
              }
            }
          }
        }
      },
      2 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
      3 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92}
    }
  },
  path.pathkeys = List with 2 elements = {
    0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 3), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
              aggargtypes = OidList with 1 elements = {1700},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 43} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                      1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 48} = {
                        args = List with 2 elements = {
                          0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769703760, constisnull: false, constbyval: false, location: -1},
                          1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
                        }
                      }
                    }
                  }
                }
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 1 2 3)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 434, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {434},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1082} = {
            em_expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
            em_jdomain = JoinDomain jd_relids: (b 1 2 3)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.06..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [3, 1, 2, 4],
      exprs = List with 4 elements = {
        0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9},
        1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 43} = {
                args = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                  1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 48} = {
                    args = List with 2 elements = {
                      0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769645776, constisnull: false, constbyval: false, location: -1},
                      1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
                    }
                  }
                }
              }
            }
          }
        },
        2 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
        3 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92}
      }
    },
    path.pathkeys = List with 2 elements = {
      0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 3), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1988},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
              em_expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
                aggargtypes = OidList with 1 elements = {1700},
                args = List with 1 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 43} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                        1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 48} = {
                          args = List with 2 elements = {
                            0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769703760, constisnull: false, constbyval: false, location: -1},
                            1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
                          }
                        }
                      }
                    }
                  }
                }
              },
              em_jdomain = JoinDomain jd_relids: (b 1 2 3)
            }
          }
        }
      },
      1 = PathKey {pk_opfamily: 434, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {434},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1082} = {
              em_expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3)
            }
          }
        }
      }
    },
    subpath = AggPath T_Agg (cost=0.04..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
      path.parent = <>,
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [3, 1, 2, 4],
        exprs = List with 4 elements = {
          0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9},
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 43} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 48} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769645776, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
                      }
                    }
                  }
                }
              }
            }
          },
          2 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
          3 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92}
        }
      },
      subpath = ProjectionPath T_Result (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
        path.parent = (b 1 2 3),
        path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          sortgrouprefs = [3, 2, 4, 0, 0],
          exprs = List with 5 elements = {
            0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9},
            1 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
            2 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92},
            3 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
            4 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
          }
        },
        subpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 1 2 3),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 5 elements = {
              0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
              1 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92},
              2 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9},
              3 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
              4 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 1 2),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 12, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 3 elements = {
                0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
                1 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92},
                2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 226}
              }
            },
            jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 1),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 1 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 185}
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 2),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 16, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 4 elements = {
                  0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77},
                  1 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92},
                  2 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 197},
                  3 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 226}
                }
              }
            },
            jpath.joinrestrictinfo = List with 1 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 6, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 185},
                    1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 197}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 185},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3)
                },
                right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 197},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3)
                }
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 3),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 40, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 3 elements = {
                0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9},
                1 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                2 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 3), rinfo_serial: 7, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 226},
                  1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 213}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 226},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3)
              },
              right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 213},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3)
              }
            }
          }
        }
      },
      groupClause = List with 3 elements = {
        0 = SortGroupClause {tleSortGroupRef: 3, eqop: 96, sortop: 97, nulls_first: false, hashable: true},
        1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1093, sortop: 1095, nulls_first: false, hashable: true},
        2 = SortGroupClause {tleSortGroupRef: 4, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 10, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 2, standard_planner (parse=0x5591d14556b0, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$6 = Limit (cost=0.06..0.07 rows=1 width=44 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {limitOption: LIMIT_OPTION_COUNT, uniqNumCols: 0} = {
  plan.targetlist = List with 4 elements = {
    0 = TargetEntry {resno: 1, resname: 'l_orderkey', ressortgroupref: 3, resorigtbl: 74565, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    2 = TargetEntry {resno: 3, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: -2, varattno: 3, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
    },
    3 = TargetEntry {resno: 4, resname: 'o_shippriority', ressortgroupref: 4, resorigtbl: 74562, resorigcol: 8, resjunk: false} = {
      expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
    }
  },
  plan.lefttree = Sort (cost=0.06..0.07 rows=1 width=44 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 2 = {
    sortColIdx = [2, 3],
    sortOperators = [1756, 1095],
    collations = [0, 0],
    nullsFirst = [True, False],
    plan.targetlist = List with 4 elements = {
      0 = TargetEntry {resno: 1, resname: 'l_orderkey', ressortgroupref: 3, resorigtbl: 74565, resorigcol: 1, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 'o_shippriority', ressortgroupref: 4, resorigtbl: 74562, resorigcol: 8, resjunk: false} = {
        expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
      }
    },
    plan.lefttree = Agg (cost=0.04..0.05 rows=1 width=44 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 3, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
      grpColIdx = [1, 2, 3],
      grpOperators = [96, 1093, 96],
      grpCollations = [0, 0, 0],
      plan.targetlist = List with 4 elements = {
        0 = TargetEntry {resno: 1, resname: 'l_orderkey', ressortgroupref: 3, resorigtbl: 74565, resorigcol: 1, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 43} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 48} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769645776, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        2 = TargetEntry {resno: 3, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 'o_shippriority', ressortgroupref: 4, resorigtbl: 74562, resorigcol: 8, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        }
      },
      plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=48 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
        join.plan.targetlist = List with 5 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 3, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 9}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 4, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 27}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 50}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=12 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
          join.plan.targetlist = List with 3 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 77}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: 92}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 226}
            }
          },
          join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
            scan.plan.targetlist = List with 8 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
              }
            },
            scan.plan.qual = List with 1 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 166} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 153},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769638712, constisnull: false, constbyval: false, location: 168}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=16 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
            scan.plan.targetlist = List with 9 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
              },
              8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
              }
            },
            scan.plan.qual = List with 1 elements = {
              0 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 255} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 243},
                  1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549863, constisnull: false, constbyval: true, location: 262}
                }
              }
            }
          },
          join.joinqual = List with 1 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 185},
                1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 197}
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=40 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
          scan.plan.targetlist = List with 16 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
            },
            8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
            },
            9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 10, location: -1}
            },
            10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: -1}
            },
            11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 12, location: -1}
            },
            12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 13, location: -1}
            },
            13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 14, location: -1}
            },
            14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 15, location: -1}
            },
            15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 16, location: -1}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = OpExpr {opno: 1097, opfuncid: 1089, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 292} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 281},
                1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549863, constisnull: false, constbyval: true, location: 299}
              }
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 226},
              1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 213}
            }
          }
        }
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 10, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 1, standard_planner (parse=0x5591d1455388, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$7 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 360} = {
  rtable = List with 2 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 12 13), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = JoinExpr {jointype: JOIN_SEMI, isNatural: false, rtindex: 0} = {
        larg = FromExpr  = {
          fromlist = List with 1 elements = {
            0 = RangeTblRef rtindex: 1
          },
          quals = List with 2 elements = {
            0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 86} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 74},
                1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549241, constisnull: false, constbyval: true, location: 94}
              }
            },
            1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 125} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 113},
                1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446546822509551616, constisnull: false, constbyval: true, location: -1}
              }
            }
          }
        },
        rarg = RangeTblRef rtindex: 2,
        quals = List with 2 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 251} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240},
              1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 253}
            }
          },
          1 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 287} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 274},
              1 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 289}
            }
          }
        }
      }
    }
  },
  targetList = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'o_orderpriority', ressortgroupref: 1, resorigtbl: 74562, resorigcol: 6, resjunk: false} = {
      expr = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'order_count', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 28}
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  }
}
$8 = AggPath T_Agg (cost=0.02..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 0} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 72, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 0],
    exprs = List with 2 elements = {
      0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9},
      1 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 28}
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.02..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 64, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1],
      exprs = List with 1 elements = {
        0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9}
      }
    },
    path.pathkeys = List with 1 elements = {
      0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      }
    },
    subpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
      jpath.path.parent = (b 1 2),
      jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 64, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1],
        exprs = List with 1 elements = {
          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9}
        }
      },
      jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
        parent = (b 1),
        pathtarget = PathTarget {cost: (0.00..0.00), width: 68, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 2 elements = {
            0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9},
            1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 253}
          }
        }
      },
      jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
        parent = (b 2),
        pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 1 elements = {
            0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240}
          }
        }
      },
      jpath.joinrestrictinfo = List with 1 elements = {
        0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 5, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
          clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 253},
              1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240}
            }
          },
          mergeopfamilies = OidList with 1 elements = {1976},
          left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 253},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          },
          right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1455388, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$9 = Agg (cost=0.02..0.04 rows=1 width=72 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 0, aggParams: 0x0} = {
  grpColIdx = [1],
  grpOperators = [1054],
  grpCollations = [100],
  plan.targetlist = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'o_orderpriority', ressortgroupref: 1, resorigtbl: 74562, resorigcol: 6, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'order_count', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 28}
    }
  },
  plan.lefttree = Sort (cost=0.02..0.03 rows=1 width=64 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 1 = {
    sortColIdx = [1],
    sortOperators = [1058],
    collations = [100],
    nullsFirst = [False],
    plan.targetlist = List with 1 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
      }
    },
    plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=64 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_SEMI, join.inner_unique: false} = {
      join.plan.targetlist = List with 1 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 9}
        }
      },
      join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=68 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
        scan.plan.targetlist = List with 9 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
          },
          7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
          },
          8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: -1}
          }
        },
        scan.plan.qual = List with 2 elements = {
          0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 86} = {
            args = List with 2 elements = {
              0 = Var {varno: 1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 74},
              1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549241, constisnull: false, constbyval: true, location: 94}
            }
          },
          1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 125} = {
            args = List with 2 elements = {
              0 = Var {varno: 1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 113},
              1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446546822509551616, constisnull: false, constbyval: true, location: -1}
            }
          }
        }
      },
      join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
        scan.plan.targetlist = List with 16 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
          },
          7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
          },
          8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
          },
          9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 10, location: -1}
          },
          10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 11, location: -1}
          },
          11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: -1}
          },
          12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: -1}
          },
          13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 14, location: -1}
          },
          14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: -1}
          },
          15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 16, location: -1}
          }
        },
        scan.plan.qual = List with 1 elements = {
          0 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 287} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 274},
              1 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 289}
            }
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 253},
            1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240}
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d1455e38, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$10 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 484} = {
  rtable = List with 6 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'customer' = {
        colnames = List with 8 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_name' ],
          2 = String [ 'c_address' ],
          3 = String [ 'c_nationkey' ],
          4 = String [ 'c_phone' ],
          5 = String [ 'c_acctbal' ],
          6 = String [ 'c_mktsegment' ],
          7 = String [ 'c_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 4, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    4 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 5, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'nation' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    },
    5 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74547, relkind: 114 'r', rellockmode: 1, perminfoindex: 6, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'region' = {
        colnames = List with 3 elements = {
          0 = String [ 'r_regionkey' ],
          1 = String [ 'r_name' ],
          2 = String [ 'r_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 6 elements = {
    0 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 12), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 10 13 14), insertedCols: 0x0, updatedCols: 0x0},
    3 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    4 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10), insertedCols: 0x0, updatedCols: 0x0},
    5 = RTEPermissionInfo {relid: 74547, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 6 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2,
      2 = RangeTblRef rtindex: 3,
      3 = RangeTblRef rtindex: 4,
      4 = RangeTblRef rtindex: 5,
      5 = RangeTblRef rtindex: 6
    },
    quals = List with 9 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 158} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 148},
          1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 160}
        }
      },
      1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 187} = {
        args = List with 2 elements = {
          0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 176},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 189}
        }
      },
      2 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 216} = {
        args = List with 2 elements = {
          0 = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 206},
          1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 218}
        }
      },
      3 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 246} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
          1 = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 248}
        }
      },
      4 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
        args = List with 2 elements = {
          0 = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 266},
          1 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 280}
        }
      },
      5 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 310} = {
        args = List with 2 elements = {
          0 = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 298},
          1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 312}
        }
      },
      6 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 337} = {
        args = List with 2 elements = {
          0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 330},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769646688, constisnull: false, constbyval: false, location: 339}
        }
      },
      7 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 364} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 352},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549425, constisnull: false, constbyval: true, location: 372}
        }
      },
      8 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 403} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 391},
          1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446586307309551616, constisnull: false, constbyval: true, location: -1}
        }
      }
    }
  },
  targetList = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'n_name', ressortgroupref: 2, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 39} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 44} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769647352, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true}
  }
}
$11 = SortPath T_Sort (cost=0.10..0.10 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 136, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [2, 1],
    exprs = List with 2 elements = {
      0 = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9},
      1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 39} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 44} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769647352, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 3), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
              aggargtypes = OidList with 1 elements = {1700},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 39} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                      1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 44} = {
                        args = List with 2 elements = {
                          0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769719752, constisnull: false, constbyval: false, location: -1},
                          1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
                        }
                      }
                    }
                  }
                }
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
          }
        }
      }
    }
  },
  subpath = AggPath T_Agg (cost=0.08..0.09 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 136, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [2, 1],
      exprs = List with 2 elements = {
        0 = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9},
        1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 39} = {
                args = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                  1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 44} = {
                    args = List with 2 elements = {
                      0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769647352, constisnull: false, constbyval: false, location: -1},
                      1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    subpath = ProjectionPath T_Result (cost=0.00..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
      path.parent = (b 1 2 3 4 5 6),
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 140, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [2, 0, 0],
        exprs = List with 3 elements = {
          0 = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9},
          1 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
          2 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
        }
      },
      subpath = NestPath T_NestLoop (cost=0.00..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        jpath.path.parent = (b 1 2 3 4 5 6),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 140, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 3 elements = {
            0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
            1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46},
            2 = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9}
          }
        },
        jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 1 2 3 4 5),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 144, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 4 elements = {
              0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
              1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46},
              2 = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9},
              3 = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 298}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 1 2 3 4),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 4 elements = {
                0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
                1 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                2 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46},
                3 = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 248}
              }
            },
            jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
              jpath.path.parent = (b 1 2 3),
              jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 4 elements = {
                  0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
                  1 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                  2 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46},
                  3 = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 206}
                }
              },
              jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
                jpath.path.parent = (b 1 2),
                jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
                    1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 189}
                  }
                },
                jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 1),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 148},
                      1 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234}
                    }
                  }
                },
                jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 2),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 160},
                      1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 189}
                    }
                  }
                },
                jpath.joinrestrictinfo = List with 1 elements = {
                  0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 10, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                    clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 148},
                        1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 160}
                      }
                    },
                    mergeopfamilies = OidList with 1 elements = {1976},
                    left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 148},
                      em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                    },
                    right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 160},
                      em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                    }
                  }
                }
              },
              jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 3),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 4 elements = {
                    0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46},
                    2 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 176},
                    3 = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 206}
                  }
                }
              },
              jpath.joinrestrictinfo = List with 1 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 3), rinfo_serial: 11, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                  clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 189},
                      1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 176}
                    }
                  },
                  mergeopfamilies = OidList with 1 elements = {1976},
                  left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 189},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                  },
                  right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 176},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                  }
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 4),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 2 elements = {
                  0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 218},
                  1 = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 248}
                }
              }
            },
            jpath.joinrestrictinfo = List with 2 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 4), required_relids: (b 3 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 4), right_relids: (b 3), rinfo_serial: 12, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 218},
                    1 = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 206}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 218},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                },
                right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 206},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                }
              },
              1 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 4), required_relids: (b 1 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 4), rinfo_serial: 16, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
                    1 = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 248}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                },
                right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 248},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                }
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 5),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 112, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 3 elements = {
                0 = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9},
                1 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 280},
                2 = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 298}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 5), required_relids: (b 1 5), incompatible_relids: <>, outer_relids: <>, left_relids: (b 5), right_relids: (b 1), rinfo_serial: 13, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 280},
                  1 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 280},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
              },
              right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
              }
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 6),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 1 elements = {
              0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 312}
            }
          }
        },
        jpath.joinrestrictinfo = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 5 6), required_relids: (b 5 6), incompatible_relids: <>, outer_relids: <>, left_relids: (b 6), right_relids: (b 5), rinfo_serial: 15, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 312},
                1 = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 298}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 312},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
            },
            right_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 298},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
            }
          }
        }
      }
    },
    groupClause = List with 1 elements = {
      0 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1455e38, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$12 = Sort (cost=0.10..0.10 rows=1 width=136 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) numCols: 1 = {
  sortColIdx = [2],
  sortOperators = [1756],
  collations = [0],
  nullsFirst = [True],
  plan.targetlist = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'n_name', ressortgroupref: 2, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    }
  },
  plan.lefttree = Agg (cost=0.08..0.09 rows=1 width=136 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
    grpColIdx = [1],
    grpOperators = [1054],
    grpCollations = [100],
    plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 'n_name', ressortgroupref: 2, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 39} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23},
                  1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 44} = {
                    args = List with 2 elements = {
                      0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769647352, constisnull: false, constbyval: false, location: -1},
                      1 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    plan.lefttree = NestLoop (cost=0.00..0.07 rows=1 width=140 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
      join.plan.targetlist = List with 3 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
        }
      },
      join.plan.lefttree = NestLoop (cost=0.00..0.05 rows=1 width=144 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 4 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 9}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 298}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.04 rows=1 width=44 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
          join.plan.targetlist = List with 4 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 248}
            }
          },
          join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=44 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
            join.plan.targetlist = List with 4 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 23}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 46}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 206}
              }
            },
            join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=8 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
              join.plan.targetlist = List with 2 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 189}
                }
              },
              join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
                scan.plan.targetlist = List with 8 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
                  },
                  7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
                  }
                }
              },
              join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=8 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
                scan.plan.targetlist = List with 9 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
                  },
                  7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
                  },
                  8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
                  }
                },
                scan.plan.qual = List with 2 elements = {
                  0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 364} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 352},
                      1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549425, constisnull: false, constbyval: true, location: 372}
                    }
                  },
                  1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 403} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 391},
                      1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446586307309551616, constisnull: false, constbyval: true, location: -1}
                    }
                  }
                }
              },
              join.joinqual = List with 1 elements = {
                0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 148},
                    1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 160}
                  }
                }
              }
            },
            join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=44 async_capable=0 plan_id=9 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
              scan.plan.targetlist = List with 16 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
                },
                7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
                },
                8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
                },
                9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 10, location: -1}
                },
                10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: -1}
                },
                11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 12, location: -1}
                },
                12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 13, location: -1}
                },
                13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 14, location: -1}
                },
                14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 15, location: -1}
                },
                15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 16, location: -1}
                }
              }
            },
            join.joinqual = List with 1 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 189},
                  1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 176}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=10 parallel_aware=False parallel_safe = True) scan.scanrelid: 4 = {
            scan.plan.targetlist = List with 7 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 4, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 4, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 4, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: -1}
              }
            }
          },
          join.joinqual = List with 2 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 218},
                1 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 206}
              }
            },
            1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234},
                1 = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: 248}
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=112 async_capable=0 plan_id=11 parallel_aware=False parallel_safe = True) scan.scanrelid: 5 = {
          scan.plan.targetlist = List with 4 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 5, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 5, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: -1}
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 280},
              1 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 234}
            }
          }
        }
      },
      join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=12 parallel_aware=False parallel_safe = True) scan.scanrelid: 6 = {
        scan.plan.targetlist = List with 3 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 6, varattno: 3, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: -1}
          }
        },
        scan.plan.qual = List with 1 elements = {
          0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 337} = {
            args = List with 2 elements = {
              0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 330},
              1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769646688, constisnull: false, constbyval: false, location: 339}
            }
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 312},
            1 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 298}
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d138cb48, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$13 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 239} = {
  rtable = List with 1 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 1 elements = {
    0 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 12 13 14 18), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = RangeTblRef rtindex: 1
    },
    quals = List with 5 elements = {
      0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 89} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 78},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549425, constisnull: false, constbyval: true, location: 97}
        }
      },
      1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 127} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 116},
          1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446586307309551616, constisnull: false, constbyval: true, location: -1}
        }
      },
      2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 184} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 173},
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769607624, constisnull: false, constbyval: false, location: -1}
        }
      },
      3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 184} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 173},
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769646536, constisnull: false, constbyval: false, location: -1}
        }
      },
      4 = OpExpr {opno: 1754, opfuncid: 1722, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 235} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 224},
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769646984, constisnull: false, constbyval: false, location: -1}
        }
      }
    }
  },
  targetList = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 29} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
                1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 31}
              }
            }
          }
        }
      }
    }
  }
}
$14 = AggPath T_Agg (cost=0.01..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 32, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [0],
    exprs = List with 1 elements = {
      0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 29} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
                1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 31}
              }
            }
          }
        }
      }
    }
  },
  subpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
    parent = (b 1),
    pathtarget = PathTarget {cost: (0.00..0.00), width: 36, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      exprs = List with 2 elements = {
        0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
        1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 31}
      }
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d138cb48, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$15 = Agg (cost=0.01..0.02 rows=1 width=32 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numCols: 0, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
  plan.targetlist = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 29} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
                1 = Var {varno: -2, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 31}
              }
            }
          }
        }
      }
    }
  },
  plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=36 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
    scan.plan.targetlist = List with 16 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
      },
      4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
      },
      5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
      },
      6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
      },
      7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
      },
      8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: -1}
      },
      9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: -1}
      },
      10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: -1}
      },
      11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 12, location: -1}
      },
      12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 13, location: -1}
      },
      13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 14, location: -1}
      },
      14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 15, location: -1}
      },
      15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 16, location: -1}
      }
    },
    scan.plan.qual = List with 5 elements = {
      0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 89} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 78},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549425, constisnull: false, constbyval: true, location: 97}
        }
      },
      1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 127} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 116},
          1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446586307309551616, constisnull: false, constbyval: true, location: -1}
        }
      },
      2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 184} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 173},
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769607624, constisnull: false, constbyval: false, location: -1}
        }
      },
      3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 184} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 173},
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769646536, constisnull: false, constbyval: false, location: -1}
        }
      },
      4 = OpExpr {opno: 1754, opfuncid: 1722, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 235} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 224},
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769646984, constisnull: false, constbyval: false, location: -1}
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d1456e88, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$16 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 857} = {
  rtable = List with 7 elements = {
    0 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'shipping',
      eref = Alias aliasname: 'shipping' = {
        colnames = List with 4 elements = {
          0 = String [ 'supp_nation' ],
          1 = String [ 'cust_nation' ],
          2 = String [ 'l_year' ],
          3 = String [ 'volume' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    4 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 4, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'customer' = {
        colnames = List with 8 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_name' ],
          2 = String [ 'c_address' ],
          3 = String [ 'c_nationkey' ],
          4 = String [ 'c_phone' ],
          5 = String [ 'c_acctbal' ],
          6 = String [ 'c_mktsegment' ],
          7 = String [ 'c_comment' ]
        }
      }
    },
    5 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 5, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'n1',
      eref = Alias aliasname: 'n1' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    },
    6 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 6, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'n2',
      eref = Alias aliasname: 'n2' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 6 elements = {
    0 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 10 13 14 18), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    3 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    4 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    5 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = FromExpr  = {
        fromlist = List with 6 elements = {
          0 = RangeTblRef rtindex: 2,
          1 = RangeTblRef rtindex: 3,
          2 = RangeTblRef rtindex: 4,
          3 = RangeTblRef rtindex: 5,
          4 = RangeTblRef rtindex: 6,
          5 = RangeTblRef rtindex: 7
        },
        quals = List with 8 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 384} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 374},
              1 = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 386}
            }
          },
          1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 417} = {
            args = List with 2 elements = {
              0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 406},
              1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 419}
            }
          },
          2 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 450} = {
            args = List with 2 elements = {
              0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 440},
              1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 452}
            }
          },
          3 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 484} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472},
              1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 486}
            }
          },
          4 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 523} = {
            args = List with 2 elements = {
              0 = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511},
              1 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525}
            }
          },
          5 = BoolExpr {boolop: OR_EXPR, location: -1} = {
            args = List with 2 elements = {
              0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                args = List with 2 elements = {
                  0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 571} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 561},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711024, constisnull: false, constbyval: false, location: 573}
                    }
                  },
                  1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 596} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 586},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711336, constisnull: false, constbyval: false, location: 598}
                    }
                  }
                }
              },
              1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                args = List with 2 elements = {
                  0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 631} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 621},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711760, constisnull: false, constbyval: false, location: 633}
                    }
                  },
                  1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 657} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 647},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769712072, constisnull: false, constbyval: false, location: 659}
                    }
                  }
                }
              }
            }
          },
          6 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 698} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 687},
              1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549790, constisnull: false, constbyval: true, location: 711}
            }
          },
          7 = OpExpr {opno: 1096, opfuncid: 1088, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 698} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 687},
              1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550520, constisnull: false, constbyval: true, location: 733}
            }
          }
        }
      }
    }
  },
  targetList = List with 4 elements = {
    0 = TargetEntry {resno: 1, resname: 'supp_nation', ressortgroupref: 1, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98}
    },
    1 = TargetEntry {resno: 2, resname: 'cust_nation', ressortgroupref: 2, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130}
    },
    2 = TargetEntry {resno: 3, resname: 'l_year', ressortgroupref: 3, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 162} = {
        args = List with 2 elements = {
          0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769717152, constisnull: false, constbyval: false, location: 170},
          1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
        }
      }
    },
    3 = TargetEntry {resno: 4, resname: 'revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 49} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 225} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 230} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769720016, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  groupClause = List with 3 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 3, eqop: 1752, sortop: 1754, nulls_first: false, hashable: true}
  },
  sortClause = List with 3 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 3, eqop: 1752, sortop: 1754, nulls_first: false, hashable: true}
  }
}
$17 = AggPath T_Agg (cost=0.08..0.11 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 272, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 2, 3, 0],
    exprs = List with 4 elements = {
      0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98},
      1 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130},
      2 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 162} = {
        args = List with 2 elements = {
          0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769717152, constisnull: false, constbyval: false, location: 170},
          1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
        }
      },
      3 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 49} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 225} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 230} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769720016, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  path.pathkeys = List with 3 elements = {
    0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 6), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98},
            em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 7), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130},
            em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
          }
        }
      }
    },
    2 = PathKey {pk_opfamily: 1988, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 3), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 3, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 162} = {
              args = List with 2 elements = {
                0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769804496, constisnull: false, constbyval: false, location: 170},
                1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.08..0.08 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 276, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1, 2, 3, 0, 0],
      exprs = List with 5 elements = {
        0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98},
        1 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130},
        2 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 162} = {
          args = List with 2 elements = {
            0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769717152, constisnull: false, constbyval: false, location: 170},
            1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
          }
        },
        3 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
        4 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
      }
    },
    path.pathkeys = List with 3 elements = {
      0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 6), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        }
      },
      1 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 7), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        }
      },
      2 = PathKey {pk_opfamily: 1988, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 3), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 3, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1988},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
              em_expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 162} = {
                args = List with 2 elements = {
                  0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769804496, constisnull: false, constbyval: false, location: 170},
                  1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
                }
              },
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        }
      }
    },
    subpath = ProjectionPath T_Result (cost=0.01..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
      path.parent = (b 2 3 4 5 6 7),
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 276, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 2, 3, 0, 0],
        exprs = List with 5 elements = {
          0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98},
          1 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130},
          2 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 162} = {
            args = List with 2 elements = {
              0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769717152, constisnull: false, constbyval: false, location: 170},
              1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
            }
          },
          3 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
          4 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
        }
      },
      subpath = HashPath T_HashJoin (cost=0.01..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {num_batches: 1, inner_rows_total: 1} = {
        jpath.path.parent = (b 2 3 4 5 6 7),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 248, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 5 elements = {
            0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180},
            1 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
            2 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232},
            3 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98},
            4 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130}
          }
        },
        jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 2 3 4 5 6),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 148, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 5 elements = {
              0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180},
              1 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
              2 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232},
              3 = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511},
              4 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 2 3 4 5),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 5 elements = {
                0 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472},
                1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180},
                2 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
                3 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232},
                4 = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511}
              }
            },
            jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
              jpath.path.parent = (b 2 3 4),
              jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 5 elements = {
                  0 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472},
                  1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180},
                  2 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
                  3 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232},
                  4 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 452}
                }
              },
              jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
                jpath.path.parent = (b 2 3),
                jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 5 elements = {
                    0 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472},
                    1 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180},
                    2 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
                    3 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232},
                    4 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 419}
                  }
                },
                jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 2),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 374},
                      1 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472}
                    }
                  }
                },
                jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 3),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 5 elements = {
                      0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180},
                      1 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
                      2 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232},
                      3 = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 386},
                      4 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 419}
                    }
                  }
                },
                jpath.joinrestrictinfo = List with 1 elements = {
                  0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 3), rinfo_serial: 19, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                    clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 374},
                        1 = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 386}
                      }
                    },
                    mergeopfamilies = OidList with 1 elements = {1976},
                    left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 374},
                      em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                    },
                    right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 386},
                      em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                    }
                  }
                }
              },
              jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 4),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 406},
                    1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 452}
                  }
                }
              },
              jpath.joinrestrictinfo = List with 1 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 4), required_relids: (b 3 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 3), right_relids: (b 4), rinfo_serial: 20, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                  clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 419},
                      1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 406}
                    }
                  },
                  mergeopfamilies = OidList with 1 elements = {1976},
                  left_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 419},
                    em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                  },
                  right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 406},
                    em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                  }
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 5),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 2 elements = {
                  0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 440},
                  1 = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511}
                }
              }
            },
            jpath.joinrestrictinfo = List with 1 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 4 5), required_relids: (b 4 5), incompatible_relids: <>, outer_relids: <>, left_relids: (b 5), right_relids: (b 4), rinfo_serial: 21, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 440},
                    1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 452}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 440},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                },
                right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 452},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                }
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 6),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98},
                1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 486}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 6), required_relids: (b 2 6), incompatible_relids: <>, outer_relids: <>, left_relids: (b 6), right_relids: (b 2), rinfo_serial: 22, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 486},
                  1 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 486},
                em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
              },
              right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472},
                em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
              }
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 7),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 2 elements = {
              0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130},
              1 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525}
            }
          }
        },
        jpath.joinrestrictinfo = List with 2 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 2, clause_relids: (b 6 7), required_relids: (b 6 7), incompatible_relids: <>, outer_relids: <>, left_relids: <>, right_relids: <>, rinfo_serial: 10, eval_cost: (0.00..0.01), norm_selec: 0.5025, outer_selec: 0.0000, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
            clause = BoolExpr {boolop: OR_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                  args = List with 2 elements = {
                    0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 571} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 561},
                        1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711024, constisnull: false, constbyval: false, location: 573}
                      }
                    },
                    1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 596} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 586},
                        1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711336, constisnull: false, constbyval: false, location: 598}
                      }
                    }
                  }
                },
                1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                  args = List with 2 elements = {
                    0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 631} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 621},
                        1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711760, constisnull: false, constbyval: false, location: 633}
                      }
                    },
                    1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 657} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 647},
                        1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769712072, constisnull: false, constbyval: false, location: 659}
                      }
                    }
                  }
                }
              }
            },
            orclause = BoolExpr {boolop: OR_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                  args = List with 2 elements = {
                    0 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 6), required_relids: (b 6), incompatible_relids: <>, outer_relids: <>, left_relids: (b 6), right_relids: <>, rinfo_serial: 6, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                      clause = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 571} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 561},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711024, constisnull: false, constbyval: false, location: 573}
                        }
                      }
                    },
                    1 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 7), required_relids: (b 7), incompatible_relids: <>, outer_relids: <>, left_relids: (b 7), right_relids: <>, rinfo_serial: 7, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                      clause = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 596} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 586},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711336, constisnull: false, constbyval: false, location: 598}
                        }
                      }
                    }
                  }
                },
                1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                  args = List with 2 elements = {
                    0 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 6), required_relids: (b 6), incompatible_relids: <>, outer_relids: <>, left_relids: (b 6), right_relids: <>, rinfo_serial: 8, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                      clause = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 631} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 621},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711760, constisnull: false, constbyval: false, location: 633}
                        }
                      }
                    },
                    1 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 7), required_relids: (b 7), incompatible_relids: <>, outer_relids: <>, left_relids: (b 7), right_relids: <>, rinfo_serial: 9, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                      clause = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 657} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 647},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769712072, constisnull: false, constbyval: false, location: 659}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          1 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 5 7), required_relids: (b 5 7), incompatible_relids: <>, outer_relids: <>, left_relids: (b 7), right_relids: (b 5), rinfo_serial: 23, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525},
                1 = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            },
            right_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        },
        path_hashclauses = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 5 7), required_relids: (b 5 7), incompatible_relids: <>, outer_relids: <>, left_relids: (b 7), right_relids: (b 5), rinfo_serial: 23, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525},
                1 = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            },
            right_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        }
      }
    }
  },
  groupClause = List with 3 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 3, eqop: 1752, sortop: 1754, nulls_first: false, hashable: true}
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1456e88, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$18 = Agg (cost=0.08..0.11 rows=1 width=272 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 3, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
  grpColIdx = [1, 2, 3],
  grpOperators = [1054, 1054, 1752],
  grpCollations = [100, 100, 0],
  plan.targetlist = List with 4 elements = {
    0 = TargetEntry {resno: 1, resname: 'supp_nation', ressortgroupref: 1, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'cust_nation', ressortgroupref: 2, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    2 = TargetEntry {resno: 3, resname: 'l_year', ressortgroupref: 3, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    3 = TargetEntry {resno: 4, resname: 'revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 49} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 225} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 230} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769720016, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  plan.lefttree = Sort (cost=0.08..0.08 rows=1 width=276 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 3 = {
    sortColIdx = [1, 2, 3],
    sortOperators = [1058, 1058, 1754],
    collations = [100, 100, 0],
    nullsFirst = [False, False, False],
    plan.targetlist = List with 5 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 3, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
      },
      4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
      }
    },
    plan.lefttree = HashJoin (cost=0.01..0.07 rows=1 width=276 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
      join.plan.targetlist = List with 5 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -1, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 3, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 162} = {
            args = List with 2 elements = {
              0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769717152, constisnull: false, constbyval: false, location: 170},
              1 = Var {varno: -2, varattno: 1, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
            }
          }
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209}
        },
        4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
        }
      },
      join.plan.lefttree = NestLoop (cost=0.00..0.05 rows=1 width=148 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 5 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 98}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.04 rows=1 width=48 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
          join.plan.targetlist = List with 5 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 2, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511}
            }
          },
          join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=48 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
            join.plan.targetlist = List with 5 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 2, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 452}
              }
            },
            join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=48 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
              join.plan.targetlist = List with 5 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 180}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 209}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 232}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 419}
                }
              },
              join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
                scan.plan.targetlist = List with 7 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
                  }
                }
              },
              join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=48 async_capable=0 plan_id=8 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
                scan.plan.targetlist = List with 16 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
                  },
                  7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
                  },
                  8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
                  },
                  9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 10, location: -1}
                  },
                  10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: -1}
                  },
                  11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 12, location: -1}
                  },
                  12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 13, location: -1}
                  },
                  13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 14, location: -1}
                  },
                  14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 15, location: -1}
                  },
                  15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 16, location: -1}
                  }
                },
                scan.plan.qual = List with 2 elements = {
                  0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 698} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 687},
                      1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549790, constisnull: false, constbyval: true, location: 711}
                    }
                  },
                  1 = OpExpr {opno: 1096, opfuncid: 1088, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 698} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: 687},
                      1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550520, constisnull: false, constbyval: true, location: 733}
                    }
                  }
                }
              },
              join.joinqual = List with 1 elements = {
                0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 374},
                    1 = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 386}
                  }
                }
              }
            },
            join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=9 parallel_aware=False parallel_safe = True) scan.scanrelid: 4 = {
              scan.plan.targetlist = List with 9 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: -1}
                },
                7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 8, location: -1}
                },
                8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 9, location: -1}
                }
              }
            },
            join.joinqual = List with 1 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 419},
                  1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 406}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=10 parallel_aware=False parallel_safe = True) scan.scanrelid: 5 = {
            scan.plan.targetlist = List with 8 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 7, location: -1}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 8, location: -1}
              }
            }
          },
          join.joinqual = List with 1 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 440},
                1 = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 452}
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=108 async_capable=0 plan_id=11 parallel_aware=False parallel_safe = True) scan.scanrelid: 6 = {
          scan.plan.targetlist = List with 4 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: -1}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = BoolExpr {boolop: OR_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 571} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 561},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711024, constisnull: false, constbyval: false, location: 573}
                  }
                },
                1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 631} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 6, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 621},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711760, constisnull: false, constbyval: false, location: 633}
                  }
                }
              }
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 486},
              1 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 472}
            }
          }
        }
      },
      join.plan.righttree = Hash (cost=0.00..0.00 rows=1 width=108 async_capable=0 plan_id=12 parallel_aware=False parallel_safe = True) {skewTable: 74559, skewColumn: 4, skewInherit: false, rows_total: 0} = {
        plan.targetlist = List with 2 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: -1}
          }
        },
        plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=108 async_capable=0 plan_id=13 parallel_aware=False parallel_safe = True) scan.scanrelid: 7 = {
          scan.plan.targetlist = List with 2 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 130}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = BoolExpr {boolop: OR_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 596} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 586},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711336, constisnull: false, constbyval: false, location: 598}
                  }
                },
                1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 657} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 647},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769712072, constisnull: false, constbyval: false, location: 659}
                  }
                }
              }
            }
          }
        },
        hashkeys = List with 1 elements = {
          0 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525}
        }
      },
      join.joinqual = List with 1 elements = {
        0 = BoolExpr {boolop: OR_EXPR, location: -1} = {
          args = List with 2 elements = {
            0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 571} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 561},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711024, constisnull: false, constbyval: false, location: 573}
                  }
                },
                1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 596} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -1, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 586},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711336, constisnull: false, constbyval: false, location: 598}
                  }
                }
              }
            },
            1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 631} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 621},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769711760, constisnull: false, constbyval: false, location: 633}
                  }
                },
                1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 657} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -1, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 647},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769712072, constisnull: false, constbyval: false, location: 659}
                  }
                }
              }
            }
          }
        }
      },
      hashclauses = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511},
            1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 525}
          }
        }
      },
      hashoperators = OidList with 1 elements = {96},
      hashcollations = OidList with 1 elements = {0},
      hashkeys = List with 1 elements = {
        0 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 511}
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d1456cf8, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$19 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 838} = {
  rtable = List with 9 elements = {
    0 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'all_nations',
      eref = Alias aliasname: 'all_nations' = {
        colnames = List with 3 elements = {
          0 = String [ 'o_year' ],
          1 = String [ 'volume' ],
          2 = String [ 'nation' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74550, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'part' = {
        colnames = List with 9 elements = {
          0 = String [ 'p_partkey' ],
          1 = String [ 'p_name' ],
          2 = String [ 'p_mfgr' ],
          3 = String [ 'p_brand' ],
          4 = String [ 'p_type' ],
          5 = String [ 'p_size' ],
          6 = String [ 'p_container' ],
          7 = String [ 'p_retailprice' ],
          8 = String [ 'p_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    4 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 4, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    5 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 5, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'customer' = {
        colnames = List with 8 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_name' ],
          2 = String [ 'c_address' ],
          3 = String [ 'c_nationkey' ],
          4 = String [ 'c_phone' ],
          5 = String [ 'c_acctbal' ],
          6 = String [ 'c_mktsegment' ],
          7 = String [ 'c_comment' ]
        }
      }
    },
    6 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 6, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'n1',
      eref = Alias aliasname: 'n1' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    },
    7 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 7, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'n2',
      eref = Alias aliasname: 'n2' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    },
    8 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74547, relkind: 114 'r', rellockmode: 1, perminfoindex: 8, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'region' = {
        colnames = List with 3 elements = {
          0 = String [ 'r_regionkey' ],
          1 = String [ 'r_name' ],
          2 = String [ 'r_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 8 elements = {
    0 = RTEPermissionInfo {relid: 74550, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 12), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 13 14), insertedCols: 0x0, updatedCols: 0x0},
    3 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 12), insertedCols: 0x0, updatedCols: 0x0},
    4 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    5 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 10), insertedCols: 0x0, updatedCols: 0x0},
    6 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    7 = RTEPermissionInfo {relid: 74547, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = FromExpr  = {
        fromlist = List with 8 elements = {
          0 = RangeTblRef rtindex: 2,
          1 = RangeTblRef rtindex: 3,
          2 = RangeTblRef rtindex: 4,
          3 = RangeTblRef rtindex: 5,
          4 = RangeTblRef rtindex: 6,
          5 = RangeTblRef rtindex: 7,
          6 = RangeTblRef rtindex: 8,
          7 = RangeTblRef rtindex: 9
        },
        quals = List with 11 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 414} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 404},
              1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 416}
            }
          },
          1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 446} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 436},
              1 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 448}
            }
          },
          2 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 479} = {
            args = List with 2 elements = {
              0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468},
              1 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 481}
            }
          },
          3 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 512} = {
            args = List with 2 elements = {
              0 = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 502},
              1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 514}
            }
          },
          4 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 546} = {
            args = List with 2 elements = {
              0 = Var {varno: 6, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: 534},
              1 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 548}
            }
          },
          5 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 588} = {
            args = List with 2 elements = {
              0 = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573},
              1 = Var {varno: 9, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 1, location: 590}
            }
          },
          6 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 619} = {
            args = List with 2 elements = {
              0 = Var {varno: 9, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 2, location: 612},
              1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769719832, constisnull: false, constbyval: false, location: 621}
            }
          },
          7 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 653} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641},
              1 = Var {varno: 8, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 1, location: 655}
            }
          },
          8 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 692} = {
            args = List with 2 elements = {
              0 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 680},
              1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549790, constisnull: false, constbyval: true, location: 705}
            }
          },
          9 = OpExpr {opno: 1096, opfuncid: 1088, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 692} = {
            args = List with 2 elements = {
              0 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 680},
              1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550520, constisnull: false, constbyval: true, location: 727}
            }
          },
          10 = OpExpr {opno: 98, opfuncid: 67, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 757} = {
            args = List with 2 elements = {
              0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 750}
              },
              1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769721192, constisnull: false, constbyval: false, location: 759}
            }
          }
        }
      }
    }
  },
  targetList = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'o_year', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 138} = {
        args = List with 2 elements = {
          0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769724960, constisnull: false, constbyval: false, location: 146},
          1 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
        }
      }
    },
    1 = TargetEntry {resno: 2, resname: 'mkt_share', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 85} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = CaseExpr {casetype: 1700, casecollid: 0, location: 23} = {
                  args = List with 1 elements = {
                    0 = CaseWhen location: 32 = {
                      expr = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 44} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769706064, constisnull: false, constbyval: false, location: 46}
                        }
                      },
                      result = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 202} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                          1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 207} = {
                            args = List with 2 elements = {
                              0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785776, constisnull: false, constbyval: false, location: -1},
                              1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                            }
                          }
                        }
                      }
                    }
                  },
                  defresult = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786440, constisnull: false, constbyval: false, location: -1}
                }
              }
            }
          },
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 87} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 202} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 207} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769787384, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1754, nulls_first: false, hashable: true}
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1754, nulls_first: false, hashable: true}
  }
}
$20 = AggPath T_Agg (cost=0.10..0.15 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 256} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.01), width: 64, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 0],
    exprs = List with 2 elements = {
      0 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 138} = {
        args = List with 2 elements = {
          0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769724960, constisnull: false, constbyval: false, location: 146},
          1 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
        }
      },
      1 = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 85} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = CaseExpr {casetype: 1700, casecollid: 0, location: 23} = {
                  args = List with 1 elements = {
                    0 = CaseWhen location: 32 = {
                      expr = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 44} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769706064, constisnull: false, constbyval: false, location: 46}
                        }
                      },
                      result = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 202} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                          1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 207} = {
                            args = List with 2 elements = {
                              0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785776, constisnull: false, constbyval: false, location: -1},
                              1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                            }
                          }
                        }
                      }
                    }
                  },
                  defresult = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786440, constisnull: false, constbyval: false, location: -1}
                }
              }
            }
          },
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 87} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 202} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 207} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769787384, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 1988, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 5), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 138} = {
              args = List with 2 elements = {
                0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769820160, constisnull: false, constbyval: false, location: 146},
                1 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.10..0.11 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 172, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1, 0, 0, 0],
      exprs = List with 4 elements = {
        0 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 138} = {
          args = List with 2 elements = {
            0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769724960, constisnull: false, constbyval: false, location: 146},
            1 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
          }
        },
        1 = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238},
        2 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
        3 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
      }
    },
    path.pathkeys = List with 1 elements = {
      0 = PathKey {pk_opfamily: 1988, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 5), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1988},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
              em_expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 138} = {
                args = List with 2 elements = {
                  0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769820160, constisnull: false, constbyval: false, location: 146},
                  1 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
                }
              },
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
            }
          }
        }
      }
    },
    subpath = ProjectionPath T_Result (cost=0.00..0.09 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
      path.parent = (b 2 3 4 5 6 7 8 9),
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 172, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 0, 0, 0],
        exprs = List with 4 elements = {
          0 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 138} = {
            args = List with 2 elements = {
              0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769724960, constisnull: false, constbyval: false, location: 146},
              1 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
            }
          },
          1 = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238},
          2 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
          3 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
        }
      },
      subpath = NestPath T_NestLoop (cost=0.00..0.09 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        jpath.path.parent = (b 2 3 4 5 6 7 8 9),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 144, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 4 elements = {
            0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
            1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
            2 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156},
            3 = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238}
          }
        },
        jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 2 3 4 5 6 7 8),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 148, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 5 elements = {
              0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
              1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
              2 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156},
              3 = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573},
              4 = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.06 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 2 3 4 5 6 7),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 5 elements = {
                0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
                2 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641},
                3 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156},
                4 = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573}
              }
            },
            jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
              jpath.path.parent = (b 2 3 4 5 6),
              jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 5 elements = {
                  0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                  1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
                  2 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641},
                  3 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156},
                  4 = Var {varno: 6, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: 534}
                }
              },
              jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
                jpath.path.parent = (b 2 3 4 5),
                jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 5 elements = {
                    0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                    1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
                    2 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641},
                    3 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156},
                    4 = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 502}
                  }
                },
                jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
                  jpath.path.parent = (b 2 3 4),
                  jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 4 elements = {
                      0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                      1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
                      2 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468},
                      3 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
                    }
                  },
                  jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
                    jpath.path.parent = (b 2 4),
                    jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 44, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                      exprs = List with 4 elements = {
                        0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                        1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
                        2 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 448},
                        3 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468}
                      }
                    },
                    jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                      parent = (b 2),
                      pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                        exprs = List with 1 elements = {
                          0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 404}
                        }
                      }
                    },
                    jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                      parent = (b 4),
                      pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                        exprs = List with 5 elements = {
                          0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                          1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209},
                          2 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 416},
                          3 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 448},
                          4 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468}
                        }
                      }
                    },
                    jpath.joinrestrictinfo = List with 1 elements = {
                      0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 4), required_relids: (b 2 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 4), rinfo_serial: 12, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                        clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                          args = List with 2 elements = {
                            0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 404},
                            1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 416}
                          }
                        },
                        mergeopfamilies = OidList with 1 elements = {1976},
                        left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                          em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 404},
                          em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                        },
                        right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                          em_expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 416},
                          em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                        }
                      }
                    }
                  },
                  jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                    parent = (b 3),
                    pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                      exprs = List with 2 elements = {
                        0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 436},
                        1 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
                      }
                    }
                  },
                  jpath.joinrestrictinfo = List with 1 elements = {
                    0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 4), required_relids: (b 3 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 3), right_relids: (b 4), rinfo_serial: 13, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                      clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 436},
                          1 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 448}
                        }
                      },
                      mergeopfamilies = OidList with 1 elements = {1976},
                      left_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                        em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 436},
                        em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                      },
                      right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                        em_expr = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 448},
                        em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                      }
                    }
                  }
                },
                jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 5),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 12, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 3 elements = {
                      0 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156},
                      1 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 481},
                      2 = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 502}
                    }
                  }
                },
                jpath.joinrestrictinfo = List with 1 elements = {
                  0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 4 5), required_relids: (b 4 5), incompatible_relids: <>, outer_relids: <>, left_relids: (b 4), right_relids: (b 5), rinfo_serial: 14, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                    clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468},
                        1 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 481}
                      }
                    },
                    mergeopfamilies = OidList with 1 elements = {1976},
                    left_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468},
                      em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                    },
                    right_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 481},
                      em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                    }
                  }
                }
              },
              jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 6),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 2 elements = {
                    0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 514},
                    1 = Var {varno: 6, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: 534}
                  }
                }
              },
              jpath.joinrestrictinfo = List with 1 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 5 6), required_relids: (b 5 6), incompatible_relids: <>, outer_relids: <>, left_relids: (b 6), right_relids: (b 5), rinfo_serial: 15, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                  clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 514},
                      1 = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 502}
                    }
                  },
                  mergeopfamilies = OidList with 1 elements = {1976},
                  left_em = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 514},
                    em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                  },
                  right_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 502},
                    em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                  }
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 7),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 2 elements = {
                  0 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 548},
                  1 = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573}
                }
              }
            },
            jpath.joinrestrictinfo = List with 1 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 6 7), required_relids: (b 6 7), incompatible_relids: <>, outer_relids: <>, left_relids: (b 7), right_relids: (b 6), rinfo_serial: 16, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 548},
                    1 = Var {varno: 6, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: 534}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 548},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                },
                right_em = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 6, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: 534},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
                }
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 8),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238},
                1 = Var {varno: 8, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 1, location: 655}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 8), required_relids: (b 3 8), incompatible_relids: <>, outer_relids: <>, left_relids: (b 8), right_relids: (b 3), rinfo_serial: 17, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 8, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 1, location: 655},
                  1 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 8), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 8, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 1, location: 655},
                em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
              },
              right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641},
                em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
              }
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 9),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 1 elements = {
              0 = Var {varno: 9, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 1, location: 590}
            }
          }
        },
        jpath.joinrestrictinfo = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 7 9), required_relids: (b 7 9), incompatible_relids: <>, outer_relids: <>, left_relids: (b 9), right_relids: (b 7), rinfo_serial: 18, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 9, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 1, location: 590},
                1 = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 9), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 9, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 1, location: 590},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
            },
            right_em = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7 8 9)
            }
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1754, nulls_first: false, hashable: true}
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1456cf8, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$21 = Agg (cost=0.10..0.15 rows=1 width=64 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 256, aggParams: 0x0} = {
  grpColIdx = [1],
  grpOperators = [1752],
  grpCollations = [0],
  plan.targetlist = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'o_year', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'mkt_share', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 85} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = CaseExpr {casetype: 1700, casecollid: 0, location: 23} = {
                  args = List with 1 elements = {
                    0 = CaseWhen location: 32 = {
                      expr = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 44} = {
                        args = List with 2 elements = {
                          0 = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769706064, constisnull: false, constbyval: false, location: 46}
                        }
                      },
                      result = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 202} = {
                        args = List with 2 elements = {
                          0 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                          1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 207} = {
                            args = List with 2 elements = {
                              0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785776, constisnull: false, constbyval: false, location: -1},
                              1 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                            }
                          }
                        }
                      }
                    }
                  },
                  defresult = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786440, constisnull: false, constbyval: false, location: -1}
                }
              }
            }
          },
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 87} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 202} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 207} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769787384, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  plan.lefttree = Sort (cost=0.10..0.11 rows=1 width=172 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 1 = {
    sortColIdx = [1],
    sortOperators = [1754],
    collations = [0],
    nullsFirst = [False],
    plan.targetlist = List with 4 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: -1}
      }
    },
    plan.lefttree = NestLoop (cost=0.00..0.09 rows=1 width=172 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
      join.plan.targetlist = List with 4 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 138} = {
            args = List with 2 elements = {
              0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769724960, constisnull: false, constbyval: false, location: 146},
              1 = Var {varno: -2, varattno: 3, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
            }
          }
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
        }
      },
      join.plan.lefttree = NestLoop (cost=0.00..0.07 rows=1 width=148 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 5 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: 238}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.06 rows=1 width=48 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
          join.plan.targetlist = List with 5 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573}
            }
          },
          join.plan.lefttree = NestLoop (cost=0.00..0.05 rows=1 width=48 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
            join.plan.targetlist = List with 5 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: 534}
              }
            },
            join.plan.lefttree = NestLoop (cost=0.00..0.04 rows=1 width=48 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
              join.plan.targetlist = List with 5 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 156}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 502}
                }
              },
              join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=44 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
                join.plan.targetlist = List with 4 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
                  }
                },
                join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=44 async_capable=0 plan_id=8 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
                  join.plan.targetlist = List with 4 elements = {
                    0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: -1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 186}
                    },
                    1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: -1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 209}
                    },
                    2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 448}
                    },
                    3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468}
                    }
                  },
                  join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=9 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
                    scan.plan.targetlist = List with 9 elements = {
                      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
                      },
                      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
                      },
                      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
                      },
                      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
                      },
                      4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
                      },
                      5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
                      },
                      6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
                      },
                      7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
                      },
                      8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 27, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
                      }
                    },
                    scan.plan.qual = List with 1 elements = {
                      0 = OpExpr {opno: 98, opfuncid: 67, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 757} = {
                        args = List with 2 elements = {
                          0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                            arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 750}
                          },
                          1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769721192, constisnull: false, constbyval: false, location: 759}
                        }
                      }
                    }
                  },
                  join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=48 async_capable=0 plan_id=10 parallel_aware=False parallel_safe = True) scan.scanrelid: 4 = {
                    scan.plan.targetlist = List with 16 elements = {
                      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
                      },
                      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
                      },
                      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: -1}
                      },
                      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: -1}
                      },
                      4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: -1}
                      },
                      5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: -1}
                      },
                      6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: -1}
                      },
                      7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 8, location: -1}
                      },
                      8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 9, location: -1}
                      },
                      9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 10, location: -1}
                      },
                      10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 11, location: -1}
                      },
                      11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 12, location: -1}
                      },
                      12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 13, location: -1}
                      },
                      13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 14, location: -1}
                      },
                      14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 15, location: -1}
                      },
                      15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                        expr = Var {varno: 4, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 16, location: -1}
                      }
                    }
                  },
                  join.joinqual = List with 1 elements = {
                    0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 404},
                        1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 416}
                      }
                    }
                  }
                },
                join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=11 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
                  scan.plan.targetlist = List with 7 elements = {
                    0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
                    },
                    1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 3, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
                    },
                    2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 3, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
                    },
                    3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
                    },
                    4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 3, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
                    },
                    5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
                    },
                    6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 3, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
                    }
                  }
                },
                join.joinqual = List with 1 elements = {
                  0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 436},
                      1 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 448}
                    }
                  }
                }
              },
              join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=12 async_capable=0 plan_id=12 parallel_aware=False parallel_safe = True) scan.scanrelid: 5 = {
                scan.plan.targetlist = List with 9 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 7, location: -1}
                  },
                  7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 8, location: -1}
                  },
                  8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 5, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 9, location: -1}
                  }
                },
                scan.plan.qual = List with 2 elements = {
                  0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 692} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 680},
                      1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549790, constisnull: false, constbyval: true, location: 705}
                    }
                  },
                  1 = OpExpr {opno: 1096, opfuncid: 1088, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 692} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 5, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 680},
                      1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550520, constisnull: false, constbyval: true, location: 727}
                    }
                  }
                }
              },
              join.joinqual = List with 1 elements = {
                0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 468},
                    1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 481}
                  }
                }
              }
            },
            join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=13 parallel_aware=False parallel_safe = True) scan.scanrelid: 6 = {
              scan.plan.targetlist = List with 8 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 7, location: -1}
                },
                7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 6, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 8, location: -1}
                }
              }
            },
            join.joinqual = List with 1 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 514},
                  1 = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 502}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=14 parallel_aware=False parallel_safe = True) scan.scanrelid: 7 = {
            scan.plan.targetlist = List with 4 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 7, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 4, location: -1}
              }
            }
          },
          join.joinqual = List with 1 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 548},
                1 = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: 534}
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=108 async_capable=0 plan_id=15 parallel_aware=False parallel_safe = True) scan.scanrelid: 8 = {
          scan.plan.targetlist = List with 4 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 8, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 8, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 8, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 8, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 4, location: -1}
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 8, varattnosyn: 1, location: 655},
              1 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 641}
            }
          }
        }
      },
      join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=16 parallel_aware=False parallel_safe = True) scan.scanrelid: 9 = {
        scan.plan.targetlist = List with 3 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 9, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 9, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 9, varattno: 3, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 3, location: -1}
          }
        },
        scan.plan.qual = List with 1 elements = {
          0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 619} = {
            args = List with 2 elements = {
              0 = Var {varno: 9, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 2, location: 612},
              1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769719832, constisnull: false, constbyval: false, location: 621}
            }
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 9, varattnosyn: 1, location: 590},
            1 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: 573}
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d1456438, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$22 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 635} = {
  rtable = List with 7 elements = {
    0 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'profit',
      eref = Alias aliasname: 'profit' = {
        colnames = List with 3 elements = {
          0 = String [ 'nation' ],
          1 = String [ 'o_year' ],
          2 = String [ 'amount' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74550, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'part' = {
        colnames = List with 9 elements = {
          0 = String [ 'p_partkey' ],
          1 = String [ 'p_name' ],
          2 = String [ 'p_mfgr' ],
          3 = String [ 'p_brand' ],
          4 = String [ 'p_type' ],
          5 = String [ 'p_size' ],
          6 = String [ 'p_container' ],
          7 = String [ 'p_retailprice' ],
          8 = String [ 'p_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    4 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74556, relkind: 114 'r', rellockmode: 1, perminfoindex: 4, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'partsupp' = {
        colnames = List with 5 elements = {
          0 = String [ 'ps_partkey' ],
          1 = String [ 'ps_suppkey' ],
          2 = String [ 'ps_availqty' ],
          3 = String [ 'ps_supplycost' ],
          4 = String [ 'ps_comment' ]
        }
      }
    },
    5 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 5, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    6 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 6, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'nation' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 6 elements = {
    0 = RTEPermissionInfo {relid: 74550, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 12 13 14), insertedCols: 0x0, updatedCols: 0x0},
    3 = RTEPermissionInfo {relid: 74556, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 11), insertedCols: 0x0, updatedCols: 0x0},
    4 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 12), insertedCols: 0x0, updatedCols: 0x0},
    5 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = FromExpr  = {
        fromlist = List with 6 elements = {
          0 = RangeTblRef rtindex: 2,
          1 = RangeTblRef rtindex: 3,
          2 = RangeTblRef rtindex: 4,
          3 = RangeTblRef rtindex: 5,
          4 = RangeTblRef rtindex: 6,
          5 = RangeTblRef rtindex: 7
        },
        quals = List with 7 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 349} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
              1 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351}
            }
          },
          1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 382} = {
            args = List with 2 elements = {
              0 = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 371},
              1 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 384}
            }
          },
          2 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 415} = {
            args = List with 2 elements = {
              0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 404},
              1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417}
            }
          },
          3 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 447} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437},
              1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 449}
            }
          },
          4 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 480} = {
            args = List with 2 elements = {
              0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 469},
              1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482}
            }
          },
          5 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 515} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503},
              1 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 517}
            }
          },
          6 = OpExpr {opno: 1209, opfuncid: 850, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 546} = {
            args = List with 2 elements = {
              0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                arg = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 539}
              },
              1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769706040, constisnull: false, constbyval: false, location: 551}
            }
          }
        }
      }
    }
  },
  targetList = List with 3 elements = {
    0 = TargetEntry {resno: 1, resname: 'nation', ressortgroupref: 1, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81}
    },
    1 = TargetEntry {resno: 2, resname: 'o_year', ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 105} = {
        args = List with 2 elements = {
          0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769710728, constisnull: false, constbyval: false, location: 113},
          1 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
        }
      }
    },
    2 = TargetEntry {resno: 3, resname: 'sum_profit', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 29} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 188} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 169} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 174} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769713880, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
                      }
                    }
                  }
                },
                1 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 204} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
                    1 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  groupClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true}
  },
  sortClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true}
  }
}
$23 = AggPath T_Agg (cost=0.08..0.12 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 168, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 2, 0],
    exprs = List with 3 elements = {
      0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81},
      1 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 105} = {
        args = List with 2 elements = {
          0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769710728, constisnull: false, constbyval: false, location: 113},
          1 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
        }
      },
      2 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 29} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 188} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 169} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 174} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769713880, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
                      }
                    }
                  }
                },
                1 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 204} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
                    1 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  path.pathkeys = List with 2 elements = {
    0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 7), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81},
            em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 6), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 105} = {
              args = List with 2 elements = {
                0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769729032, constisnull: false, constbyval: false, location: 113},
                1 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.08..0.08 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 208, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1, 2, 0, 0, 0, 0],
      exprs = List with 6 elements = {
        0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81},
        1 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 105} = {
          args = List with 2 elements = {
            0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769710728, constisnull: false, constbyval: false, location: 113},
            1 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
          }
        },
        2 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
        3 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
        4 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
        5 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
      }
    },
    path.pathkeys = List with 2 elements = {
      0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 7), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        }
      },
      1 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 6), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1988},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
              em_expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 105} = {
                args = List with 2 elements = {
                  0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769729032, constisnull: false, constbyval: false, location: 113},
                  1 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
                }
              },
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        }
      }
    },
    subpath = ProjectionPath T_Result (cost=0.00..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
      path.parent = (b 2 3 4 5 6 7),
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 208, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 2, 0, 0, 0, 0],
        exprs = List with 6 elements = {
          0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81},
          1 = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 105} = {
            args = List with 2 elements = {
              0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769710728, constisnull: false, constbyval: false, location: 113},
              1 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
            }
          },
          2 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
          3 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
          4 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
          5 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
        }
      },
      subpath = NestPath T_NestLoop (cost=0.00..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        jpath.path.parent = (b 2 3 4 5 6 7),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 180, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 6 elements = {
            0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
            1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
            2 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206},
            3 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
            4 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123},
            5 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81}
          }
        },
        jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 2 3 4 5 6),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 80, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 6 elements = {
              0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
              1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
              2 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206},
              3 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503},
              4 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
              5 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 2 3 4 5),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 80, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 6 elements = {
                0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
                1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
                2 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206},
                3 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482},
                4 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503},
                5 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190}
              }
            },
            jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
              jpath.path.parent = (b 2 3 4),
              jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 78, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 9 elements = {
                  0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437},
                  1 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
                  2 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
                  3 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206},
                  4 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351},
                  5 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417},
                  6 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482},
                  7 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                  8 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503}
                }
              },
              jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
                jpath.path.parent = (b 2 4),
                jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 70, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 7 elements = {
                    0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437},
                    1 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
                    2 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
                    3 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206},
                    4 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351},
                    5 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417},
                    6 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482}
                  }
                },
                jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 2),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 1 elements = {
                      0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437}
                    }
                  }
                },
                jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 4),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 66, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 6 elements = {
                      0 = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
                      1 = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176},
                      2 = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206},
                      3 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351},
                      4 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417},
                      5 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482}
                    }
                  }
                },
                jpath.joinrestrictinfo = List with 1 elements = {
                  0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 4), required_relids: (b 2 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 4), rinfo_serial: 9, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                    clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437},
                        1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417}
                      }
                    },
                    mergeopfamilies = OidList with 1 elements = {1976},
                    left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437},
                      em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                    },
                    right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417},
                      em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                    }
                  }
                }
              },
              jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 3),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 2 elements = {
                    0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                    1 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503}
                  }
                }
              },
              jpath.joinrestrictinfo = List with 1 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 4), required_relids: (b 3 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 3), right_relids: (b 4), rinfo_serial: 10, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                  clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                      1 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351}
                    }
                  },
                  mergeopfamilies = OidList with 1 elements = {1976},
                  left_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                    em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                  },
                  right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351},
                    em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                  }
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 5),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 26, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 3 elements = {
                  0 = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
                  1 = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 371},
                  2 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 404}
                }
              }
            },
            jpath.joinrestrictinfo = List with 2 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 5), required_relids: (b 3 5), incompatible_relids: <>, outer_relids: <>, left_relids: (b 3), right_relids: (b 5), rinfo_serial: 11, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                    1 = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 371}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                },
                right_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 371},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                }
              },
              1 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 4 5), required_relids: (b 4 5), incompatible_relids: <>, outer_relids: <>, left_relids: (b 5), right_relids: (b 4), rinfo_serial: 13, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 404},
                    1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 404},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                },
                right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417},
                  em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
                }
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 6),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123},
                1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 469}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 4 6), required_relids: (b 4 6), incompatible_relids: <>, outer_relids: <>, left_relids: (b 4), right_relids: (b 6), rinfo_serial: 12, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482},
                  1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 469}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482},
                em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
              },
              right_em = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 469},
                em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
              }
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 7),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 2 elements = {
              0 = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81},
              1 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 517}
            }
          }
        },
        jpath.joinrestrictinfo = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 7), required_relids: (b 3 7), incompatible_relids: <>, outer_relids: <>, left_relids: (b 7), right_relids: (b 3), rinfo_serial: 15, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 517},
                1 = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 7), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 517},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            },
            right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503},
              em_jdomain = JoinDomain jd_relids: (b 2 3 4 5 6 7)
            }
          }
        }
      }
    }
  },
  groupClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true}
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1456438, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$24 = Agg (cost=0.08..0.12 rows=1 width=168 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 2, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
  grpColIdx = [1, 2],
  grpOperators = [1054, 1752],
  grpCollations = [100, 0],
  plan.targetlist = List with 3 elements = {
    0 = TargetEntry {resno: 1, resname: 'nation', ressortgroupref: 1, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'o_year', ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    2 = TargetEntry {resno: 3, resname: 'sum_profit', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 29} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 188} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 169} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 174} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769713880, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
                      }
                    }
                  }
                },
                1 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 204} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190},
                    1 = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  plan.lefttree = Sort (cost=0.08..0.08 rows=1 width=208 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 2 = {
    sortColIdx = [1, 2],
    sortOperators = [1058, 1756],
    collations = [100, 0],
    nullsFirst = [False, True],
    plan.targetlist = List with 6 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: -1}
      },
      4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: -1}
      },
      5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: -1}
      }
    },
    plan.lefttree = NestLoop (cost=0.00..0.07 rows=1 width=208 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
      join.plan.targetlist = List with 6 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: 81}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = FuncExpr {funcid: 6199, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 0, inputcollid: 100, location: 105} = {
            args = List with 2 elements = {
              0 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769710728, constisnull: false, constbyval: false, location: 113},
              1 = Var {varno: -2, varattno: 6, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
            }
          }
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
        },
        4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190}
        },
        5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
        }
      },
      join.plan.lefttree = NestLoop (cost=0.00..0.05 rows=1 width=80 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 6 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: 123}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.04 rows=1 width=80 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
          join.plan.targetlist = List with 6 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 7, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 9, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: 190}
            }
          },
          join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=78 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
            join.plan.targetlist = List with 9 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 7, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339}
              },
              8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503}
              }
            },
            join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=70 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
              join.plan.targetlist = List with 7 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: 153}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: 176}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: 206}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482}
                }
              },
              join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
                scan.plan.targetlist = List with 9 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
                  },
                  7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
                  },
                  8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 27, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
                  }
                },
                scan.plan.qual = List with 1 elements = {
                  0 = OpExpr {opno: 1209, opfuncid: 850, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 546} = {
                    args = List with 2 elements = {
                      0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                        arg = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 539}
                      },
                      1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769706040, constisnull: false, constbyval: false, location: 551}
                    }
                  }
                }
              },
              join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=66 async_capable=0 plan_id=8 parallel_aware=False parallel_safe = True) scan.scanrelid: 4 = {
                scan.plan.targetlist = List with 16 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 7, location: -1}
                  },
                  7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 8, location: -1}
                  },
                  8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 9, location: -1}
                  },
                  9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 10, location: -1}
                  },
                  10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 11, location: -1}
                  },
                  11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 12, location: -1}
                  },
                  12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 13, location: -1}
                  },
                  13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 14, location: -1}
                  },
                  14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 15, location: -1}
                  },
                  15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 4, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 16, location: -1}
                  }
                }
              },
              join.joinqual = List with 1 elements = {
                0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 437},
                    1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417}
                  }
                }
              }
            },
            join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=9 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
              scan.plan.targetlist = List with 7 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 3, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
                }
              }
            },
            join.joinqual = List with 1 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                  1 = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 351}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=26 async_capable=0 plan_id=10 parallel_aware=False parallel_safe = True) scan.scanrelid: 5 = {
            scan.plan.targetlist = List with 5 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 5, vartype: 1043, vartypmod: 203, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: -1}
              }
            }
          },
          join.joinqual = List with 2 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 339},
                1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: 371}
              }
            },
            1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 404},
                1 = Var {varno: -2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 417}
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=11 parallel_aware=False parallel_safe = True) scan.scanrelid: 6 = {
          scan.plan.targetlist = List with 9 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 7, location: -1}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 8, location: -1}
            },
            8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 9, location: -1}
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 482},
              1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 469}
            }
          }
        }
      },
      join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=108 async_capable=0 plan_id=12 parallel_aware=False parallel_safe = True) scan.scanrelid: 7 = {
        scan.plan.targetlist = List with 4 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 7, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 7, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 7, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 7, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 4, location: -1}
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 7, varattnosyn: 1, location: 517},
            1 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: 503}
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d14563b8, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$25 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 530} = {
  rtable = List with 4 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'customer' = {
        colnames = List with 8 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_name' ],
          2 = String [ 'c_address' ],
          3 = String [ 'c_nationkey' ],
          4 = String [ 'c_phone' ],
          5 = String [ 'c_acctbal' ],
          6 = String [ 'c_mktsegment' ],
          7 = String [ 'c_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 4, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'nation' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 4 elements = {
    0 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 11 12 13 15), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 12), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 13 14 16), insertedCols: 0x0, updatedCols: 0x0},
    3 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 4 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2,
      2 = RangeTblRef rtindex: 3,
      3 = RangeTblRef rtindex: 4
    },
    quals = List with 6 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 209} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 199},
          1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 211}
        }
      },
      1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 238} = {
        args = List with 2 elements = {
          0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 227},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240}
        }
      },
      2 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 269} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 257},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549333, constisnull: false, constbyval: true, location: 277}
        }
      },
      3 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 308} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 296},
          1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446554771309551616, constisnull: false, constbyval: true, location: -1}
        }
      },
      4 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 368} = {
        args = List with 2 elements = {
          0 = Var {varno: 3, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: 355},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769643672, constisnull: false, constbyval: false, location: 370}
        }
      },
      5 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 392} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380},
          1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 394}
        }
      }
    }
  },
  targetList = List with 8 elements = {
    0 = TargetEntry {resno: 1, resname: 'c_custkey', ressortgroupref: 2, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22}
    },
    2 = TargetEntry {resno: 3, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 32} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 52} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 57} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769643864, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
                  }
                }
              }
            }
          }
        }
      }
    },
    3 = TargetEntry {resno: 4, resname: 'c_acctbal', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 6, resjunk: false} = {
      expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86}
    },
    4 = TargetEntry {resno: 5, resname: 'n_name', ressortgroupref: 6, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99}
    },
    5 = TargetEntry {resno: 6, resname: 'c_address', ressortgroupref: 7, resorigtbl: 74559, resorigcol: 3, resjunk: false} = {
      expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109}
    },
    6 = TargetEntry {resno: 7, resname: 'c_phone', ressortgroupref: 5, resorigtbl: 74559, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122}
    },
    7 = TargetEntry {resno: 8, resname: 'c_comment', ressortgroupref: 8, resorigtbl: 74559, resorigcol: 8, resjunk: false} = {
      expr = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
    }
  },
  groupClause = List with 7 elements = {
    0 = SortGroupClause {tleSortGroupRef: 2, eqop: 96, sortop: 97, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 3, eqop: 98, sortop: 664, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 4, eqop: 1752, sortop: 1754, nulls_first: false, hashable: true},
    3 = SortGroupClause {tleSortGroupRef: 5, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    4 = SortGroupClause {tleSortGroupRef: 6, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    5 = SortGroupClause {tleSortGroupRef: 7, eqop: 98, sortop: 664, nulls_first: false, hashable: true},
    6 = SortGroupClause {tleSortGroupRef: 8, eqop: 98, sortop: 664, nulls_first: false, hashable: true}
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true}
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 20, constisnull: false, constbyval: true, location: -1}
}
$26 = LimitPath T_Limit (cost=0.07..0.08 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) limitOption: LIMIT_OPTION_COUNT = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 640, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [2, 3, 1, 4, 6, 7, 5, 8],
    exprs = List with 8 elements = {
      0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
      1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
      2 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 32} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 52} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 57} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769643864, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
                  }
                }
              }
            }
          }
        }
      },
      3 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
      4 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99},
      5 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
      6 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
      7 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 3), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 32} = {
              aggargtypes = OidList with 1 elements = {1700},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 52} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                      1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 57} = {
                        args = List with 2 elements = {
                          0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769714624, constisnull: false, constbyval: false, location: -1},
                          1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
                        }
                      }
                    }
                  }
                }
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.07..0.08 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 640, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [2, 3, 1, 4, 6, 7, 5, 8],
      exprs = List with 8 elements = {
        0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
        1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
        2 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 32} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 52} = {
                args = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                  1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 57} = {
                    args = List with 2 elements = {
                      0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769643864, constisnull: false, constbyval: false, location: -1},
                      1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
                    }
                  }
                }
              }
            }
          }
        },
        3 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
        4 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99},
        5 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
        6 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
        7 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
      }
    },
    path.pathkeys = List with 1 elements = {
      0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 3), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1988},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
              em_expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 32} = {
                aggargtypes = OidList with 1 elements = {1700},
                args = List with 1 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 52} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                        1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 57} = {
                          args = List with 2 elements = {
                            0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769714624, constisnull: false, constbyval: false, location: -1},
                            1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
                          }
                        }
                      }
                    }
                  }
                }
              },
              em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
            }
          }
        }
      }
    },
    subpath = AggPath T_Agg (cost=0.05..0.06 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
      path.parent = <>,
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 640, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [2, 3, 1, 4, 6, 7, 5, 8],
        exprs = List with 8 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
          1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
          2 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 32} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 52} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 57} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769643864, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
                      }
                    }
                  }
                }
              }
            }
          },
          3 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
          4 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99},
          5 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
          6 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
          7 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
        }
      },
      subpath = ProjectionPath T_Result (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
        path.parent = (b 1 2 3 4),
        path.pathtarget = PathTarget {cost: (0.00..0.00), width: 644, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          sortgrouprefs = [2, 6, 0, 0, 0, 0, 0, 0, 0],
          exprs = List with 9 elements = {
            0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
            1 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99},
            2 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
            3 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
            4 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59},
            5 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
            6 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
            7 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
            8 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
          }
        },
        subpath = NestPath T_NestLoop (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 1 2 3 4),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 644, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 9 elements = {
              0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
              1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
              2 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
              3 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
              4 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
              5 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133},
              6 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
              7 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59},
              8 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 1 2 3),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 544, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 9 elements = {
                0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
                1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
                2 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
                3 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
                4 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
                5 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133},
                6 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380},
                7 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                8 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
              }
            },
            jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
              jpath.path.parent = (b 1 2),
              jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 512, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 8 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
                  1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
                  2 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
                  3 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
                  4 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
                  5 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133},
                  6 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380},
                  7 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240}
                }
              },
              jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 1),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 508, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 7 elements = {
                    0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
                    1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
                    2 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86},
                    3 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109},
                    4 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122},
                    5 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133},
                    6 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380}
                  }
                }
              },
              jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 2),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 211},
                    1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240}
                  }
                }
              },
              jpath.joinrestrictinfo = List with 1 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 7, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                  clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 199},
                      1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 211}
                    }
                  },
                  mergeopfamilies = OidList with 1 elements = {1976},
                  left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 199},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                  },
                  right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 211},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                  }
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 3),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 40, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 3 elements = {
                  0 = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                  1 = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59},
                  2 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 227}
                }
              }
            },
            jpath.joinrestrictinfo = List with 1 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 3), rinfo_serial: 8, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240},
                    1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 227}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                },
                right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 227},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                }
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 4),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99},
                1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 394}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 4), required_relids: (b 1 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 4), right_relids: (b 1), rinfo_serial: 9, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 394},
                  1 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 394},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
              },
              right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
              }
            }
          }
        }
      },
      groupClause = List with 2 elements = {
        0 = SortGroupClause {tleSortGroupRef: 2, eqop: 96, sortop: 97, nulls_first: false, hashable: true},
        1 = SortGroupClause {tleSortGroupRef: 6, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 20, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 2, standard_planner (parse=0x5591d14563b8, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$27 = Limit (cost=0.07..0.08 rows=1 width=640 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {limitOption: LIMIT_OPTION_COUNT, uniqNumCols: 0} = {
  plan.targetlist = List with 8 elements = {
    0 = TargetEntry {resno: 1, resname: 'c_custkey', ressortgroupref: 2, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
    },
    2 = TargetEntry {resno: 3, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    3 = TargetEntry {resno: 4, resname: 'c_acctbal', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 6, resjunk: false} = {
      expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
    },
    4 = TargetEntry {resno: 5, resname: 'n_name', ressortgroupref: 6, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
    },
    5 = TargetEntry {resno: 6, resname: 'c_address', ressortgroupref: 7, resorigtbl: 74559, resorigcol: 3, resjunk: false} = {
      expr = Var {varno: -2, varattno: 6, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
    },
    6 = TargetEntry {resno: 7, resname: 'c_phone', ressortgroupref: 5, resorigtbl: 74559, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: -2, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
    },
    7 = TargetEntry {resno: 8, resname: 'c_comment', ressortgroupref: 8, resorigtbl: 74559, resorigcol: 8, resjunk: false} = {
      expr = Var {varno: -2, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
    }
  },
  plan.lefttree = Sort (cost=0.07..0.08 rows=1 width=640 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 1 = {
    sortColIdx = [3],
    sortOperators = [1756],
    collations = [0],
    nullsFirst = [True],
    plan.targetlist = List with 8 elements = {
      0 = TargetEntry {resno: 1, resname: 'c_custkey', ressortgroupref: 2, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 'c_acctbal', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 6, resjunk: false} = {
        expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
      },
      4 = TargetEntry {resno: 5, resname: 'n_name', ressortgroupref: 6, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
        expr = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
      },
      5 = TargetEntry {resno: 6, resname: 'c_address', ressortgroupref: 7, resorigtbl: 74559, resorigcol: 3, resjunk: false} = {
        expr = Var {varno: -2, varattno: 6, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
      },
      6 = TargetEntry {resno: 7, resname: 'c_phone', ressortgroupref: 5, resorigtbl: 74559, resorigcol: 5, resjunk: false} = {
        expr = Var {varno: -2, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
      },
      7 = TargetEntry {resno: 8, resname: 'c_comment', ressortgroupref: 8, resorigtbl: 74559, resorigcol: 8, resjunk: false} = {
        expr = Var {varno: -2, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
      }
    },
    plan.lefttree = Agg (cost=0.05..0.06 rows=1 width=640 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 2, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
      grpColIdx = [1, 2],
      grpOperators = [96, 1054],
      grpCollations = [0, 100],
      plan.targetlist = List with 8 elements = {
        0 = TargetEntry {resno: 1, resname: 'c_custkey', ressortgroupref: 2, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22}
        },
        2 = TargetEntry {resno: 3, resname: 'revenue', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 32} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 52} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 57} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769643864, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        3 = TargetEntry {resno: 4, resname: 'c_acctbal', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 6, resjunk: false} = {
          expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86}
        },
        4 = TargetEntry {resno: 5, resname: 'n_name', ressortgroupref: 6, resorigtbl: 74544, resorigcol: 2, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        5 = TargetEntry {resno: 6, resname: 'c_address', ressortgroupref: 7, resorigtbl: 74559, resorigcol: 3, resjunk: false} = {
          expr = Var {varno: -2, varattno: 7, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109}
        },
        6 = TargetEntry {resno: 7, resname: 'c_phone', ressortgroupref: 5, resorigtbl: 74559, resorigcol: 5, resjunk: false} = {
          expr = Var {varno: -2, varattno: 8, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122}
        },
        7 = TargetEntry {resno: 8, resname: 'c_comment', ressortgroupref: 8, resorigtbl: 74559, resorigcol: 8, resjunk: false} = {
          expr = Var {varno: -2, varattno: 9, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
        }
      },
      plan.lefttree = NestLoop (cost=0.00..0.04 rows=1 width=644 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 9 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 6, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 99}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 9, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 4, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109}
          },
          7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122}
          },
          8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 6, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=544 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
          join.plan.targetlist = List with 9 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 4, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 6, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 7, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: 36}
            },
            8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: 59}
            }
          },
          join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=512 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
            join.plan.targetlist = List with 8 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 86}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 109}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 122}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: 133}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240}
              }
            },
            join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=508 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
              scan.plan.targetlist = List with 8 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
                },
                7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
                }
              }
            },
            join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
              scan.plan.targetlist = List with 9 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
                },
                7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
                },
                8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
                }
              },
              scan.plan.qual = List with 2 elements = {
                0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 269} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 257},
                    1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549333, constisnull: false, constbyval: true, location: 277}
                  }
                },
                1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 308} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 296},
                    1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446554771309551616, constisnull: false, constbyval: true, location: -1}
                  }
                }
              }
            },
            join.joinqual = List with 1 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 199},
                  1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 211}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=40 async_capable=0 plan_id=8 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
            scan.plan.targetlist = List with 16 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
              },
              8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
              },
              9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 10, location: -1}
              },
              10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: -1}
              },
              11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 12, location: -1}
              },
              12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 13, location: -1}
              },
              13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 14, location: -1}
              },
              14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 15, location: -1}
              },
              15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 16, location: -1}
              }
            },
            scan.plan.qual = List with 1 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 368} = {
                args = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: 355},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769643672, constisnull: false, constbyval: false, location: 370}
                }
              }
            }
          },
          join.joinqual = List with 1 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 240},
                1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 227}
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=108 async_capable=0 plan_id=9 parallel_aware=False parallel_safe = True) scan.scanrelid: 4 = {
          scan.plan.targetlist = List with 4 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: -1}
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 394},
              1 = Var {varno: -2, varattno: 7, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 380}
            }
          }
        }
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 20, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 1, standard_planner (parse=0x5591d1455f20, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$28 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 531} = {
  rtable = List with 3 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74556, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'partsupp' = {
        colnames = List with 5 elements = {
          0 = String [ 'ps_partkey' ],
          1 = String [ 'ps_suppkey' ],
          2 = String [ 'ps_availqty' ],
          3 = String [ 'ps_supplycost' ],
          4 = String [ 'ps_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'nation' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 3 elements = {
    0 = RTEPermissionInfo {relid: 74556, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 11), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 3 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2,
      2 = RangeTblRef rtindex: 3
    },
    quals = List with 3 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 122} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 111},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 124}
        }
      },
      1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 152} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 140},
          1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 154}
        }
      },
      2 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 179} = {
        args = List with 2 elements = {
          0 = Var {varno: 3, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: 172},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769642336, constisnull: false, constbyval: false, location: 181}
        }
      }
    }
  },
  targetList = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'ps_partkey', ressortgroupref: 2, resorigtbl: 74556, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'value', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 41} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
                1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 1 elements = {
                    0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 2, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
  },
  havingQual = List with 1 elements = {
    0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 257} = {
      args = List with 2 elements = {
        0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 224} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 242} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 228},
                  1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 1 elements = {
                      0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 244}
                    }
                  }
                }
              }
            }
          }
        },
        1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
      }
    }
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true}
  }
}
$29 = SortPath T_Sort (cost=0.11..0.11 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0)  = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 36, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [2, 1],
    exprs = List with 2 elements = {
      0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
      1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 41} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
                1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 1 elements = {
                    0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
              aggargtypes = OidList with 1 elements = {1700},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 41} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
                      1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                        args = List with 1 elements = {
                          0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
                        }
                      }
                    }
                  }
                }
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 1 2 3)
          }
        }
      }
    }
  },
  subpath = AggPath T_Agg (cost=0.04..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 36, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [2, 1],
      exprs = List with 2 elements = {
        0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
        1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 41} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
                  1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 1 elements = {
                      0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    subpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
      jpath.path.parent = (b 1 2 3),
      jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 26, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [2, 0, 0],
        exprs = List with 3 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
          1 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
          2 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
        }
      },
      jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        jpath.path.parent = (b 1 2),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 30, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 4 elements = {
            0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
            1 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
            2 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43},
            3 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 140}
          }
        },
        jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 1),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 30, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 4 elements = {
              0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
              1 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
              2 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43},
              3 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 111}
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 2),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 124},
              1 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 140}
            }
          }
        },
        jpath.joinrestrictinfo = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 4, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 111},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 124}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 111},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3)
            },
            right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 124},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3)
            }
          }
        }
      },
      jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
        parent = (b 3),
        pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 1 elements = {
            0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 154}
          }
        }
      },
      jpath.joinrestrictinfo = List with 1 elements = {
        0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: <>, left_relids: (b 3), right_relids: (b 2), rinfo_serial: 5, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
          clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 154},
              1 = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 140}
            }
          },
          mergeopfamilies = OidList with 1 elements = {1976},
          left_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 154},
            em_jdomain = JoinDomain jd_relids: (b 1 2 3)
          },
          right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 140},
            em_jdomain = JoinDomain jd_relids: (b 1 2 3)
          }
        }
      }
    },
    groupClause = List with 1 elements = {
      0 = SortGroupClause {tleSortGroupRef: 2, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
    },
    qual = List with 1 elements = {
      0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 257} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 224} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 242} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 228},
                    1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 1 elements = {
                        0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 244}
                      }
                    }
                  }
                }
              }
            }
          },
          1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
        }
      }
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1455f20, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$30 = Sort (cost=0.11..0.11 rows=1 width=36 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = False) numCols: 1 = {
  sortColIdx = [2],
  sortOperators = [1756],
  collations = [0],
  nullsFirst = [True],
  plan.targetlist = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'ps_partkey', ressortgroupref: 2, resorigtbl: 74556, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'value', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    }
  },
  plan.lefttree = Agg (cost=0.04..0.05 rows=1 width=36 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
    grpColIdx = [1],
    grpOperators = [96],
    grpCollations = [0],
    plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 'ps_partkey', ressortgroupref: 2, resorigtbl: 74556, resorigcol: 1, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'value', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 41} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27},
                  1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 1 elements = {
                      0 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    plan.qual = List with 1 elements = {
      0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 257} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 224} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 242} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 228},
                    1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 1 elements = {
                        0 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 244}
                      }
                    }
                  }
                }
              }
            }
          },
          1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
        }
      }
    },
    plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=26 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
      join.plan.targetlist = List with 3 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
        }
      },
      join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=30 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 4 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 27}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 43}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 140}
          }
        },
        join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=30 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
          scan.plan.targetlist = List with 5 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 5, vartype: 1043, vartypmod: 203, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
          scan.plan.targetlist = List with 7 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 111},
              1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 124}
            }
          }
        }
      },
      join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
        scan.plan.targetlist = List with 4 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
          }
        },
        scan.plan.qual = List with 1 elements = {
          0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 179} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: 172},
              1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769642336, constisnull: false, constbyval: false, location: 181}
            }
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 154},
            1 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 140}
          }
        }
      }
    }
  },
  plan.initPlan = List with 1 elements = {
    0 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'InitPlan 1 (returns $0)', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: true, startup_cost: 0, per_call_cost: 0.047500000000000007} = {
      setParam = IntList with 1 elements = {0}
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d14560e0, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$31 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 600} = {
  rtable = List with 2 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 13), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 18 19 20 22), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 2 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2
    },
    quals = List with 6 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 339} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 328},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 341}
        }
      },
      1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 369} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 358},
          1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769652136, constisnull: false, constbyval: false, location: -1}
        }
      },
      2 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 408} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 395},
          1 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 410}
        }
      },
      3 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 441} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 11, location: 430},
          1 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 443}
        }
      },
      4 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 476} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 462},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549425, constisnull: false, constbyval: true, location: 484}
        }
      },
      5 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 517} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 503},
          1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446586307309551616, constisnull: false, constbyval: true, location: -1}
        }
      }
    }
  },
  targetList = List with 3 elements = {
    0 = TargetEntry {resno: 1, resname: 'l_shipmode', ressortgroupref: 1, resorigtbl: 74565, resorigcol: 15, resjunk: false} = {
      expr = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'high_line_count', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2108, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = CaseExpr {casetype: 23, casecollid: 0, location: 27} = {
              args = List with 1 elements = {
                0 = CaseWhen location: 36 = {
                  expr = BoolExpr {boolop: OR_EXPR, location: -1} = {
                    args = List with 2 elements = {
                      0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 57} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769637408, constisnull: false, constbyval: false, location: 59}
                        }
                      },
                      1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 95} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 79},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769637864, constisnull: false, constbyval: false, location: 97}
                        }
                      }
                    }
                  },
                  result = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 117}
                }
              },
              defresult = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 0, constisnull: false, constbyval: true, location: 128}
            }
          }
        }
      }
    },
    2 = TargetEntry {resno: 3, resname: 'low_line_count', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2108, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 159} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = CaseExpr {casetype: 23, casecollid: 0, location: 163} = {
              args = List with 1 elements = {
                0 = CaseWhen location: 172 = {
                  expr = BoolExpr {boolop: AND_EXPR, location: -1} = {
                    args = List with 2 elements = {
                      0 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 193} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 177},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769639664, constisnull: false, constbyval: false, location: 196}
                        }
                      },
                      1 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 233} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 217},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769639688, constisnull: false, constbyval: false, location: 236}
                        }
                      }
                    }
                  },
                  result = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 256}
                }
              },
              defresult = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 0, constisnull: false, constbyval: true, location: 267}
            }
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  }
}
$32 = AggPath T_Agg (cost=0.02..0.06 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 0} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 60, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 0, 0],
    exprs = List with 3 elements = {
      0 = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9},
      1 = Aggref {aggfnoid: 2108, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = CaseExpr {casetype: 23, casecollid: 0, location: 27} = {
              args = List with 1 elements = {
                0 = CaseWhen location: 36 = {
                  expr = BoolExpr {boolop: OR_EXPR, location: -1} = {
                    args = List with 2 elements = {
                      0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 57} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769637408, constisnull: false, constbyval: false, location: 59}
                        }
                      },
                      1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 95} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 79},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769637864, constisnull: false, constbyval: false, location: 97}
                        }
                      }
                    }
                  },
                  result = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 117}
                }
              },
              defresult = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 0, constisnull: false, constbyval: true, location: 128}
            }
          }
        }
      },
      2 = Aggref {aggfnoid: 2108, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 159} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = CaseExpr {casetype: 23, casecollid: 0, location: 163} = {
              args = List with 1 elements = {
                0 = CaseWhen location: 172 = {
                  expr = BoolExpr {boolop: AND_EXPR, location: -1} = {
                    args = List with 2 elements = {
                      0 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 193} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 177},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769639664, constisnull: false, constbyval: false, location: 196}
                        }
                      },
                      1 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 233} = {
                        args = List with 2 elements = {
                          0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 217},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769639688, constisnull: false, constbyval: false, location: 236}
                        }
                      }
                    }
                  },
                  result = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 256}
                }
              },
              defresult = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 0, constisnull: false, constbyval: true, location: 267}
            }
          }
        }
      }
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.02..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1, 0],
      exprs = List with 2 elements = {
        0 = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9},
        1 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41}
      }
    },
    path.pathkeys = List with 1 elements = {
      0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      }
    },
    subpath = ProjectionPath T_Result (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
      path.parent = (b 1 2),
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 0],
        exprs = List with 2 elements = {
          0 = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9},
          1 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41}
        }
      },
      subpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        jpath.path.parent = (b 1 2),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 108, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 2 elements = {
            0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41},
            1 = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9}
          }
        },
        jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 1),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 68, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 2 elements = {
              0 = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41},
              1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 328}
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 2),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 48, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 2 elements = {
              0 = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9},
              1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 341}
            }
          }
        },
        jpath.joinrestrictinfo = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 7, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 328},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 341}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 328},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            },
            right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 341},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  }
}

Breakpoint 2, standard_planner (parse=0x5591d14560e0, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$33 = Agg (cost=0.02..0.06 rows=1 width=60 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 0, aggParams: 0x0} = {
  grpColIdx = [1],
  grpOperators = [1054],
  grpCollations = [100],
  plan.targetlist = List with 3 elements = {
    0 = TargetEntry {resno: 1, resname: 'l_shipmode', ressortgroupref: 1, resorigtbl: 74565, resorigcol: 15, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'high_line_count', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2108, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 23} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = CaseExpr {casetype: 23, casecollid: 0, location: 27} = {
              args = List with 1 elements = {
                0 = CaseWhen location: 36 = {
                  expr = BoolExpr {boolop: OR_EXPR, location: -1} = {
                    args = List with 2 elements = {
                      0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 57} = {
                        args = List with 2 elements = {
                          0 = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769637408, constisnull: false, constbyval: false, location: 59}
                        }
                      },
                      1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 95} = {
                        args = List with 2 elements = {
                          0 = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 79},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769637864, constisnull: false, constbyval: false, location: 97}
                        }
                      }
                    }
                  },
                  result = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 117}
                }
              },
              defresult = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 0, constisnull: false, constbyval: true, location: 128}
            }
          }
        }
      }
    },
    2 = TargetEntry {resno: 3, resname: 'low_line_count', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2108, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 159} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = CaseExpr {casetype: 23, casecollid: 0, location: 163} = {
              args = List with 1 elements = {
                0 = CaseWhen location: 172 = {
                  expr = BoolExpr {boolop: AND_EXPR, location: -1} = {
                    args = List with 2 elements = {
                      0 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 193} = {
                        args = List with 2 elements = {
                          0 = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 177},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769639664, constisnull: false, constbyval: false, location: 196}
                        }
                      },
                      1 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 233} = {
                        args = List with 2 elements = {
                          0 = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 217},
                          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769639688, constisnull: false, constbyval: false, location: 236}
                        }
                      }
                    }
                  },
                  result = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 256}
                }
              },
              defresult = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 0, constisnull: false, constbyval: true, location: 267}
            }
          }
        }
      }
    }
  },
  plan.lefttree = Sort (cost=0.02..0.03 rows=1 width=108 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 1 = {
    sortColIdx = [1],
    sortOperators = [1058],
    collations = [100],
    nullsFirst = [False],
    plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
      }
    },
    plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=108 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
      join.plan.targetlist = List with 2 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -1, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 9}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 41}
        }
      },
      join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=68 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
        scan.plan.targetlist = List with 9 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
          },
          7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
          },
          8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: -1}
          }
        }
      },
      join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=48 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
        scan.plan.targetlist = List with 16 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
          },
          7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
          },
          8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
          },
          9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 10, location: -1}
          },
          10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 11, location: -1}
          },
          11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: -1}
          },
          12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: -1}
          },
          13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 14, location: -1}
          },
          14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: -1}
          },
          15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 16, location: -1}
          }
        },
        scan.plan.qual = List with 5 elements = {
          0 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 369} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: 358},
              1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769652136, constisnull: false, constbyval: false, location: -1}
            }
          },
          1 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 408} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 395},
              1 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 410}
            }
          },
          2 = OpExpr {opno: 1095, opfuncid: 1087, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 441} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 11, location: 430},
              1 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 443}
            }
          },
          3 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 476} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 462},
              1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709549425, constisnull: false, constbyval: true, location: 484}
            }
          },
          4 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 517} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 503},
              1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446586307309551616, constisnull: false, constbyval: true, location: -1}
            }
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 328},
            1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 341}
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d1455108, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$34 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 359} = {
  rtable = List with 1 elements = {
    0 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      subquery = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 0} = {
        rtable = List with 3 elements = {
          0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: true, inFromCl: true} = {
            eref = Alias aliasname: 'customer' = {
              colnames = List with 8 elements = {
                0 = String [ 'c_custkey' ],
                1 = String [ 'c_name' ],
                2 = String [ 'c_address' ],
                3 = String [ 'c_nationkey' ],
                4 = String [ 'c_phone' ],
                5 = String [ 'c_acctbal' ],
                6 = String [ 'c_mktsegment' ],
                7 = String [ 'c_comment' ]
              }
            }
          },
          1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: true, inFromCl: true} = {
            eref = Alias aliasname: 'orders' = {
              colnames = List with 9 elements = {
                0 = String [ 'o_orderkey' ],
                1 = String [ 'o_custkey' ],
                2 = String [ 'o_orderstatus' ],
                3 = String [ 'o_totalprice' ],
                4 = String [ 'o_orderdate' ],
                5 = String [ 'o_orderpriority' ],
                6 = String [ 'o_clerk' ],
                7 = String [ 'o_shippriority' ],
                8 = String [ 'o_comment' ]
              }
            }
          },
          2 = RangeTblEntry {rtekind: RTE_JOIN, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_LEFT, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
            joinaliasvars = List with 17 elements = {
              0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1},
              1 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1},
              2 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1},
              3 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1},
              4 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1},
              5 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1},
              6 = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1},
              7 = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1},
              8 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1},
              9 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1},
              10 = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1},
              11 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1},
              12 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1},
              13 = Var {varno: 2, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1},
              14 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1},
              15 = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1},
              16 = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
            },
            joinleftcols = IntList with 8 elements = {1, 2, 3, 4, 5, 6, 7, 8},
            joinrightcols = IntList with 9 elements = {1, 2, 3, 4, 5, 6, 7, 8, 9},
            eref = Alias aliasname: 'unnamed_join' = {
              colnames = List with 17 elements = {
                0 = String [ 'c_custkey' ],
                1 = String [ 'c_name' ],
                2 = String [ 'c_address' ],
                3 = String [ 'c_nationkey' ],
                4 = String [ 'c_phone' ],
                5 = String [ 'c_acctbal' ],
                6 = String [ 'c_mktsegment' ],
                7 = String [ 'c_comment' ],
                8 = String [ 'o_orderkey' ],
                9 = String [ 'o_custkey' ],
                10 = String [ 'o_orderstatus' ],
                11 = String [ 'o_totalprice' ],
                12 = String [ 'o_orderdate' ],
                13 = String [ 'o_orderpriority' ],
                14 = String [ 'o_clerk' ],
                15 = String [ 'o_shippriority' ],
                16 = String [ 'o_comment' ]
              }
            }
          }
        },
        rteperminfos = List with 2 elements = {
          0 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8), insertedCols: 0x0, updatedCols: 0x0},
          1 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 16), insertedCols: 0x0, updatedCols: 0x0}
        },
        jointree = FromExpr  = {
          fromlist = List with 1 elements = {
            0 = JoinExpr {jointype: JOIN_LEFT, isNatural: false, rtindex: 3} = {
              larg = RangeTblRef rtindex: 1,
              rarg = RangeTblRef rtindex: 2,
              quals = BoolExpr {boolop: AND_EXPR, location: 190} = {
                args = List with 2 elements = {
                  0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 170} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 160},
                      1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 172}
                    }
                  },
                  1 = OpExpr {opno: 1210, opfuncid: 851, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 204} = {
                    args = List with 2 elements = {
                      0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                        arg = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: 194}
                      },
                      1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769606136, constisnull: false, constbyval: false, location: 213}
                    }
                  }
                }
              }
            }
          }
        },
        targetList = List with 2 elements = {
          0 = TargetEntry {resno: 1, resname: 'c_custkey', ressortgroupref: 1, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
            expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 67}
          },
          1 = TargetEntry {resno: 2, resname: 'count', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 0, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: -1, aggtransno: -1, location: 84} = {
              aggargtypes = OidList with 1 elements = {23},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 90}
                }
              }
            }
          }
        },
        groupClause = List with 1 elements = {
          0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
        }
      },
      alias = Alias aliasname: 'c_orders' = {
        colnames = List with 2 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_count' ]
        }
      },
      eref = Alias aliasname: 'c_orders' = {
        colnames = List with 2 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_count' ]
        }
      }
    }
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = RangeTblRef rtindex: 1
    }
  },
  targetList = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'c_count', ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: 1, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'custdist', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 20}
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 2, eqop: 410, sortop: 413, nulls_first: true, hashable: true}
  },
  sortClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 410, sortop: 413, nulls_first: true, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 410, sortop: 413, nulls_first: true, hashable: true}
  }
}
$35 = SortPath T_Sort (cost=0.06..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 16, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [2, 1],
    exprs = List with 2 elements = {
      0 = Var {varno: 1, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
      1 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 20}
    }
  },
  path.pathkeys = List with 2 elements = {
    0 = PathKey {pk_opfamily: 1976, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: <>, ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1976},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: <>, em_is_const: false, em_is_child: false, em_datatype: 20} = {
            em_expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 20},
            em_jdomain = JoinDomain jd_relids: (b 1)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 1976, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1976},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 20} = {
            em_expr = Var {varno: 1, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
            em_jdomain = JoinDomain jd_relids: (b 1)
          }
        }
      }
    }
  },
  subpath = AggPath T_Agg (cost=0.04..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 0} = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 16, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [2, 1],
      exprs = List with 2 elements = {
        0 = Var {varno: 1, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
        1 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 20}
      }
    },
    subpath = SubqueryScanPath T_SubqueryScan (cost=0.02..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
      path.parent = (b 1),
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [2],
        exprs = List with 1 elements = {
          0 = Var {varno: 1, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
        }
      },
      subpath = AggPath T_Agg (cost=0.02..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 0} = {
        path.parent = <>,
        path.pathtarget = PathTarget {cost: (0.00..0.00), width: 12, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          sortgrouprefs = [1, 0],
          exprs = List with 2 elements = {
            0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 67},
            1 = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 84} = {
              aggargtypes = OidList with 1 elements = {23},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 90}
                }
              }
            }
          }
        },
        subpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 1 2 3),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            sortgrouprefs = [1, 0],
            exprs = List with 2 elements = {
              0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 67},
              1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 90}
            }
          },
          jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 1),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 1 elements = {
                0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 67}
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 2),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 90},
                1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 172}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: false, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: (b 1), left_relids: (b 1), right_relids: (b 2), rinfo_serial: 2, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 170} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 160},
                  1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 172}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976}
            }
          }
        },
        groupClause = List with 1 elements = {
          0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
        }
      }
    },
    groupClause = List with 1 elements = {
      0 = SortGroupClause {tleSortGroupRef: 2, eqop: 410, sortop: 413, nulls_first: true, hashable: true}
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1455108, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$36 = Sort (cost=0.06..0.07 rows=1 width=16 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) numCols: 2 = {
  sortColIdx = [2, 1],
  sortOperators = [413, 413],
  collations = [0, 0],
  nullsFirst = [True, True],
  plan.targetlist = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 'c_count', ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'custdist', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    }
  },
  plan.lefttree = Agg (cost=0.04..0.05 rows=1 width=16 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 0, aggParams: 0x0} = {
    grpColIdx = [2],
    grpOperators = [410],
    grpCollations = [0],
    plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 'c_count', ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'custdist', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 20}
      }
    },
    plan.lefttree = Agg (cost=0.02..0.03 rows=1 width=12 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 0, aggParams: 0x0} = {
      grpColIdx = [1],
      grpOperators = [96],
      grpCollations = [0],
      plan.targetlist = List with 2 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 84} = {
            aggargtypes = OidList with 1 elements = {23},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 90}
              }
            }
          }
        }
      },
      plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=8 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_LEFT, join.inner_unique: false} = {
        join.plan.targetlist = List with 2 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 67}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: (b 3), varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 90}
          }
        },
        join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
          scan.plan.targetlist = List with 8 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
          scan.plan.targetlist = List with 9 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
            },
            8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = OpExpr {opno: 1210, opfuncid: 851, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 204} = {
              args = List with 2 elements = {
                0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                  arg = Var {varno: 3, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: 194}
                },
                1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769697840, constisnull: false, constbyval: false, location: 213}
              }
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 170} = {
            args = List with 2 elements = {
              0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 160},
              1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: 172}
            }
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d1455578, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$37 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 329} = {
  rtable = List with 2 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74550, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'part' = {
        colnames = List with 9 elements = {
          0 = String [ 'p_partkey' ],
          1 = String [ 'p_name' ],
          2 = String [ 'p_mfgr' ],
          3 = String [ 'p_brand' ],
          4 = String [ 'p_type' ],
          5 = String [ 'p_size' ],
          6 = String [ 'p_container' ],
          7 = String [ 'p_retailprice' ],
          8 = String [ 'p_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 9 13 14 18), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74550, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 12), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 2 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2
    },
    quals = List with 3 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 222} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 212},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 224}
        }
      },
      1 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 251} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 240},
          1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550033, constisnull: false, constbyval: true, location: 259}
        }
      },
      2 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 289} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 278},
          1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446609894509551616, constisnull: false, constbyval: true, location: -1}
        }
      }
    }
  },
  targetList = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'promo_revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 121} = {
        args = List with 2 elements = {
          0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 16} = {
            args = List with 2 elements = {
              0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769604944, constisnull: false, constbyval: false, location: 9},
              1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 18} = {
                aggargtypes = OidList with 1 elements = {1700},
                args = List with 1 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = CaseExpr {casetype: 1700, casecollid: 0, location: 22} = {
                      args = List with 1 elements = {
                        0 = CaseWhen location: 31 = {
                          expr = OpExpr {opno: 1209, opfuncid: 850, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 43} = {
                            args = List with 2 elements = {
                              0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                                arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 36}
                              },
                              1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769605504, constisnull: false, constbyval: false, location: 48}
                            }
                          },
                          result = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 84} = {
                            args = List with 2 elements = {
                              0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 68},
                              1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 89} = {
                                args = List with 2 elements = {
                                  0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769604928, constisnull: false, constbyval: false, location: -1},
                                  1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 91}
                                }
                              }
                            }
                          }
                        }
                      },
                      defresult = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769639320, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                }
              }
            }
          },
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 123} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 143} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 127},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 148} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769644024, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 150}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
$38 = AggPath T_Agg (cost=0.04..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 256} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.01), width: 32, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [0],
    exprs = List with 1 elements = {
      0 = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 121} = {
        args = List with 2 elements = {
          0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 16} = {
            args = List with 2 elements = {
              0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769604944, constisnull: false, constbyval: false, location: 9},
              1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 18} = {
                aggargtypes = OidList with 1 elements = {1700},
                args = List with 1 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = CaseExpr {casetype: 1700, casecollid: 0, location: 22} = {
                      args = List with 1 elements = {
                        0 = CaseWhen location: 31 = {
                          expr = OpExpr {opno: 1209, opfuncid: 850, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 43} = {
                            args = List with 2 elements = {
                              0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                                arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 36}
                              },
                              1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769605504, constisnull: false, constbyval: false, location: 48}
                            }
                          },
                          result = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 84} = {
                            args = List with 2 elements = {
                              0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 68},
                              1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 89} = {
                                args = List with 2 elements = {
                                  0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769604928, constisnull: false, constbyval: false, location: -1},
                                  1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 91}
                                }
                              }
                            }
                          }
                        }
                      },
                      defresult = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769639320, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                }
              }
            }
          },
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 123} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 143} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 127},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 148} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769644024, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 150}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  subpath = ProjectionPath T_Result (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
    path.parent = (b 1 2),
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 104, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      exprs = List with 3 elements = {
        0 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 36},
        1 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 68},
        2 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 91}
      }
    },
    subpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
      jpath.path.parent = (b 1 2),
      jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 104, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        exprs = List with 3 elements = {
          0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 68},
          1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 91},
          2 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 36}
        }
      },
      jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
        parent = (b 1),
        pathtarget = PathTarget {cost: (0.00..0.00), width: 40, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 3 elements = {
            0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 68},
            1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 91},
            2 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 212}
          }
        }
      },
      jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
        parent = (b 2),
        pathtarget = PathTarget {cost: (0.00..0.00), width: 72, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 2 elements = {
            0 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 36},
            1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 224}
          }
        }
      },
      jpath.joinrestrictinfo = List with 1 elements = {
        0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 1), rinfo_serial: 4, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
          clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 224},
              1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 212}
            }
          },
          mergeopfamilies = OidList with 1 elements = {1976},
          left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 224},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          },
          right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 212},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d1455578, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$39 = Agg (cost=0.04..0.05 rows=1 width=32 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numCols: 0, numGroups: 1, transitionSpace: 256, aggParams: 0x0} = {
  plan.targetlist = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'promo_revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 121} = {
        args = List with 2 elements = {
          0 = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 16} = {
            args = List with 2 elements = {
              0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769604944, constisnull: false, constbyval: false, location: 9},
              1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 18} = {
                aggargtypes = OidList with 1 elements = {1700},
                args = List with 1 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = CaseExpr {casetype: 1700, casecollid: 0, location: 22} = {
                      args = List with 1 elements = {
                        0 = CaseWhen location: 31 = {
                          expr = OpExpr {opno: 1209, opfuncid: 850, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 43} = {
                            args = List with 2 elements = {
                              0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                                arg = Var {varno: -2, varattno: 1, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 36}
                              },
                              1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769605504, constisnull: false, constbyval: false, location: 48}
                            }
                          },
                          result = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 84} = {
                            args = List with 2 elements = {
                              0 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 68},
                              1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 89} = {
                                args = List with 2 elements = {
                                  0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769604928, constisnull: false, constbyval: false, location: -1},
                                  1 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 91}
                                }
                              }
                            }
                          }
                        }
                      },
                      defresult = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769639320, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                }
              }
            }
          },
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 123} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 143} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 127},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 148} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769644024, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 150}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=104 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
    join.plan.targetlist = List with 3 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -1, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 36}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 68}
      },
      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 91}
      }
    },
    join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=40 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
      scan.plan.targetlist = List with 16 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
        },
        4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
        },
        5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
        },
        6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
        },
        7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
        },
        8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: -1}
        },
        9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: -1}
        },
        10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: -1}
        },
        11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 12, location: -1}
        },
        12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 13, location: -1}
        },
        13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 14, location: -1}
        },
        14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 15, location: -1}
        },
        15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 16, location: -1}
        }
      },
      scan.plan.qual = List with 2 elements = {
        0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 251} = {
          args = List with 2 elements = {
            0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 240},
            1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550033, constisnull: false, constbyval: true, location: 259}
          }
        },
        1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 289} = {
          args = List with 2 elements = {
            0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: 278},
            1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446609894509551616, constisnull: false, constbyval: true, location: -1}
          }
        }
      }
    },
    join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=72 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
      scan.plan.targetlist = List with 9 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
        },
        4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
        },
        5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
        },
        6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
        },
        7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
        },
        8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 27, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
        }
      }
    },
    join.joinqual = List with 1 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
        args = List with 2 elements = {
          0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 224},
          1 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 212}
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d138c948, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$40 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: false, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 238} = {
  rtable = List with 2 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 197619, relkind: 118 'v', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      subquery = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: -1, stmt_len: 269} = {
        rtable = List with 1 elements = {
          0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: true, inFromCl: true} = {
            eref = Alias aliasname: 'lineitem' = {
              colnames = List with 16 elements = {
                0 = String [ 'l_orderkey' ],
                1 = String [ 'l_partkey' ],
                2 = String [ 'l_suppkey' ],
                3 = String [ 'l_linenumber' ],
                4 = String [ 'l_quantity' ],
                5 = String [ 'l_extendedprice' ],
                6 = String [ 'l_discount' ],
                7 = String [ 'l_tax' ],
                8 = String [ 'l_returnflag' ],
                9 = String [ 'l_linestatus' ],
                10 = String [ 'l_shipdate' ],
                11 = String [ 'l_commitdate' ],
                12 = String [ 'l_receiptdate' ],
                13 = String [ 'l_shipinstruct' ],
                14 = String [ 'l_shipmode' ],
                15 = String [ 'l_comment' ]
              }
            }
          }
        },
        rteperminfos = List with 1 elements = {
          0 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 10, selectedCols: (b 10 13 14 18), insertedCols: 0x0, updatedCols: 0x0}
        },
        jointree = FromExpr  = {
          fromlist = List with 1 elements = {
            0 = RangeTblRef rtindex: 1
          },
          quals = BoolExpr {boolop: AND_EXPR, location: -1} = {
            args = List with 2 elements = {
              0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: -1},
                  1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550155, constisnull: false, constbyval: true, location: -1}
                }
              },
              1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: -1},
                  1 = OpExpr {opno: 1076, opfuncid: 2071, opresulttype: 1114, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550155, constisnull: false, constbyval: true, location: -1},
                      1 = Const {consttype: 1186, consttypmod: 196607, constcollid: 0, constlen: 16, constvalue: 94084770120872, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                }
              }
            }
          }
        },
        targetList = List with 2 elements = {
          0 = TargetEntry {resno: 1, resname: 'supplier_no', ressortgroupref: 1, resorigtbl: 74565, resorigcol: 3, resjunk: false} = {
            expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 'total_revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 0, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: -1, aggtransno: -1, location: -1} = {
              aggargtypes = OidList with 1 elements = {1700},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1},
                      1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                        args = List with 2 elements = {
                          0 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                            args = List with 1 elements = {
                              0 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: -1}
                            }
                          },
                          1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        groupClause = List with 1 elements = {
          0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
        }
      },
      eref = Alias aliasname: 'revenue0' = {
        colnames = List with 2 elements = {
          0 = String [ 'supplier_no' ],
          1 = String [ 'total_revenue' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 12), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 197619, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 2 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2
    },
    quals = List with 2 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 116} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
        }
      },
      1 = OpExpr {opno: 1752, opfuncid: 1718, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 150} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 136},
          1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
        }
      }
    }
  },
  targetList = List with 5 elements = {
    0 = TargetEntry {resno: 1, resname: 's_suppkey', ressortgroupref: 1, resorigtbl: 74553, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 's_name', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22}
    },
    2 = TargetEntry {resno: 3, resname: 's_address', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 3, resjunk: false} = {
      expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 32}
    },
    3 = TargetEntry {resno: 4, resname: 's_phone', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45}
    },
    4 = TargetEntry {resno: 5, resname: 'total_revenue', ressortgroupref: 0, resorigtbl: 197619, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 56}
    }
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
  }
}
$41 = NestPath T_NestLoop (cost=0.06..0.11 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0)  = {
  jpath.path.parent = (b 1 2),
  jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 302, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 0, 0, 0, 0],
    exprs = List with 5 elements = {
      0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
      1 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
      2 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 32},
      3 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45},
      4 = Var {varno: 2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 56}
    }
  },
  jpath.path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 0, ec_min_security: 0, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1976},
        ec_members = List with 2 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          },
          1 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        },
        ec_sources = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 1, eval_cost: (-1.00..0.00), norm_selec: -1.0000, outer_selec: -1.0000, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 116} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            },
            right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        },
        ec_derives = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 3, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            },
            right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      }
    }
  },
  jpath.outerjoinpath = SubqueryScanPath T_SubqueryScan (cost=0.01..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = (b 2),
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 36, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      exprs = List with 2 elements = {
        0 = Var {varno: 2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 56},
        1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
      }
    },
    path.pathkeys = List with 1 elements = {
      0 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 0, ec_min_security: 0, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1976},
          ec_members = List with 2 elements = {
            0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            },
            1 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          },
          ec_sources = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 1, eval_cost: (-1.00..0.00), norm_selec: -1.0000, outer_selec: -1.0000, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 116} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
                  1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              },
              right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              }
            }
          },
          ec_derives = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 3, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
                  1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              },
              right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              }
            }
          }
        }
      }
    },
    subpath = AggPath T_Agg (cost=0.01..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
      path.parent = <>,
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 36, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 0],
        exprs = List with 2 elements = {
          0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1},
          1 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: -1} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769822632, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      path.pathkeys = List with 1 elements = {
        0 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
          pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
            ec_opfamilies = OidList with 1 elements = {1976},
            ec_members = List with 1 elements = {
              0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1},
                em_jdomain = JoinDomain jd_relids: (b 1)
              }
            }
          }
        }
      },
      subpath = SortPath T_Sort (cost=0.01..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        path.parent = <>,
        path.pathtarget = PathTarget {cost: (0.00..0.00), width: 40, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          sortgrouprefs = [1, 0, 0],
          exprs = List with 3 elements = {
            0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1},
            1 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1},
            2 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
          }
        },
        path.pathkeys = List with 1 elements = {
          0 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
            pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
              ec_opfamilies = OidList with 1 elements = {1976},
              ec_members = List with 1 elements = {
                0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1},
                  em_jdomain = JoinDomain jd_relids: (b 1)
                }
              }
            }
          }
        },
        subpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 1),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 40, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            sortgrouprefs = [1, 0, 0],
            exprs = List with 3 elements = {
              0 = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1},
              1 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1},
              2 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
            }
          }
        }
      },
      groupClause = List with 1 elements = {
        0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
      },
      qual = List with 1 elements = {
        0 = OpExpr {opno: 1752, opfuncid: 1718, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 150} = {
          args = List with 2 elements = {
            0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: -1} = {
              aggargtypes = OidList with 1 elements = {1700},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1},
                      1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                        args = List with 2 elements = {
                          0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769829704, constisnull: false, constbyval: false, location: -1},
                          1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
                        }
                      }
                    }
                  }
                }
              }
            },
            1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
          }
        }
      }
    }
  },
  jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
    parent = (b 1),
    pathtarget = PathTarget {cost: (0.00..0.00), width: 270, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      exprs = List with 4 elements = {
        0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9},
        1 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22},
        2 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 32},
        3 = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45}
      }
    }
  },
  jpath.joinrestrictinfo = List with 1 elements = {
    0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 3, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
      clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
          1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
        }
      },
      mergeopfamilies = OidList with 1 elements = {1976},
      left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
        em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
        em_jdomain = JoinDomain jd_relids: (b 1 2)
      },
      right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
        em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118},
        em_jdomain = JoinDomain jd_relids: (b 1 2)
      }
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d138c948, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$42 = NestLoop (cost=0.06..0.11 rows=1 width=302 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = False) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
  join.plan.targetlist = List with 5 elements = {
    0 = TargetEntry {resno: 1, resname: 's_suppkey', ressortgroupref: 1, resorigtbl: 74553, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 's_name', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 22}
    },
    2 = TargetEntry {resno: 3, resname: 's_address', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 3, resjunk: false} = {
      expr = Var {varno: -1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 32}
    },
    3 = TargetEntry {resno: 4, resname: 's_phone', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: -1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 45}
    },
    4 = TargetEntry {resno: 5, resname: 'total_revenue', ressortgroupref: 0, resorigtbl: 197619, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 56}
    }
  },
  join.plan.lefttree = Agg (cost=0.01..0.04 rows=1 width=36 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
    grpColIdx = [1],
    grpOperators = [96],
    grpCollations = [0],
    plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: -1} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1},
                  1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769822632, constisnull: false, constbyval: false, location: -1},
                      1 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    plan.qual = List with 1 elements = {
      0 = OpExpr {opno: 1752, opfuncid: 1718, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 150} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: -1} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1},
                    1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769829704, constisnull: false, constbyval: false, location: -1},
                        1 = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
                      }
                    }
                  }
                }
              }
            }
          },
          1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
        }
      }
    },
    plan.lefttree = Sort (cost=0.01..0.02 rows=1 width=40 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) numCols: 1 = {
      sortColIdx = [1],
      sortOperators = [97],
      collations = [0],
      nullsFirst = [False],
      plan.targetlist = List with 3 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
        }
      },
      plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=40 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
        scan.plan.targetlist = List with 3 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
          }
        },
        scan.plan.qual = List with 2 elements = {
          0 = OpExpr {opno: 1098, opfuncid: 1090, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: -1},
              1 = Const {consttype: 1082, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 18446744073709550155, constisnull: false, constbyval: true, location: -1}
            }
          },
          1 = OpExpr {opno: 2345, opfuncid: 2338, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: -1},
              1 = Const {consttype: 1114, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 18446625705709551616, constisnull: false, constbyval: true, location: -1}
            }
          }
        }
      }
    }
  },
  join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=270 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
    scan.plan.targetlist = List with 7 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
      },
      4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
      },
      5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
      },
      6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: 1, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
      }
    }
  },
  join.plan.initPlan = List with 1 elements = {
    0 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'InitPlan 1 (returns $0)', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: true, startup_cost: 0, per_call_cost: 0.045000000000000005} = {
      setParam = IntList with 1 elements = {0}
    }
  },
  join.joinqual = List with 1 elements = {
    0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
      args = List with 2 elements = {
        0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 106},
        1 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 118}
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d145e930, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$43 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 488} = {
  rtable = List with 2 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74556, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'partsupp' = {
        colnames = List with 5 elements = {
          0 = String [ 'ps_partkey' ],
          1 = String [ 'ps_suppkey' ],
          2 = String [ 'ps_availqty' ],
          3 = String [ 'ps_supplycost' ],
          4 = String [ 'ps_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74550, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'part' = {
        colnames = List with 9 elements = {
          0 = String [ 'p_partkey' ],
          1 = String [ 'p_name' ],
          2 = String [ 'p_mfgr' ],
          3 = String [ 'p_brand' ],
          4 = String [ 'p_type' ],
          5 = String [ 'p_size' ],
          6 = String [ 'p_container' ],
          7 = String [ 'p_retailprice' ],
          8 = String [ 'p_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74556, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74550, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11 12 13), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 2 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2
    },
    quals = List with 5 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 125} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 115},
          1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 127}
        }
      },
      1 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 152} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 144},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769643696, constisnull: false, constbyval: false, location: 155}
        }
      },
      2 = OpExpr {opno: 1210, opfuncid: 851, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 179} = {
        args = List with 2 elements = {
          0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
            arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 172}
          },
          1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769644152, constisnull: false, constbyval: false, location: 188}
        }
      },
      3 = ScalarArrayOpExpr {opno: 96, opfuncid: 65, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 0, location: 220} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 213},
          1 = Const {consttype: 1007, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769709152, constisnull: false, constbyval: false, location: -1}
        }
      },
      4 = BoolExpr {boolop: NOT_EXPR, location: -1} = {
        args = List with 1 elements = {
          0 = SubPlan {subLinkType: ANY_SUBLINK, plan_id: 1, plan_name: 'SubPlan 1', firstColType: 23, firstColTypmod: -1, firstColCollation: 0, useHashTable: true, unknownEqFalse: false, parallel_safe: true, startup_cost: 0.0025000000000000001, per_call_cost: 0.0025000000000000001} = {
            testexpr = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 271} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 260},
                1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 23, paramtypmod: -1, paramcollid: 0, location: -1}
              }
            },
            paramIds = IntList with 1 elements = {0}
          }
        }
      }
    }
  },
  targetList = List with 4 elements = {
    0 = TargetEntry {resno: 1, resname: 'p_brand', ressortgroupref: 2, resorigtbl: 74550, resorigcol: 4, resjunk: false} = {
      expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'p_type', ressortgroupref: 3, resorigtbl: 74550, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20}
    },
    2 = TargetEntry {resno: 3, resname: 'p_size', ressortgroupref: 4, resorigtbl: 74550, resorigcol: 6, resjunk: false} = {
      expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30}
    },
    3 = TargetEntry {resno: 4, resname: 'supplier_cnt', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: true, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 40} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
          }
        },
        aggdistinct = List with 1 elements = {
          0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
        }
      }
    }
  },
  groupClause = List with 3 elements = {
    0 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 3, eqop: 98, sortop: 664, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 4, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
  },
  sortClause = List with 4 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 410, sortop: 413, nulls_first: true, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 3, eqop: 98, sortop: 664, nulls_first: false, hashable: true},
    3 = SortGroupClause {tleSortGroupRef: 4, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
  }
}
$44 = SortPath T_Sort (cost=0.06..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 124, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [2, 3, 4, 1],
    exprs = List with 4 elements = {
      0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
      1 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20},
      2 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
      3 = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: true, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 40} = {
        aggargtypes = OidList with 1 elements = {23},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
          }
        },
        aggdistinct = List with 1 elements = {
          0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
        }
      }
    }
  },
  path.pathkeys = List with 4 elements = {
    0 = PathKey {pk_opfamily: 1976, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1976},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 20} = {
            em_expr = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: true, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 40} = {
              aggargtypes = OidList with 1 elements = {23},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
                }
              },
              aggdistinct = List with 1 elements = {
                0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    },
    2 = PathKey {pk_opfamily: 1994, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 3, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {1994, 2095},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 25} = {
            em_expr = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
              arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20}
            },
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    },
    3 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 4, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1976},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
            em_jdomain = JoinDomain jd_relids: (b 1 2)
          }
        }
      }
    }
  },
  subpath = AggPath T_Agg (cost=0.03..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 0} = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 124, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [2, 3, 4, 1],
      exprs = List with 4 elements = {
        0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
        1 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20},
        2 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
        3 = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: true, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 40} = {
          aggargtypes = OidList with 1 elements = {23},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
            }
          },
          aggdistinct = List with 1 elements = {
            0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
          }
        }
      }
    },
    path.pathkeys = List with 4 elements = {
      0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      },
      1 = PathKey {pk_opfamily: 1994, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 3, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {1994, 2095},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 25} = {
              em_expr = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20}
              },
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      },
      2 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 4, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1976},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      },
      3 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1976},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55},
              em_jdomain = JoinDomain jd_relids: (b 1 2)
            }
          }
        }
      }
    },
    subpath = SortPath T_Sort (cost=0.03..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
      path.parent = <>,
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 120, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [2, 3, 4, 0],
        exprs = List with 4 elements = {
          0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
          1 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20},
          2 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
          3 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
        }
      },
      path.pathkeys = List with 4 elements = {
        0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
          pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
            ec_opfamilies = OidList with 2 elements = {426, 2097},
            ec_members = List with 1 elements = {
              0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
                em_expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              }
            }
          }
        },
        1 = PathKey {pk_opfamily: 1994, pk_strategy: 1, pk_nulls_first: false} = {
          pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 3, ec_min_security: 4294967295, ec_max_security: 0} = {
            ec_opfamilies = OidList with 2 elements = {1994, 2095},
            ec_members = List with 1 elements = {
              0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 25} = {
                em_expr = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                  arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20}
                },
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              }
            }
          }
        },
        2 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
          pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 4, ec_min_security: 4294967295, ec_max_security: 0} = {
            ec_opfamilies = OidList with 1 elements = {1976},
            ec_members = List with 1 elements = {
              0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              }
            }
          }
        },
        3 = PathKey {pk_opfamily: 1976, pk_strategy: 1, pk_nulls_first: false} = {
          pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
            ec_opfamilies = OidList with 1 elements = {1976},
            ec_members = List with 1 elements = {
              0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              }
            }
          }
        }
      },
      subpath = ProjectionPath T_Result (cost=0.00..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
        path.parent = (b 1 2),
        path.pathtarget = PathTarget {cost: (0.00..0.00), width: 120, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          sortgrouprefs = [2, 3, 4, 0],
          exprs = List with 4 elements = {
            0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
            1 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20},
            2 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
            3 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
          }
        },
        subpath = NestPath T_NestLoop (cost=0.00..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 1 2),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 120, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 4 elements = {
              0 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55},
              1 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
              2 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20},
              3 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30}
            }
          },
          jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 1),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55},
                1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 127}
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 2),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 120, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 4 elements = {
                0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9},
                1 = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20},
                2 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30},
                3 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 115}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 6, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 127},
                  1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 115}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 127},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              },
              right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 115},
                em_jdomain = JoinDomain jd_relids: (b 1 2)
              }
            }
          }
        }
      }
    },
    groupClause = List with 3 elements = {
      0 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true},
      1 = SortGroupClause {tleSortGroupRef: 3, eqop: 98, sortop: 664, nulls_first: false, hashable: true},
      2 = SortGroupClause {tleSortGroupRef: 4, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d145e930, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$45 = Sort (cost=0.06..0.07 rows=1 width=124 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) numCols: 4 = {
  sortColIdx = [4, 1, 2, 3],
  sortOperators = [413, 1058, 664, 97],
  collations = [0, 100, 100, 0],
  nullsFirst = [True, False, False, False],
  plan.targetlist = List with 4 elements = {
    0 = TargetEntry {resno: 1, resname: 'p_brand', ressortgroupref: 2, resorigtbl: 74550, resorigcol: 4, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'p_type', ressortgroupref: 3, resorigtbl: 74550, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
    },
    2 = TargetEntry {resno: 3, resname: 'p_size', ressortgroupref: 4, resorigtbl: 74550, resorigcol: 6, resjunk: false} = {
      expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
    },
    3 = TargetEntry {resno: 4, resname: 'supplier_cnt', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 4, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    }
  },
  plan.lefttree = Agg (cost=0.03..0.05 rows=1 width=124 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 3, numGroups: 1, transitionSpace: 0, aggParams: 0x0} = {
    grpColIdx = [1, 2, 3],
    grpOperators = [1054, 98, 96],
    grpCollations = [100, 100, 0],
    plan.targetlist = List with 4 elements = {
      0 = TargetEntry {resno: 1, resname: 'p_brand', ressortgroupref: 2, resorigtbl: 74550, resorigcol: 4, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'p_type', ressortgroupref: 3, resorigtbl: 74550, resorigcol: 5, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 'p_size', ressortgroupref: 4, resorigtbl: 74550, resorigcol: 6, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 'supplier_cnt', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Aggref {aggfnoid: 2147, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: true, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 40} = {
          aggargtypes = OidList with 1 elements = {23},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
            }
          },
          aggdistinct = List with 1 elements = {
            0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
          }
        }
      }
    },
    plan.lefttree = Sort (cost=0.03..0.03 rows=1 width=120 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) numCols: 4 = {
      sortColIdx = [1, 2, 3, 4],
      sortOperators = [1058, 664, 97, 97],
      collations = [100, 100, 0, 0],
      nullsFirst = [False, False, False, False],
      plan.targetlist = List with 4 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 3, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 4, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
        }
      },
      plan.lefttree = NestLoop (cost=0.00..0.02 rows=1 width=120 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 4 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 9}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 3, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 20}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 4, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -1, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 30}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 55}
          }
        },
        join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
          scan.plan.targetlist = List with 5 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 1, varattno: 5, vartype: 1043, vartypmod: 203, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = BoolExpr {boolop: NOT_EXPR, location: -1} = {
              args = List with 1 elements = {
                0 = SubPlan {subLinkType: ANY_SUBLINK, plan_id: 1, plan_name: 'SubPlan 1', firstColType: 23, firstColTypmod: -1, firstColCollation: 0, useHashTable: true, unknownEqFalse: false, parallel_safe: true, startup_cost: 0.0025000000000000001, per_call_cost: 0.0025000000000000001} = {
                  testexpr = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 271} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 260},
                      1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 23, paramtypmod: -1, paramcollid: 0, location: -1}
                    }
                  },
                  paramIds = IntList with 1 elements = {0}
                }
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=120 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
          scan.plan.targetlist = List with 9 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
            },
            8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 27, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
            }
          },
          scan.plan.qual = List with 3 elements = {
            0 = OpExpr {opno: 1057, opfuncid: 1053, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 152} = {
              args = List with 2 elements = {
                0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 144},
                1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769643696, constisnull: false, constbyval: false, location: 155}
              }
            },
            1 = OpExpr {opno: 1210, opfuncid: 851, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 179} = {
              args = List with 2 elements = {
                0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                  arg = Var {varno: 2, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 172}
                },
                1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769644152, constisnull: false, constbyval: false, location: 188}
              }
            },
            2 = ScalarArrayOpExpr {opno: 96, opfuncid: 65, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 0, location: 220} = {
              args = List with 2 elements = {
                0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 213},
                1 = Const {consttype: 1007, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769709152, constisnull: false, constbyval: false, location: -1}
              }
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 127},
              1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 115}
            }
          }
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d145e028, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$46 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 286} = {
  rtable = List with 2 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74550, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'part' = {
        colnames = List with 9 elements = {
          0 = String [ 'p_partkey' ],
          1 = String [ 'p_name' ],
          2 = String [ 'p_mfgr' ],
          3 = String [ 'p_brand' ],
          4 = String [ 'p_type' ],
          5 = String [ 'p_size' ],
          6 = String [ 'p_container' ],
          7 = String [ 'p_retailprice' ],
          8 = String [ 'p_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 9 12 13), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74550, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11 14), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 2 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2
    },
    quals = List with 4 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 92} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82},
          1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94}
        }
      },
      1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 118} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 110},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769642544, constisnull: false, constbyval: false, location: 120}
        }
      },
      2 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 149} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 137},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769642928, constisnull: false, constbyval: false, location: 151}
        }
      },
      3 = OpExpr {opno: 1754, opfuncid: 1722, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 178} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 167},
          1 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'SubPlan 1', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: false, startup_cost: 0, per_call_cost: 0.017499999999999998} = {
            parParam = IntList with 1 elements = {0},
            args = List with 1 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 273}
            }
          }
        }
      }
    }
  },
  targetList = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'avg_yearly', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 30} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13}
              }
            }
          },
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769641520, constisnull: false, constbyval: false, location: 32}
        }
      }
    }
  }
}
$47 = AggPath T_Agg (cost=0.02..0.03 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 32, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [0],
    exprs = List with 1 elements = {
      0 = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 30} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13}
              }
            }
          },
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769641520, constisnull: false, constbyval: false, location: 32}
        }
      }
    }
  },
  subpath = HashPath T_HashJoin (cost=0.01..0.02 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0) {num_batches: 1, inner_rows_total: 1} = {
    jpath.path.parent = (b 1 2),
    jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 18, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      exprs = List with 1 elements = {
        0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13}
      }
    },
    jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
      parent = (b 1),
      pathtarget = PathTarget {cost: (0.00..0.00), width: 40, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        exprs = List with 3 elements = {
          0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
          1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94},
          2 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 167}
        }
      }
    },
    jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
      parent = (b 2),
      pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        exprs = List with 1 elements = {
          0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82}
        }
      }
    },
    jpath.joinrestrictinfo = List with 2 elements = {
      0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 4, eval_cost: (0.00..0.02), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 1752, right_hasheqoperator: 1752} = {
        clause = OpExpr {opno: 1754, opfuncid: 1722, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 178} = {
          args = List with 2 elements = {
            0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 167},
            1 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'SubPlan 1', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: false, startup_cost: 0, per_call_cost: 0.017499999999999998} = {
              parParam = IntList with 1 elements = {0},
              args = List with 1 elements = {
                0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 273}
              }
            }
          }
        }
      },
      1 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 1), rinfo_serial: 5, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
        clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82},
            1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94}
          }
        },
        mergeopfamilies = OidList with 1 elements = {1976},
        left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        },
        right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        }
      }
    },
    path_hashclauses = List with 1 elements = {
      0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 1), rinfo_serial: 5, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
        clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82},
            1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94}
          }
        },
        mergeopfamilies = OidList with 1 elements = {1976},
        left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        },
        right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        }
      }
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d145e028, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$48 = Agg (cost=0.02..0.03 rows=1 width=32 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = False) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numCols: 0, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
  plan.targetlist = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'avg_yearly', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = OpExpr {opno: 1761, opfuncid: 1727, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 30} = {
        args = List with 2 elements = {
          0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13}
              }
            }
          },
          1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769641520, constisnull: false, constbyval: false, location: 32}
        }
      }
    }
  },
  plan.lefttree = HashJoin (cost=0.01..0.02 rows=1 width=18 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = False) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
    join.plan.targetlist = List with 1 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13}
      }
    },
    join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=40 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
      scan.plan.targetlist = List with 16 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
        },
        4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
        },
        5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
        },
        6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
        },
        7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
        },
        8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: -1}
        },
        9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: -1}
        },
        10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: -1}
        },
        11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 12, location: -1}
        },
        12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 13, location: -1}
        },
        13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 14, location: -1}
        },
        14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 15, location: -1}
        },
        15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 16, location: -1}
        }
      }
    },
    join.plan.righttree = Hash (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {skewTable: 74565, skewColumn: 2, skewInherit: false, rows_total: 0} = {
      plan.targetlist = List with 1 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
        }
      },
      plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
        scan.plan.targetlist = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82}
          }
        },
        scan.plan.qual = List with 2 elements = {
          0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 118} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 110},
              1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769642544, constisnull: false, constbyval: false, location: 120}
            }
          },
          1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 149} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 137},
              1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769642928, constisnull: false, constbyval: false, location: 151}
            }
          }
        }
      },
      hashkeys = List with 1 elements = {
        0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82}
      }
    },
    join.joinqual = List with 1 elements = {
      0 = OpExpr {opno: 1754, opfuncid: 1722, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 178} = {
        args = List with 2 elements = {
          0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 167},
          1 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'SubPlan 1', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: false, startup_cost: 0, per_call_cost: 0.017499999999999998} = {
            parParam = IntList with 1 elements = {0},
            args = List with 1 elements = {
              0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 273}
            }
          }
        }
      }
    },
    hashclauses = List with 1 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
        args = List with 2 elements = {
          0 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94},
          1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 82}
        }
      }
    },
    hashoperators = OidList with 1 elements = {96},
    hashcollations = OidList with 1 elements = {0},
    hashkeys = List with 1 elements = {
      0 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 94}
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d145e810, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$49 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 465} = {
  rtable = List with 4 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'customer' = {
        colnames = List with 8 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_name' ],
          2 = String [ 'c_address' ],
          3 = String [ 'c_nationkey' ],
          4 = String [ 'c_phone' ],
          5 = String [ 'c_acctbal' ],
          6 = String [ 'c_mktsegment' ],
          7 = String [ 'c_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: false} = {
      subquery = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 0} = {
        rtable = List with 1 elements = {
          0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: true, inFromCl: true} = {
            eref = Alias aliasname: 'lineitem' = {
              colnames = List with 16 elements = {
                0 = String [ 'l_orderkey' ],
                1 = String [ 'l_partkey' ],
                2 = String [ 'l_suppkey' ],
                3 = String [ 'l_linenumber' ],
                4 = String [ 'l_quantity' ],
                5 = String [ 'l_extendedprice' ],
                6 = String [ 'l_discount' ],
                7 = String [ 'l_tax' ],
                8 = String [ 'l_returnflag' ],
                9 = String [ 'l_linestatus' ],
                10 = String [ 'l_shipdate' ],
                11 = String [ 'l_commitdate' ],
                12 = String [ 'l_receiptdate' ],
                13 = String [ 'l_shipinstruct' ],
                14 = String [ 'l_shipmode' ],
                15 = String [ 'l_comment' ]
              }
            }
          }
        },
        rteperminfos = List with 1 elements = {
          0 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 12), insertedCols: 0x0, updatedCols: 0x0}
        },
        jointree = FromExpr  = {
          fromlist = List with 1 elements = {
            0 = RangeTblRef rtindex: 1
          }
        },
        targetList = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 'l_orderkey', ressortgroupref: 1, resorigtbl: 74565, resorigcol: 1, resjunk: false} = {
            expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 172}
          }
        },
        groupClause = List with 1 elements = {
          0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
        },
        havingQual = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 268} = {
          args = List with 2 elements = {
            0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 0, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: -1, aggtransno: -1, location: 252} = {
              aggargtypes = OidList with 1 elements = {1700},
              args = List with 1 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 256}
                }
              }
            },
            1 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
              args = List with 1 elements = {
                0 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 300, constisnull: false, constbyval: true, location: 270}
              }
            }
          }
        }
      },
      alias = Alias aliasname: 'ANY_subquery',
      eref = Alias aliasname: 'ANY_subquery' = {
        colnames = List with 1 elements = {
          0 = String [ 'l_orderkey' ]
        }
      }
    }
  },
  rteperminfos = List with 3 elements = {
    0 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 11 12), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 12), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = JoinExpr {jointype: JOIN_SEMI, isNatural: false, rtindex: 0} = {
        larg = FromExpr  = {
          fromlist = List with 3 elements = {
            0 = RangeTblRef rtindex: 1,
            1 = RangeTblRef rtindex: 2,
            2 = RangeTblRef rtindex: 3
          },
          quals = List with 2 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 294} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 284},
                1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 296}
              }
            },
            1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 323} = {
              args = List with 2 elements = {
                0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 312},
                1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 325}
              }
            }
          }
        },
        rarg = RangeTblRef rtindex: 4,
        quals = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 150} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 139},
              1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
            }
          }
        }
      }
    }
  },
  targetList = List with 6 elements = {
    0 = TargetEntry {resno: 1, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'c_custkey', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19}
    },
    2 = TargetEntry {resno: 3, resname: 'o_orderkey', ressortgroupref: 5, resorigtbl: 74562, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32}
    },
    3 = TargetEntry {resno: 4, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46}
    },
    4 = TargetEntry {resno: 5, resname: 'o_totalprice', ressortgroupref: 1, resorigtbl: 74562, resorigcol: 4, resjunk: false} = {
      expr = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61}
    },
    5 = TargetEntry {resno: 6, resname: 'sum', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 77} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
          }
        }
      }
    }
  },
  groupClause = List with 5 elements = {
    0 = SortGroupClause {tleSortGroupRef: 3, eqop: 98, sortop: 664, nulls_first: false, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 4, eqop: 96, sortop: 97, nulls_first: false, hashable: true},
    2 = SortGroupClause {tleSortGroupRef: 5, eqop: 96, sortop: 97, nulls_first: false, hashable: true},
    3 = SortGroupClause {tleSortGroupRef: 2, eqop: 1093, sortop: 1095, nulls_first: false, hashable: true},
    4 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true}
  },
  sortClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1752, sortop: 1756, nulls_first: true, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1093, sortop: 1095, nulls_first: false, hashable: true}
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 100, constisnull: false, constbyval: true, location: -1}
}
$50 = LimitPath T_Limit (cost=0.09..0.09 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) limitOption: LIMIT_OPTION_COUNT = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 130, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [3, 4, 5, 2, 1, 0],
    exprs = List with 6 elements = {
      0 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
      1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19},
      2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
      3 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
      4 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
      5 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 77} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
          }
        }
      }
    }
  },
  path.pathkeys = List with 2 elements = {
    0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1988},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
            em_expr = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
            em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 434, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {434},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1082} = {
            em_expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
            em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.09..0.09 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 130, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [3, 4, 5, 2, 1, 0],
      exprs = List with 6 elements = {
        0 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
        1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19},
        2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
        3 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
        4 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
        5 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 77} = {
          aggargtypes = OidList with 1 elements = {1700},
          args = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
            }
          }
        }
      }
    },
    path.pathkeys = List with 2 elements = {
      0 = PathKey {pk_opfamily: 1988, pk_strategy: 5, pk_nulls_first: true} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1988},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1700} = {
              em_expr = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
            }
          }
        }
      },
      1 = PathKey {pk_opfamily: 434, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {434},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 1082} = {
              em_expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
            }
          }
        }
      }
    },
    subpath = AggPath T_Agg (cost=0.07..0.08 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
      path.parent = <>,
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 130, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [3, 4, 5, 2, 1, 0],
        exprs = List with 6 elements = {
          0 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
          1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19},
          2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
          3 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
          4 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
          5 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 77} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
              }
            }
          }
        }
      },
      subpath = ProjectionPath T_Result (cost=0.01..0.06 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
        path.parent = (b 1 2 3 4),
        path.pathtarget = PathTarget {cost: (0.00..0.00), width: 116, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          sortgrouprefs = [4, 5, 0, 0, 0, 0],
          exprs = List with 6 elements = {
            0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19},
            1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
            2 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
            3 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
            4 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
            5 = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
          }
        },
        subpath = NestPath T_NestLoop (cost=0.01..0.06 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 1 2 3 4),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 116, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 6 elements = {
              0 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
              1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19},
              2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
              3 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
              4 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
              5 = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 1 2 3),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 120, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 7 elements = {
                0 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
                1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19},
                2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
                3 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
                4 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
                5 = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81},
                6 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 325}
              }
            },
            jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
              jpath.path.parent = (b 1 2),
              jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 98, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 5 elements = {
                  0 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
                  1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19},
                  2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
                  3 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
                  4 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61}
                }
              },
              jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 1),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 72, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
                    1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19}
                  }
                }
              },
              jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 2),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 30, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 4 elements = {
                    0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32},
                    1 = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46},
                    2 = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61},
                    3 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 296}
                  }
                }
              },
              jpath.joinrestrictinfo = List with 1 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 5, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                  clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 284},
                      1 = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 296}
                    }
                  },
                  mergeopfamilies = OidList with 1 elements = {1976},
                  left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 284},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                  },
                  right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 296},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                  }
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 3),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 22, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81},
                  1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 325}
                }
              }
            },
            jpath.joinrestrictinfo = List with 1 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 3), rinfo_serial: 6, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 312},
                    1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 325}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 312},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                },
                right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 325},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
                }
              }
            }
          },
          jpath.innerjoinpath = SubqueryScanPath T_SubqueryScan (cost=0.01..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            path.parent = (b 4),
            path.pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 1 elements = {
                0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
              }
            },
            subpath = AggPath T_Agg (cost=0.01..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
              path.parent = <>,
              path.pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                sortgrouprefs = [1],
                exprs = List with 1 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 172}
                }
              },
              subpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 1),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 22, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  sortgrouprefs = [1, 0],
                  exprs = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 172},
                    1 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 256}
                  }
                }
              },
              groupClause = List with 1 elements = {
                0 = SortGroupClause {tleSortGroupRef: 1, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
              },
              qual = List with 1 elements = {
                0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 268} = {
                  args = List with 2 elements = {
                    0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 252} = {
                      aggargtypes = OidList with 1 elements = {1700},
                      args = List with 1 elements = {
                        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                          expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 256}
                        }
                      }
                    },
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770130352, constisnull: false, constbyval: false, location: -1}
                  }
                }
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 4), required_relids: (b 2 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 4), rinfo_serial: 4, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 312},
                  1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 312},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
              },
              right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4)
              }
            }
          }
        }
      },
      groupClause = List with 2 elements = {
        0 = SortGroupClause {tleSortGroupRef: 4, eqop: 96, sortop: 97, nulls_first: false, hashable: true},
        1 = SortGroupClause {tleSortGroupRef: 5, eqop: 96, sortop: 97, nulls_first: false, hashable: true}
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 100, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 2, standard_planner (parse=0x5591d145e810, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$51 = Limit (cost=0.09..0.09 rows=1 width=130 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {limitOption: LIMIT_OPTION_COUNT, uniqNumCols: 0} = {
  plan.targetlist = List with 6 elements = {
    0 = TargetEntry {resno: 1, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'c_custkey', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
    },
    2 = TargetEntry {resno: 3, resname: 'o_orderkey', ressortgroupref: 5, resorigtbl: 74562, resorigcol: 1, resjunk: false} = {
      expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
    },
    3 = TargetEntry {resno: 4, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
      expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
    },
    4 = TargetEntry {resno: 5, resname: 'o_totalprice', ressortgroupref: 1, resorigtbl: 74562, resorigcol: 4, resjunk: false} = {
      expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
    },
    5 = TargetEntry {resno: 6, resname: 'sum', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    }
  },
  plan.lefttree = Sort (cost=0.09..0.09 rows=1 width=130 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 2 = {
    sortColIdx = [5, 4],
    sortOperators = [1756, 1095],
    collations = [0, 0],
    nullsFirst = [True, False],
    plan.targetlist = List with 6 elements = {
      0 = TargetEntry {resno: 1, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'c_custkey', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
      },
      2 = TargetEntry {resno: 3, resname: 'o_orderkey', ressortgroupref: 5, resorigtbl: 74562, resorigcol: 1, resjunk: false} = {
        expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
      },
      3 = TargetEntry {resno: 4, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
        expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
      },
      4 = TargetEntry {resno: 5, resname: 'o_totalprice', ressortgroupref: 1, resorigtbl: 74562, resorigcol: 4, resjunk: false} = {
        expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
      },
      5 = TargetEntry {resno: 6, resname: 'sum', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      }
    },
    plan.lefttree = Agg (cost=0.07..0.08 rows=1 width=130 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 2, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
      grpColIdx = [1, 2],
      grpOperators = [96, 96],
      grpCollations = [0, 0],
      plan.targetlist = List with 6 elements = {
        0 = TargetEntry {resno: 1, resname: 'c_name', ressortgroupref: 3, resorigtbl: 74559, resorigcol: 2, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
        },
        1 = TargetEntry {resno: 2, resname: 'c_custkey', ressortgroupref: 4, resorigtbl: 74559, resorigcol: 1, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 'o_orderkey', ressortgroupref: 5, resorigtbl: 74562, resorigcol: 1, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 'o_orderdate', ressortgroupref: 2, resorigtbl: 74562, resorigcol: 5, resjunk: false} = {
          expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46}
        },
        4 = TargetEntry {resno: 5, resname: 'o_totalprice', ressortgroupref: 1, resorigtbl: 74562, resorigcol: 4, resjunk: false} = {
          expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61}
        },
        5 = TargetEntry {resno: 6, resname: 'sum', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 77} = {
            aggargtypes = OidList with 1 elements = {1700},
            args = List with 1 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
              }
            }
          }
        }
      },
      plan.lefttree = NestLoop (cost=0.01..0.06 rows=1 width=116 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 6 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 4, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 5, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=120 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
          join.plan.targetlist = List with 7 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 1, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 4, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: 81}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 325}
            }
          },
          join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=98 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
            join.plan.targetlist = List with 5 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 19}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 32}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 46}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -1, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 61}
              }
            },
            join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=72 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
              scan.plan.targetlist = List with 8 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
                },
                7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 1, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
                }
              }
            },
            join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=30 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
              scan.plan.targetlist = List with 9 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
                },
                5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
                },
                6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
                },
                7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
                },
                8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 2, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
                }
              }
            },
            join.joinqual = List with 1 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 284},
                  1 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 296}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=22 async_capable=0 plan_id=8 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
            scan.plan.targetlist = List with 16 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
              },
              8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
              },
              9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 10, location: -1}
              },
              10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 11, location: -1}
              },
              11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 12, location: -1}
              },
              12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 13, location: -1}
              },
              13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 14, location: -1}
              },
              14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 15, location: -1}
              },
              15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 3, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 16, location: -1}
              }
            }
          },
          join.joinqual = List with 1 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 312},
                1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 325}
              }
            }
          }
        },
        join.plan.righttree = Agg (cost=0.01..0.02 rows=1 width=4 async_capable=0 plan_id=10 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
          grpColIdx = [1],
          grpOperators = [96],
          grpCollations = [0],
          plan.targetlist = List with 1 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
            }
          },
          plan.qual = List with 1 elements = {
            0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 268} = {
              args = List with 2 elements = {
                0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 252} = {
                  aggargtypes = OidList with 1 elements = {1700},
                  args = List with 1 elements = {
                    0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: 256}
                    }
                  }
                },
                1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770130352, constisnull: false, constbyval: false, location: -1}
              }
            }
          },
          plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=22 async_capable=0 plan_id=11 parallel_aware=False parallel_safe = True) scan.scanrelid: 5 = {
            scan.plan.targetlist = List with 16 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 7, location: -1}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 8, location: -1}
              },
              8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 9, location: -1}
              },
              9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 10, location: -1}
              },
              10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 11, location: -1}
              },
              11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 12, location: -1}
              },
              12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 13, location: -1}
              },
              13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 14, location: -1}
              },
              14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 15, location: -1}
              },
              15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 16, location: -1}
              }
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 312},
              1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
            }
          }
        }
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 100, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 1, standard_planner (parse=0x5591d146d128, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$52 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: false, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 992} = {
  rtable = List with 2 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'lineitem' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74550, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'part' = {
        colnames = List with 9 elements = {
          0 = String [ 'p_partkey' ],
          1 = String [ 'p_name' ],
          2 = String [ 'p_mfgr' ],
          3 = String [ 'p_brand' ],
          4 = String [ 'p_type' ],
          5 = String [ 'p_size' ],
          6 = String [ 'p_container' ],
          7 = String [ 'p_retailprice' ],
          8 = String [ 'p_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 9 12 13 14 21 22), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74550, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 11 13 14), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 2 elements = {
      0 = RangeTblRef rtindex: 1,
      1 = RangeTblRef rtindex: 2
    },
    quals = List with 5 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 107} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97},
          1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109}
        }
      },
      1 = OpExpr {opno: 525, opfuncid: 150, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
        args = List with 2 elements = {
          0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271},
          1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 286}
        }
      },
      2 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 313} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 15, location: 302},
          1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770131320, constisnull: false, constbyval: false, location: -1}
        }
      },
      3 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 358} = {
        args = List with 2 elements = {
          0 = Var {varno: 1, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 14, location: 343},
          1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770113128, constisnull: false, constbyval: false, location: 360}
        }
      },
      4 = BoolExpr {boolop: OR_EXPR, location: -1} = {
        args = List with 3 elements = {
          0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
            args = List with 5 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 135} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 127},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769704592, constisnull: false, constbyval: false, location: 137}
                }
              },
              1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 168} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 156},
                  1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770128664, constisnull: false, constbyval: false, location: -1}
                }
              },
              2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 233} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 222},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770129232, constisnull: false, constbyval: false, location: -1}
                }
              },
              3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 253} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 242},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770130040, constisnull: false, constbyval: false, location: -1}
                }
              },
              4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271},
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 5, constisnull: false, constbyval: true, location: 292}
                }
              }
            }
          },
          1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
            args = List with 5 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 435} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 427},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770110832, constisnull: false, constbyval: false, location: 437}
                }
              },
              1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 468} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 456},
                  1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770133192, constisnull: false, constbyval: false, location: -1}
                }
              },
              2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 536} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 525},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770133760, constisnull: false, constbyval: false, location: -1}
                }
              },
              3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 557} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 546},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770134568, constisnull: false, constbyval: false, location: -1}
                }
              },
              4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 583} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 576},
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 10, constisnull: false, constbyval: true, location: 597}
                }
              }
            }
          },
          2 = BoolExpr {boolop: AND_EXPR, location: -1} = {
            args = List with 5 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 741} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 733},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770119616, constisnull: false, constbyval: false, location: 743}
                }
              },
              1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 774} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 762},
                  1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769785200, constisnull: false, constbyval: false, location: -1}
                }
              },
              2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 839} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 828},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785768, constisnull: false, constbyval: false, location: -1}
                }
              },
              3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 860} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 849},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786576, constisnull: false, constbyval: false, location: -1}
                }
              },
              4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 886} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 879},
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 15, constisnull: false, constbyval: true, location: 900}
                }
              }
            }
          }
        }
      }
    }
  },
  targetList = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 28} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 33} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770126672, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 35}
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
$53 = AggPath T_Agg (cost=0.03..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 32, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [0],
    exprs = List with 1 elements = {
      0 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 28} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 33} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770126672, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 35}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  subpath = HashPath T_HashJoin (cost=0.01..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {num_batches: 1, inner_rows_total: 1} = {
    jpath.path.parent = (b 1 2),
    jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 36, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      exprs = List with 2 elements = {
        0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
        1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 35}
      }
    },
    jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
      parent = (b 1),
      pathtarget = PathTarget {cost: (0.00..0.00), width: 58, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        exprs = List with 4 elements = {
          0 = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
          1 = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 35},
          2 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109},
          3 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 222}
        }
      }
    },
    jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
      parent = (b 2),
      pathtarget = PathTarget {cost: (0.00..0.00), width: 96, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        exprs = List with 4 elements = {
          0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97},
          1 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 127},
          2 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 156},
          3 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271}
        }
      }
    },
    jpath.joinrestrictinfo = List with 2 elements = {
      0 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: <>, right_relids: <>, rinfo_serial: 20, eval_cost: (0.00..0.05), norm_selec: 0.3350, outer_selec: 0.0000, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
        clause = BoolExpr {boolop: OR_EXPR, location: -1} = {
          args = List with 3 elements = {
            0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 5 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 135} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 127},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769704592, constisnull: false, constbyval: false, location: 137}
                  }
                },
                1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 168} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 156},
                    1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770128664, constisnull: false, constbyval: false, location: -1}
                  }
                },
                2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 233} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 222},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770129232, constisnull: false, constbyval: false, location: -1}
                  }
                },
                3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 253} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 242},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770130040, constisnull: false, constbyval: false, location: -1}
                  }
                },
                4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271},
                    1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 5, constisnull: false, constbyval: true, location: 292}
                  }
                }
              }
            },
            1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 5 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 435} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 427},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770110832, constisnull: false, constbyval: false, location: 437}
                  }
                },
                1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 468} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 456},
                    1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770133192, constisnull: false, constbyval: false, location: -1}
                  }
                },
                2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 536} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 525},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770133760, constisnull: false, constbyval: false, location: -1}
                  }
                },
                3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 557} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 546},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770134568, constisnull: false, constbyval: false, location: -1}
                  }
                },
                4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 583} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 576},
                    1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 10, constisnull: false, constbyval: true, location: 597}
                  }
                }
              }
            },
            2 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 5 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 741} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 733},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770119616, constisnull: false, constbyval: false, location: 743}
                  }
                },
                1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 774} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 762},
                    1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769785200, constisnull: false, constbyval: false, location: -1}
                  }
                },
                2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 839} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 828},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785768, constisnull: false, constbyval: false, location: -1}
                  }
                },
                3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 860} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 849},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786576, constisnull: false, constbyval: false, location: -1}
                  }
                },
                4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 886} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 879},
                    1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 15, constisnull: false, constbyval: true, location: 900}
                  }
                }
              }
            }
          }
        },
        orclause = BoolExpr {boolop: OR_EXPR, location: -1} = {
          args = List with 3 elements = {
            0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 5 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: <>, rinfo_serial: 5, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 135} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 127},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769704592, constisnull: false, constbyval: false, location: 137}
                    }
                  }
                },
                1 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: <>, right_relids: <>, rinfo_serial: 6, eval_cost: (0.00..0.01), norm_selec: 0.0200, outer_selec: 0.0200, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 168} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 156},
                      1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770128664, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                2 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 1), required_relids: (b 1), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: <>, rinfo_serial: 7, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 233} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 222},
                      1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770129232, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                3 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 1), required_relids: (b 1), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: <>, rinfo_serial: 8, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 253} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 242},
                      1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770130040, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                4 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: <>, rinfo_serial: 9, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271},
                      1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 5, constisnull: false, constbyval: true, location: 292}
                    }
                  }
                }
              }
            },
            1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 5 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: <>, rinfo_serial: 10, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 435} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 427},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770110832, constisnull: false, constbyval: false, location: 437}
                    }
                  }
                },
                1 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: <>, right_relids: <>, rinfo_serial: 11, eval_cost: (0.00..0.01), norm_selec: 0.0200, outer_selec: 0.0200, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 468} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 456},
                      1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770133192, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                2 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 1), required_relids: (b 1), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: <>, rinfo_serial: 12, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 536} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 525},
                      1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770133760, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                3 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 1), required_relids: (b 1), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: <>, rinfo_serial: 13, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 557} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 546},
                      1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770134568, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                4 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: <>, rinfo_serial: 14, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 583} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 576},
                      1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 10, constisnull: false, constbyval: true, location: 597}
                    }
                  }
                }
              }
            },
            2 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 5 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: <>, rinfo_serial: 15, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 741} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 733},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770119616, constisnull: false, constbyval: false, location: 743}
                    }
                  }
                },
                1 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: <>, right_relids: <>, rinfo_serial: 16, eval_cost: (0.00..0.01), norm_selec: 0.0200, outer_selec: 0.0200, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 774} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 762},
                      1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769785200, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                2 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 1), required_relids: (b 1), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: <>, rinfo_serial: 17, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 839} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 828},
                      1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785768, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                3 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 1), required_relids: (b 1), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: <>, rinfo_serial: 18, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 860} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 849},
                      1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786576, constisnull: false, constbyval: false, location: -1}
                    }
                  }
                },
                4 = RestrictInfo {is_pushed_down: true, can_join: false, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 1, clause_relids: (b 2), required_relids: (b 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: <>, rinfo_serial: 19, eval_cost: (0.00..0.00), norm_selec: 0.3333, outer_selec: 0.3333, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 0, right_hasheqoperator: 0} = {
                  clause = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 886} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 879},
                      1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 15, constisnull: false, constbyval: true, location: 900}
                    }
                  }
                }
              }
            }
          }
        }
      },
      1 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 1), rinfo_serial: 38, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
        clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97},
            1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109}
          }
        },
        mergeopfamilies = OidList with 1 elements = {1976},
        left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        },
        right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        }
      }
    },
    path_hashclauses = List with 1 elements = {
      0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 1), rinfo_serial: 38, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
        clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97},
            1 = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109}
          }
        },
        mergeopfamilies = OidList with 1 elements = {1976},
        left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        },
        right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
          em_expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109},
          em_jdomain = JoinDomain jd_relids: (b 1 2)
        }
      }
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d146d128, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$54 = Agg (cost=0.03..0.04 rows=1 width=32 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_PLAIN, aggsplit: AGGSPLIT_SIMPLE, numCols: 0, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
  plan.targetlist = List with 1 elements = {
    0 = TargetEntry {resno: 1, resname: 'revenue', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 9} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = OpExpr {opno: 1760, opfuncid: 1726, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 28} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 1, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13},
                1 = OpExpr {opno: 1759, opfuncid: 1725, opresulttype: 1700, opretset: false, opcollid: 0, inputcollid: 0, location: 33} = {
                  args = List with 2 elements = {
                    0 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770126672, constisnull: false, constbyval: false, location: -1},
                    1 = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 35}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  plan.lefttree = HashJoin (cost=0.01..0.02 rows=1 width=36 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
    join.plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: 13}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: 35}
      }
    },
    join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=58 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
      scan.plan.targetlist = List with 16 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
        },
        4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
        },
        5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
        },
        6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
        },
        7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 8, location: -1}
        },
        8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 9, location: -1}
        },
        9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 10, location: -1}
        },
        10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 11, location: -1}
        },
        11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 12, location: -1}
        },
        12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 13, location: -1}
        },
        13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 14, location: -1}
        },
        14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 15, location: -1}
        },
        15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 1, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 16, location: -1}
        }
      },
      scan.plan.qual = List with 3 elements = {
        0 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 313} = {
          args = List with 2 elements = {
            0 = Var {varno: 1, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 15, location: 302},
            1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770131320, constisnull: false, constbyval: false, location: -1}
          }
        },
        1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 358} = {
          args = List with 2 elements = {
            0 = Var {varno: 1, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 14, location: 343},
            1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770113128, constisnull: false, constbyval: false, location: 360}
          }
        },
        2 = BoolExpr {boolop: OR_EXPR, location: -1} = {
          args = List with 3 elements = {
            0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 233} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 222},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770129232, constisnull: false, constbyval: false, location: -1}
                  }
                },
                1 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 253} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 242},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770130040, constisnull: false, constbyval: false, location: -1}
                  }
                }
              }
            },
            1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 536} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 525},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770133760, constisnull: false, constbyval: false, location: -1}
                  }
                },
                1 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 557} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 546},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770134568, constisnull: false, constbyval: false, location: -1}
                  }
                }
              }
            },
            2 = BoolExpr {boolop: AND_EXPR, location: -1} = {
              args = List with 2 elements = {
                0 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 839} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 828},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785768, constisnull: false, constbyval: false, location: -1}
                  }
                },
                1 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 860} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 1, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 849},
                    1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786576, constisnull: false, constbyval: false, location: -1}
                  }
                }
              }
            }
          }
        }
      }
    },
    join.plan.righttree = Hash (cost=0.00..0.00 rows=1 width=96 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {skewTable: 74565, skewColumn: 2, skewInherit: false, rows_total: 0} = {
      plan.targetlist = List with 4 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
        }
      },
      plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=96 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
        scan.plan.targetlist = List with 4 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 127}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 156}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271}
          }
        },
        scan.plan.qual = List with 2 elements = {
          0 = OpExpr {opno: 525, opfuncid: 150, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271},
              1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 286}
            }
          },
          1 = BoolExpr {boolop: OR_EXPR, location: -1} = {
            args = List with 3 elements = {
              0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                args = List with 3 elements = {
                  0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 135} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 127},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769704592, constisnull: false, constbyval: false, location: 137}
                    }
                  },
                  1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 168} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 156},
                      1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770128664, constisnull: false, constbyval: false, location: -1}
                    }
                  },
                  2 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271},
                      1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 5, constisnull: false, constbyval: true, location: 292}
                    }
                  }
                }
              },
              1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                args = List with 3 elements = {
                  0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 435} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 427},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770110832, constisnull: false, constbyval: false, location: 437}
                    }
                  },
                  1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 468} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 456},
                      1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770133192, constisnull: false, constbyval: false, location: -1}
                    }
                  },
                  2 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 583} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 576},
                      1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 10, constisnull: false, constbyval: true, location: 597}
                    }
                  }
                }
              },
              2 = BoolExpr {boolop: AND_EXPR, location: -1} = {
                args = List with 3 elements = {
                  0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 741} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 733},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770119616, constisnull: false, constbyval: false, location: 743}
                    }
                  },
                  1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 774} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 762},
                      1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769785200, constisnull: false, constbyval: false, location: -1}
                    }
                  },
                  2 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 886} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 879},
                      1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 15, constisnull: false, constbyval: true, location: 900}
                    }
                  }
                }
              }
            }
          }
        }
      },
      hashkeys = List with 1 elements = {
        0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97}
      }
    },
    join.joinqual = List with 1 elements = {
      0 = BoolExpr {boolop: OR_EXPR, location: -1} = {
        args = List with 3 elements = {
          0 = BoolExpr {boolop: AND_EXPR, location: -1} = {
            args = List with 5 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 135} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 127},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769704592, constisnull: false, constbyval: false, location: 137}
                }
              },
              1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 168} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 3, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 156},
                  1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770128664, constisnull: false, constbyval: false, location: -1}
                }
              },
              2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 233} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 222},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770129232, constisnull: false, constbyval: false, location: -1}
                }
              },
              3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 253} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 242},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770130040, constisnull: false, constbyval: false, location: -1}
                }
              },
              4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 278} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 271},
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 5, constisnull: false, constbyval: true, location: 292}
                }
              }
            }
          },
          1 = BoolExpr {boolop: AND_EXPR, location: -1} = {
            args = List with 5 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 435} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 427},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770110832, constisnull: false, constbyval: false, location: 437}
                }
              },
              1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 468} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 3, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 456},
                  1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770133192, constisnull: false, constbyval: false, location: -1}
                }
              },
              2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 536} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 525},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770133760, constisnull: false, constbyval: false, location: -1}
                }
              },
              3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 557} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 546},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084770134568, constisnull: false, constbyval: false, location: -1}
                }
              },
              4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 583} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 576},
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 10, constisnull: false, constbyval: true, location: 597}
                }
              }
            }
          },
          2 = BoolExpr {boolop: AND_EXPR, location: -1} = {
            args = List with 5 elements = {
              0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 741} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 2, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: 733},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770119616, constisnull: false, constbyval: false, location: 743}
                }
              },
              1 = ScalarArrayOpExpr {opno: 1054, opfuncid: 1048, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 774} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 3, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: 762},
                  1 = Const {consttype: 1014, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769785200, constisnull: false, constbyval: false, location: -1}
                }
              },
              2 = OpExpr {opno: 1757, opfuncid: 1721, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 839} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 828},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769785768, constisnull: false, constbyval: false, location: -1}
                }
              },
              3 = OpExpr {opno: 1755, opfuncid: 1723, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 860} = {
                args = List with 2 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: 849},
                  1 = Const {consttype: 1700, consttypmod: -1, constcollid: 0, constlen: -1, constvalue: 94084769786576, constisnull: false, constbyval: false, location: -1}
                }
              },
              4 = OpExpr {opno: 523, opfuncid: 149, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 886} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 879},
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 15, constisnull: false, constbyval: true, location: 900}
                }
              }
            }
          }
        }
      }
    },
    hashclauses = List with 1 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
        args = List with 2 elements = {
          0 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109},
          1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 97}
        }
      }
    },
    hashoperators = OidList with 1 elements = {96},
    hashcollations = OidList with 1 elements = {0},
    hashkeys = List with 1 elements = {
      0 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 109}
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d145f390, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$55 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: false, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 664} = {
  rtable = List with 6 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'nation' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: false} = {
      alias = Alias aliasname: 'ANY_subquery',
      eref = Alias aliasname: 'ANY_subquery' = {
        colnames = List with 1 elements = {
          0 = String [ 'ps_suppkey' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74556, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'partsupp' = {
        colnames = List with 5 elements = {
          0 = String [ 'ps_partkey' ],
          1 = String [ 'ps_suppkey' ],
          2 = String [ 'ps_availqty' ],
          3 = String [ 'ps_supplycost' ],
          4 = String [ 'ps_comment' ]
        }
      }
    },
    4 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: false} = {
      alias = Alias aliasname: 'ANY_subquery',
      eref = Alias aliasname: 'ANY_subquery' = {
        colnames = List with 1 elements = {
          0 = String [ 'p_partkey' ]
        }
      }
    },
    5 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74550, relkind: 114 'r', rellockmode: 1, perminfoindex: 4, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'part' = {
        colnames = List with 9 elements = {
          0 = String [ 'p_partkey' ],
          1 = String [ 'p_name' ],
          2 = String [ 'p_mfgr' ],
          3 = String [ 'p_brand' ],
          4 = String [ 'p_type' ],
          5 = String [ 'p_size' ],
          6 = String [ 'p_container' ],
          7 = String [ 'p_retailprice' ],
          8 = String [ 'p_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 4 elements = {
    0 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 11), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74556, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10), insertedCols: 0x0, updatedCols: 0x0},
    3 = RTEPermissionInfo {relid: 74550, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = JoinExpr {jointype: JOIN_SEMI, isNatural: false, rtindex: 0} = {
        larg = FromExpr  = {
          fromlist = List with 2 elements = {
            0 = RangeTblRef rtindex: 1,
            1 = RangeTblRef rtindex: 2
          },
          quals = List with 2 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 609} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 597},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 611}
              }
            },
            1 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 636} = {
              args = List with 2 elements = {
                0 = Var {varno: 2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 629},
                1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770110328, constisnull: false, constbyval: false, location: 638}
              }
            }
          }
        },
        rarg = JoinExpr {jointype: JOIN_SEMI, isNatural: false, rtindex: 0} = {
          larg = FromExpr  = {
            fromlist = List with 1 elements = {
              0 = RangeTblRef rtindex: 4
            },
            quals = List with 1 elements = {
              0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 301} = {
                args = List with 2 elements = {
                  0 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 1 elements = {
                      0 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 289}
                    }
                  },
                  1 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'SubPlan 1', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: false, startup_cost: 0, per_call_cost: 0.017499999999999998} = {
                    parParam = IntList with 2 elements = {0, 1},
                    args = List with 2 elements = {
                      0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 420},
                      1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 457}
                    }
                  }
                }
              }
            }
          },
          rarg = FromExpr  = {
            fromlist = List with 1 elements = {
              0 = RangeTblRef rtindex: 6
            },
            quals = List with 1 elements = {
              0 = OpExpr {opno: 1209, opfuncid: 850, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 256} = {
                args = List with 2 elements = {
                  0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                    arg = Var {varno: 6, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 249}
                  },
                  1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770125448, constisnull: false, constbyval: false, location: 261}
                }
              }
            }
          },
          quals = List with 1 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 157} = {
              args = List with 2 elements = {
                0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 146},
                1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 187}
              }
            }
          }
        },
        quals = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 73} = {
            args = List with 2 elements = {
              0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 63},
              1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 95}
            }
          }
        }
      }
    }
  },
  targetList = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 's_name', ressortgroupref: 1, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 's_address', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 3, resjunk: false} = {
      expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19}
    }
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  }
}
$56 = ProjectionPath T_Result (cost=0.05..0.05 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0) dummypp: true = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 202, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 0],
    exprs = List with 2 elements = {
      0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
      1 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19}
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
            em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.05..0.05 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 202, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1, 0],
      exprs = List with 2 elements = {
        0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
        1 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19}
      }
    },
    path.pathkeys = List with 1 elements = {
      0 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
              em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
            }
          }
        }
      }
    },
    subpath = NestPath T_NestLoop (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0)  = {
      jpath.path.parent = (b 1 2 4 6),
      jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 202, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 0],
        exprs = List with 2 elements = {
          0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
          1 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19}
        }
      },
      jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0)  = {
        jpath.path.parent = (b 1 4 6),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 206, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 3 elements = {
            0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
            1 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19},
            2 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 597}
          }
        },
        jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 1),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 210, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 4 elements = {
              0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
              1 = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19},
              2 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 597},
              3 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 63}
            }
          }
        },
        jpath.innerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0)  = {
          jpath.path.parent = (b 4 6),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 1 elements = {
              0 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 95}
            }
          },
          jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0) = {
            parent = (b 4),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 146},
                1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 95}
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 6),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 1 elements = {
                0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 187}
              }
            }
          },
          jpath.joinrestrictinfo = List with 1 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 4 6), required_relids: (b 4 6), incompatible_relids: <>, outer_relids: <>, left_relids: (b 4), right_relids: (b 6), rinfo_serial: 7, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 146},
                  1 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 187}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 146},
                em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
              },
              right_em = EquivalenceMember {em_relids: (b 6), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 187},
                em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
              }
            }
          }
        },
        jpath.joinrestrictinfo = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 4), required_relids: (b 1 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 4), rinfo_serial: 8, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 63},
                1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 95}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976},
            left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 63},
              em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
            },
            right_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
              em_expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 95},
              em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
            }
          }
        }
      },
      jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
        parent = (b 2),
        pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 1 elements = {
            0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 611}
          }
        }
      },
      jpath.joinrestrictinfo = List with 1 elements = {
        0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 1), rinfo_serial: 9, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
          clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 611},
              1 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 597}
            }
          },
          mergeopfamilies = OidList with 1 elements = {1976},
          left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 611},
            em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
          },
          right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
            em_expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 597},
            em_jdomain = JoinDomain jd_relids: (b 1 2 4 6)
          }
        }
      }
    }
  }
}

Breakpoint 2, standard_planner (parse=0x5591d145f390, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$57 = Sort (cost=0.05..0.05 rows=1 width=202 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = False) numCols: 1 = {
  sortColIdx = [1],
  sortOperators = [1058],
  collations = [100],
  nullsFirst = [False],
  plan.targetlist = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 's_name', ressortgroupref: 1, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 's_address', ressortgroupref: 0, resorigtbl: 74553, resorigcol: 3, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
    }
  },
  plan.lefttree = NestLoop (cost=0.00..0.04 rows=1 width=202 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = False) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
    join.plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19}
      }
    },
    join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=206 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = False) {join.jointype: JOIN_SEMI, join.inner_unique: false} = {
      join.plan.targetlist = List with 3 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: 19}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 597}
        }
      },
      join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=210 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
        scan.plan.targetlist = List with 7 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 1, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
          }
        }
      },
      join.plan.righttree = NestLoop (cost=0.00..0.01 rows=1 width=4 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = False) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
        join.plan.targetlist = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 95}
          }
        },
        join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = False) scan.scanrelid: 4 = {
          scan.plan.targetlist = List with 5 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 4, varattno: 5, vartype: 1043, vartypmod: 203, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 5, location: -1}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 301} = {
              args = List with 2 elements = {
                0 = FuncExpr {funcid: 1740, funcresulttype: 1700, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 1 elements = {
                    0 = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: 289}
                  }
                },
                1 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'SubPlan 1', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: false, startup_cost: 0, per_call_cost: 0.017499999999999998} = {
                  parParam = IntList with 2 elements = {0, 1},
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 420},
                    1 = Var {varno: 4, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 457}
                  }
                }
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) scan.scanrelid: 6 = {
          scan.plan.targetlist = List with 9 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 3, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 4, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 5, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 6, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 7, location: -1}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 8, location: -1}
            },
            8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 9, vartype: 1043, vartypmod: 27, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 9, location: -1}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = OpExpr {opno: 1209, opfuncid: 850, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 256} = {
              args = List with 2 elements = {
                0 = RelabelType {resulttype: 25, resulttypmod: -1, resultcollid: 100, relabelformat: COERCE_IMPLICIT_CAST, location: -1} = {
                  arg = Var {varno: 6, varattno: 2, vartype: 1043, vartypmod: 59, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: 249}
                },
                1 = Const {consttype: 25, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770125448, constisnull: false, constbyval: false, location: 261}
              }
            }
          }
        },
        join.joinqual = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
            args = List with 2 elements = {
              0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 146},
              1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 187}
            }
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
          args = List with 2 elements = {
            0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 63},
            1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 95}
          }
        }
      }
    },
    join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
      scan.plan.targetlist = List with 4 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
        },
        2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
        },
        3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: 2, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
        }
      },
      scan.plan.qual = List with 1 elements = {
        0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 636} = {
          args = List with 2 elements = {
            0 = Var {varno: 2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: 629},
            1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770110328, constisnull: false, constbyval: false, location: 638}
          }
        }
      }
    },
    join.joinqual = List with 1 elements = {
      0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
        args = List with 2 elements = {
          0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 611},
          1 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 597}
        }
      }
    }
  }
}

Breakpoint 1, standard_planner (parse=0x5591d145f6e8, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$58 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 695} = {
  rtable = List with 6 elements = {
    0 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74553, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'supplier' = {
        colnames = List with 7 elements = {
          0 = String [ 's_suppkey' ],
          1 = String [ 's_name' ],
          2 = String [ 's_address' ],
          3 = String [ 's_nationkey' ],
          4 = String [ 's_phone' ],
          5 = String [ 's_acctbal' ],
          6 = String [ 's_comment' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'l1',
      eref = Alias aliasname: 'l1' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 3, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    },
    3 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74544, relkind: 114 'r', rellockmode: 1, perminfoindex: 4, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'nation' = {
        colnames = List with 4 elements = {
          0 = String [ 'n_nationkey' ],
          1 = String [ 'n_name' ],
          2 = String [ 'n_regionkey' ],
          3 = String [ 'n_comment' ]
        }
      }
    },
    4 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 5, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'l2',
      eref = Alias aliasname: 'l2' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    },
    5 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74565, relkind: 114 'r', rellockmode: 1, perminfoindex: 6, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'l3',
      eref = Alias aliasname: 'l3' = {
        colnames = List with 16 elements = {
          0 = String [ 'l_orderkey' ],
          1 = String [ 'l_partkey' ],
          2 = String [ 'l_suppkey' ],
          3 = String [ 'l_linenumber' ],
          4 = String [ 'l_quantity' ],
          5 = String [ 'l_extendedprice' ],
          6 = String [ 'l_discount' ],
          7 = String [ 'l_tax' ],
          8 = String [ 'l_returnflag' ],
          9 = String [ 'l_linestatus' ],
          10 = String [ 'l_shipdate' ],
          11 = String [ 'l_commitdate' ],
          12 = String [ 'l_receiptdate' ],
          13 = String [ 'l_shipinstruct' ],
          14 = String [ 'l_shipmode' ],
          15 = String [ 'l_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 6 elements = {
    0 = RTEPermissionInfo {relid: 74553, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 11), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 10 19 20), insertedCols: 0x0, updatedCols: 0x0},
    2 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 10), insertedCols: 0x0, updatedCols: 0x0},
    3 = RTEPermissionInfo {relid: 74544, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9), insertedCols: 0x0, updatedCols: 0x0},
    4 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23), insertedCols: 0x0, updatedCols: 0x0},
    5 = RTEPermissionInfo {relid: 74565, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = JoinExpr {jointype: JOIN_ANTI, isNatural: false, rtindex: 0} = {
        larg = JoinExpr {jointype: JOIN_SEMI, isNatural: false, rtindex: 0} = {
          larg = FromExpr  = {
            fromlist = List with 4 elements = {
              0 = RangeTblRef rtindex: 1,
              1 = RangeTblRef rtindex: 2,
              2 = RangeTblRef rtindex: 3,
              3 = RangeTblRef rtindex: 4
            },
            quals = List with 6 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 108} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 98},
                  1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110}
                }
              },
              1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 140} = {
                args = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129},
                  1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
                }
              },
              2 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 176} = {
                args = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 162},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769702096, constisnull: false, constbyval: false, location: 178}
                }
              },
              3 = OpExpr {opno: 1097, opfuncid: 1089, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 205} = {
                args = List with 2 elements = {
                  0 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 188},
                  1 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 207}
                }
              },
              4 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 590} = {
                args = List with 2 elements = {
                  0 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578},
                  1 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 592}
                }
              },
              5 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 617} = {
                args = List with 2 elements = {
                  0 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 610},
                  1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770109624, constisnull: false, constbyval: false, location: 619}
                }
              }
            }
          },
          rarg = RangeTblRef rtindex: 5,
          quals = List with 2 elements = {
            0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 314} = {
              args = List with 2 elements = {
                0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 300},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 316}
              }
            },
            1 = OpExpr {opno: 518, opfuncid: 144, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 353} = {
              args = List with 2 elements = {
                0 = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 340},
                1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 356}
              }
            }
          }
        },
        rarg = RangeTblRef rtindex: 6,
        quals = List with 3 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 468} = {
            args = List with 2 elements = {
              0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 454},
              1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 470}
            }
          },
          1 = OpExpr {opno: 518, opfuncid: 144, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 507} = {
            args = List with 2 elements = {
              0 = Var {varno: 6, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: 494},
              1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 510}
            }
          },
          2 = OpExpr {opno: 1097, opfuncid: 1089, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 550} = {
            args = List with 2 elements = {
              0 = Var {varno: 6, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 13, location: 533},
              1 = Var {varno: 6, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 12, location: 552}
            }
          }
        }
      }
    }
  },
  targetList = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 's_name', ressortgroupref: 2, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
    },
    1 = TargetEntry {resno: 2, resname: 'numwait', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19}
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  },
  sortClause = List with 2 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 410, sortop: 413, nulls_first: true, hashable: true},
    1 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 100, constisnull: false, constbyval: true, location: -1}
}
$59 = LimitPath T_Limit (cost=0.09..0.10 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) limitOption: LIMIT_OPTION_COUNT = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.00), width: 112, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [2, 1],
    exprs = List with 2 elements = {
      0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
      1 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19}
    }
  },
  path.pathkeys = List with 2 elements = {
    0 = PathKey {pk_opfamily: 1976, pk_strategy: 5, pk_nulls_first: true} = {
      pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: <>, ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 1 elements = {1976},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: <>, em_is_const: false, em_is_child: false, em_datatype: 20} = {
            em_expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19},
            em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
          }
        }
      }
    },
    1 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {426, 2097},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
            em_expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
            em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.09..0.10 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.00), width: 112, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [2, 1],
      exprs = List with 2 elements = {
        0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
        1 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19}
      }
    },
    path.pathkeys = List with 2 elements = {
      0 = PathKey {pk_opfamily: 1976, pk_strategy: 5, pk_nulls_first: true} = {
        pk_eclass = EquivalenceClass {ec_collation: 0, ec_relids: <>, ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 1 elements = {1976},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: <>, em_is_const: false, em_is_child: false, em_datatype: 20} = {
              em_expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
            }
          }
        }
      },
      1 = PathKey {pk_opfamily: 426, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 1), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 2, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {426, 2097},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 1042} = {
              em_expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
              em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
            }
          }
        }
      }
    },
    subpath = AggPath T_Agg (cost=0.07..0.08 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 0} = {
      path.parent = <>,
      path.pathtarget = PathTarget {cost: (0.00..0.00), width: 112, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [2, 1],
        exprs = List with 2 elements = {
          0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
          1 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19}
        }
      },
      subpath = NestPath T_NestLoop (cost=0.00..0.07 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        jpath.path.parent = (b 1 2 3 4 5 6),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 104, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          sortgrouprefs = [2],
          exprs = List with 1 elements = {
            0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
          }
        },
        jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.05 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
          jpath.path.parent = (b 1 2 3 4 5),
          jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 112, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 3 elements = {
              0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
              1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110},
              2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
            }
          },
          jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.04 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
            jpath.path.parent = (b 1 2 3 4),
            jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 116, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 4 elements = {
                0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
                1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110},
                2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142},
                3 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129}
              }
            },
            jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
              jpath.path.parent = (b 1 2 3),
              jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 120, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 5 elements = {
                  0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
                  1 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578},
                  2 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110},
                  3 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142},
                  4 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129}
                }
              },
              jpath.outerjoinpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
                jpath.path.parent = (b 1 2),
                jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 116, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 4 elements = {
                    0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
                    1 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578},
                    2 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110},
                    3 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
                  }
                },
                jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 1),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 112, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 3 elements = {
                      0 = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9},
                      1 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 98},
                      2 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578}
                    }
                  }
                },
                jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                  parent = (b 2),
                  pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                    exprs = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110},
                      1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
                    }
                  }
                },
                jpath.joinrestrictinfo = List with 1 elements = {
                  0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 2), required_relids: (b 1 2), incompatible_relids: <>, outer_relids: <>, left_relids: (b 1), right_relids: (b 2), rinfo_serial: 13, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                    clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 98},
                        1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110}
                      }
                    },
                    mergeopfamilies = OidList with 1 elements = {1976},
                    left_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 98},
                      em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                    },
                    right_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                      em_expr = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110},
                      em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                    }
                  }
                }
              },
              jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
                parent = (b 3),
                pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                  exprs = List with 1 elements = {
                    0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129}
                  }
                }
              },
              jpath.joinrestrictinfo = List with 1 elements = {
                0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: <>, left_relids: (b 2), right_relids: (b 3), rinfo_serial: 14, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: false, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                  clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142},
                      1 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129}
                    }
                  },
                  mergeopfamilies = OidList with 1 elements = {1976},
                  left_em = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                  },
                  right_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                    em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129},
                    em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                  }
                }
              }
            },
            jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
              parent = (b 4),
              pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
                exprs = List with 1 elements = {
                  0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 592}
                }
              }
            },
            jpath.joinrestrictinfo = List with 1 elements = {
              0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 1 4), required_relids: (b 1 4), incompatible_relids: <>, outer_relids: <>, left_relids: (b 4), right_relids: (b 1), rinfo_serial: 16, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
                clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 592},
                    1 = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578}
                  }
                },
                mergeopfamilies = OidList with 1 elements = {1976},
                left_em = EquivalenceMember {em_relids: (b 4), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 592},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                },
                right_em = EquivalenceMember {em_relids: (b 1), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                  em_expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578},
                  em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
                }
              }
            }
          },
          jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
            parent = (b 5),
            pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
              exprs = List with 2 elements = {
                0 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 300},
                1 = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 340}
              }
            }
          },
          jpath.joinrestrictinfo = List with 2 elements = {
            0 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 2, clause_relids: (b 2 5), required_relids: (b 2 5), incompatible_relids: <>, outer_relids: <>, left_relids: (b 5), right_relids: (b 2), rinfo_serial: 8, eval_cost: (0.00..0.00), norm_selec: 0.9950, outer_selec: 1.0000, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 518, opfuncid: 144, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 353} = {
                args = List with 2 elements = {
                  0 = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 340},
                  1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 356}
                }
              }
            },
            1 = RestrictInfo {is_pushed_down: true, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 3 5), required_relids: (b 3 5), incompatible_relids: <>, outer_relids: <>, left_relids: (b 3), right_relids: (b 5), rinfo_serial: 15, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: 0.1000, left_mcvfreq: -1.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
              clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129},
                  1 = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 300}
                }
              },
              mergeopfamilies = OidList with 1 elements = {1976},
              left_em = EquivalenceMember {em_relids: (b 3), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
              },
              right_em = EquivalenceMember {em_relids: (b 5), em_is_const: false, em_is_child: false, em_datatype: 23} = {
                em_expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 300},
                em_jdomain = JoinDomain jd_relids: (b 1 2 3 4 5 6)
              }
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 6),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 8, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 2 elements = {
              0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 454},
              1 = Var {varno: 6, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: 494}
            }
          }
        },
        jpath.joinrestrictinfo = List with 2 elements = {
          0 = RestrictInfo {is_pushed_down: false, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_UNKNOWN, security_level: 0, num_base_rels: 2, clause_relids: (b 2 6), required_relids: (b 2 6), incompatible_relids: <>, outer_relids: (b 1 2 3 4 5), left_relids: (b 6), right_relids: (b 2), rinfo_serial: 10, eval_cost: (0.00..0.00), norm_selec: 0.9950, outer_selec: 1.0000, outer_is_left: false, hashjoinoperator: 0, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 518, opfuncid: 144, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 507} = {
              args = List with 2 elements = {
                0 = Var {varno: 6, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: 494},
                1 = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 510}
              }
            }
          },
          1 = RestrictInfo {is_pushed_down: false, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 6), required_relids: (b 2 6), incompatible_relids: <>, outer_relids: (b 1 2 3 4 5), left_relids: (b 6), right_relids: (b 2), rinfo_serial: 9, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: 0.1000, right_bucketsize: 0.1000, left_mcvfreq: 0.0000, right_mcvfreq: 0.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 468} = {
              args = List with 2 elements = {
                0 = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 454},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 470}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976}
          }
        }
      },
      groupClause = List with 1 elements = {
        0 = SortGroupClause {tleSortGroupRef: 2, eqop: 1054, sortop: 1058, nulls_first: false, hashable: true}
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 100, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 2, standard_planner (parse=0x5591d145f6e8, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$60 = Limit (cost=0.09..0.10 rows=1 width=112 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = True) {limitOption: LIMIT_OPTION_COUNT, uniqNumCols: 0} = {
  plan.targetlist = List with 2 elements = {
    0 = TargetEntry {resno: 1, resname: 's_name', ressortgroupref: 2, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'numwait', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    }
  },
  plan.lefttree = Sort (cost=0.09..0.10 rows=1 width=112 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 2 = {
    sortColIdx = [2, 1],
    sortOperators = [413, 1058],
    collations = [0, 100],
    nullsFirst = [True, False],
    plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 's_name', ressortgroupref: 2, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 'numwait', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 20, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      }
    },
    plan.lefttree = Agg (cost=0.07..0.08 rows=1 width=112 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {aggstrategy: AGG_HASHED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 0, aggParams: 0x0} = {
      grpColIdx = [1],
      grpOperators = [1054],
      grpCollations = [100],
      plan.targetlist = List with 2 elements = {
        0 = TargetEntry {resno: 1, resname: 's_name', ressortgroupref: 2, resorigtbl: 74553, resorigcol: 2, resjunk: false} = {
          expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
        },
        1 = TargetEntry {resno: 2, resname: 'numwait', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 19}
        }
      },
      plan.lefttree = NestLoop (cost=0.00..0.07 rows=1 width=104 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_ANTI, join.inner_unique: false} = {
        join.plan.targetlist = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 2, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
          }
        },
        join.plan.lefttree = NestLoop (cost=0.00..0.05 rows=1 width=112 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_SEMI, join.inner_unique: false} = {
          join.plan.targetlist = List with 3 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
            }
          },
          join.plan.lefttree = NestLoop (cost=0.00..0.04 rows=1 width=116 async_capable=0 plan_id=5 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
            join.plan.targetlist = List with 4 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: -2, varattno: 5, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129}
              }
            },
            join.plan.lefttree = NestLoop (cost=0.00..0.03 rows=1 width=120 async_capable=0 plan_id=6 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: true} = {
              join.plan.targetlist = List with 5 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 1, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
                },
                4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129}
                }
              },
              join.plan.lefttree = NestLoop (cost=0.00..0.01 rows=1 width=116 async_capable=0 plan_id=7 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_INNER, join.inner_unique: false} = {
                join.plan.targetlist = List with 4 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -2, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: 9}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142}
                  }
                },
                join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=112 async_capable=0 plan_id=8 parallel_aware=False parallel_safe = True) scan.scanrelid: 1 = {
                  scan.plan.targetlist = List with 7 elements = {
                    0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: -1}
                    },
                    1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 1, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 2, location: -1}
                    },
                    2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 1, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 3, location: -1}
                    },
                    3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 1, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: -1}
                    },
                    4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 1, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 5, location: -1}
                    },
                    5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 1, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 6, location: -1}
                    },
                    6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 1, varattno: 7, vartype: 1043, vartypmod: 105, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 7, location: -1}
                    }
                  }
                },
                join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=9 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
                  scan.plan.targetlist = List with 16 elements = {
                    0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
                    },
                    1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
                    },
                    2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
                    },
                    3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
                    },
                    4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
                    },
                    5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
                    },
                    6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
                    },
                    7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
                    },
                    8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 9, location: -1}
                    },
                    9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 10, location: -1}
                    },
                    10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 11, location: -1}
                    },
                    11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: -1}
                    },
                    12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: -1}
                    },
                    13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 14, location: -1}
                    },
                    14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 15, location: -1}
                    },
                    15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                      expr = Var {varno: 2, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 16, location: -1}
                    }
                  },
                  scan.plan.qual = List with 1 elements = {
                    0 = OpExpr {opno: 1097, opfuncid: 1089, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 205} = {
                      args = List with 2 elements = {
                        0 = Var {varno: 2, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 13, location: 188},
                        1 = Var {varno: 2, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 12, location: 207}
                      }
                    }
                  }
                },
                join.joinqual = List with 1 elements = {
                  0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                    args = List with 2 elements = {
                      0 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1, location: 98},
                      1 = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 110}
                    }
                  }
                }
              },
              join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=10 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
                scan.plan.targetlist = List with 9 elements = {
                  0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
                  },
                  1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
                  },
                  2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
                  },
                  3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
                  },
                  4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
                  },
                  5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
                  },
                  6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
                  },
                  7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
                  },
                  8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                    expr = Var {varno: 3, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
                  }
                },
                scan.plan.qual = List with 1 elements = {
                  0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 176} = {
                    args = List with 2 elements = {
                      0 = Var {varno: 3, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: 162},
                      1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084769702096, constisnull: false, constbyval: false, location: 178}
                    }
                  }
                }
              },
              join.joinqual = List with 1 elements = {
                0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                  args = List with 2 elements = {
                    0 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 142},
                    1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129}
                  }
                }
              }
            },
            join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=11 parallel_aware=False parallel_safe = True) scan.scanrelid: 4 = {
              scan.plan.targetlist = List with 4 elements = {
                0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: -1}
                },
                1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: -1}
                },
                2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 3, location: -1}
                },
                3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                  expr = Var {varno: 4, varattno: 4, vartype: 1043, vartypmod: 156, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 4, location: -1}
                }
              },
              scan.plan.qual = List with 1 elements = {
                0 = OpExpr {opno: 1054, opfuncid: 1048, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 100, location: 617} = {
                  args = List with 2 elements = {
                    0 = Var {varno: 4, varattno: 2, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 2, location: 610},
                    1 = Const {consttype: 1042, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770109624, constisnull: false, constbyval: false, location: 619}
                  }
                }
              }
            },
            join.joinqual = List with 1 elements = {
              0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
                args = List with 2 elements = {
                  0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 4, varattnosyn: 1, location: 592},
                  1 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 1, varattnosyn: 4, location: 578}
                }
              }
            }
          },
          join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=12 parallel_aware=False parallel_safe = True) scan.scanrelid: 5 = {
            scan.plan.targetlist = List with 16 elements = {
              0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: -1}
              },
              1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 2, location: -1}
              },
              2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: -1}
              },
              3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 4, location: -1}
              },
              4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 5, location: -1}
              },
              5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 6, location: -1}
              },
              6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 7, location: -1}
              },
              7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 8, location: -1}
              },
              8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 9, location: -1}
              },
              9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 10, location: -1}
              },
              10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 11, location: -1}
              },
              11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 12, location: -1}
              },
              12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 13, location: -1}
              },
              13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 14, location: -1}
              },
              14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 15, location: -1}
              },
              15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
                expr = Var {varno: 5, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 16, location: -1}
              }
            }
          },
          join.joinqual = List with 2 elements = {
            0 = OpExpr {opno: 518, opfuncid: 144, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 353} = {
              args = List with 2 elements = {
                0 = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 3, location: 340},
                1 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 356}
              }
            },
            1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: -1} = {
              args = List with 2 elements = {
                0 = Var {varno: -2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: 129},
                1 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 5, varattnosyn: 1, location: 300}
              }
            }
          }
        },
        join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=8 async_capable=0 plan_id=13 parallel_aware=False parallel_safe = True) scan.scanrelid: 6 = {
          scan.plan.targetlist = List with 16 elements = {
            0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: -1}
            },
            1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 2, location: -1}
            },
            2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: -1}
            },
            3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 4, location: -1}
            },
            4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 5, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 5, location: -1}
            },
            5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 6, location: -1}
            },
            6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 7, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 7, location: -1}
            },
            7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 8, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 8, location: -1}
            },
            8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 9, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 9, location: -1}
            },
            9 = TargetEntry {resno: 10, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 10, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 10, location: -1}
            },
            10 = TargetEntry {resno: 11, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 11, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 11, location: -1}
            },
            11 = TargetEntry {resno: 12, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 12, location: -1}
            },
            12 = TargetEntry {resno: 13, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 13, location: -1}
            },
            13 = TargetEntry {resno: 14, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 14, vartype: 1042, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 14, location: -1}
            },
            14 = TargetEntry {resno: 15, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 15, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 15, location: -1}
            },
            15 = TargetEntry {resno: 16, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
              expr = Var {varno: 6, varattno: 16, vartype: 1043, vartypmod: 48, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 16, location: -1}
            }
          },
          scan.plan.qual = List with 1 elements = {
            0 = OpExpr {opno: 1097, opfuncid: 1089, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 550} = {
              args = List with 2 elements = {
                0 = Var {varno: 6, varattno: 13, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 13, location: 533},
                1 = Var {varno: 6, varattno: 12, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 12, location: 552}
              }
            }
          }
        },
        join.joinqual = List with 2 elements = {
          0 = OpExpr {opno: 518, opfuncid: 144, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 507} = {
            args = List with 2 elements = {
              0 = Var {varno: -1, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 3, location: 494},
              1 = Var {varno: -2, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: 510}
            }
          },
          1 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 468} = {
            args = List with 2 elements = {
              0 = Var {varno: -1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 6, varattnosyn: 1, location: 454},
              1 = Var {varno: -2, varattno: 3, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 470}
            }
          }
        }
      }
    }
  },
  limitCount = Const {consttype: 20, consttypmod: -1, constcollid: 0, constlen: 8, constvalue: 100, constisnull: false, constbyval: true, location: -1}
}

Breakpoint 1, standard_planner (parse=0x5591d145f3c0, query_string=<optimized out>, cursorOptions=2048, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:420
420		top_plan = create_plan(root, best_path);
$61 = Query {commandType: CMD_SELECT, querySource: QSRC_ORIGINAL, queryId: 0, canSetTag: true, resultRelation: 0, hasAggs: true, hasWindowFuncs: false, hasTargetSRFs: false, hasSubLinks: true, hasDistinctOn: false, hasRecursive: false, hasModifyingCTE: false, hasForUpdate: false, hasRowSecurity: false, isReturn: false, mergeUseOuterJoin: false, override: OVERRIDING_NOT_SET, groupDistinct: false, limitOption: LIMIT_OPTION_COUNT, stmt_location: 0, stmt_len: 728} = {
  rtable = List with 3 elements = {
    0 = RangeTblEntry {rtekind: RTE_SUBQUERY, relid: 0, relkind: 0 '\000', rellockmode: 0, perminfoindex: 0, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      alias = Alias aliasname: 'custsale',
      eref = Alias aliasname: 'custsale' = {
        colnames = List with 2 elements = {
          0 = String [ 'cntrycode' ],
          1 = String [ 'c_acctbal' ]
        }
      }
    },
    1 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74559, relkind: 114 'r', rellockmode: 1, perminfoindex: 1, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'customer' = {
        colnames = List with 8 elements = {
          0 = String [ 'c_custkey' ],
          1 = String [ 'c_name' ],
          2 = String [ 'c_address' ],
          3 = String [ 'c_nationkey' ],
          4 = String [ 'c_phone' ],
          5 = String [ 'c_acctbal' ],
          6 = String [ 'c_mktsegment' ],
          7 = String [ 'c_comment' ]
        }
      }
    },
    2 = RangeTblEntry {rtekind: RTE_RELATION, relid: 74562, relkind: 114 'r', rellockmode: 1, perminfoindex: 2, security_barrier: false, jointype: JOIN_INNER, joinmergedcols: 0, funcordinality: false, ctename: 0x0, ctelevelsup: 0, self_reference: false, enrname: 0x0, enrtuples: 0, lateral: false, inh: false, inFromCl: true} = {
      eref = Alias aliasname: 'orders' = {
        colnames = List with 9 elements = {
          0 = String [ 'o_orderkey' ],
          1 = String [ 'o_custkey' ],
          2 = String [ 'o_orderstatus' ],
          3 = String [ 'o_totalprice' ],
          4 = String [ 'o_orderdate' ],
          5 = String [ 'o_orderpriority' ],
          6 = String [ 'o_clerk' ],
          7 = String [ 'o_shippriority' ],
          8 = String [ 'o_comment' ]
        }
      }
    }
  },
  rteperminfos = List with 2 elements = {
    0 = RTEPermissionInfo {relid: 74559, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 12 13), insertedCols: 0x0, updatedCols: 0x0},
    1 = RTEPermissionInfo {relid: 74562, inh: true, requiredPerms: 2, checkAsUser: 0, selectedCols: (b 8 9 10 11 12 13 14 15 16), insertedCols: 0x0, updatedCols: 0x0}
  },
  jointree = FromExpr  = {
    fromlist = List with 1 elements = {
      0 = JoinExpr {jointype: JOIN_ANTI, isNatural: false, rtindex: 0} = {
        larg = FromExpr  = {
          fromlist = List with 1 elements = {
            0 = RangeTblRef rtindex: 2
          },
          quals = List with 2 elements = {
            0 = ScalarArrayOpExpr {opno: 98, opfuncid: 67, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 234} = {
              args = List with 2 elements = {
                0 = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 202} = {
                  args = List with 3 elements = {
                    0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
                      args = List with 1 elements = {
                        0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 212}
                      }
                    },
                    1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 225},
                    2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 231}
                  }
                },
                1 = Const {consttype: 1009, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770131800, constisnull: false, constbyval: false, location: -1}
              }
            },
            1 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 308} = {
              args = List with 2 elements = {
                0 = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 298},
                1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
              }
            }
          }
        },
        rarg = RangeTblRef rtindex: 3,
        quals = List with 1 elements = {
          0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 651} = {
            args = List with 2 elements = {
              0 = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: 641},
              1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 653}
            }
          }
        }
      }
    }
  },
  targetList = List with 3 elements = {
    0 = TargetEntry {resno: 1, resname: 'cntrycode', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 100} = {
        args = List with 3 elements = {
          0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
            args = List with 1 elements = {
              0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110}
            }
          },
          1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 123},
          2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 129}
        }
      }
    },
    1 = TargetEntry {resno: 2, resname: 'numcust', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 22}
    },
    2 = TargetEntry {resno: 3, resname: 'totacctbal', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 45} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152}
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 98, sortop: 664, nulls_first: false, hashable: true}
  },
  sortClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 98, sortop: 664, nulls_first: false, hashable: true}
  }
}
$62 = AggPath T_Agg (cost=0.04..0.07 rows=1 parallel_aware=False parallel_safe=False parallel_workers=0) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numGroups: 1, transitionSpace: 128} = {
  path.parent = <>,
  path.pathtarget = PathTarget {cost: (0.00..0.01), width: 72, has_volatile_expr: VOLATILITY_UNKNOWN} = {
    sortgrouprefs = [1, 0, 0],
    exprs = List with 3 elements = {
      0 = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 100} = {
        args = List with 3 elements = {
          0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
            args = List with 1 elements = {
              0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110}
            }
          },
          1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 123},
          2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 129}
        }
      },
      1 = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 22},
      2 = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 45} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152}
          }
        }
      }
    }
  },
  path.pathkeys = List with 1 elements = {
    0 = PathKey {pk_opfamily: 1994, pk_strategy: 1, pk_nulls_first: false} = {
      pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
        ec_opfamilies = OidList with 2 elements = {1994, 2095},
        ec_members = List with 1 elements = {
          0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 25} = {
            em_expr = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 100} = {
              args = List with 3 elements = {
                0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
                  args = List with 1 elements = {
                    0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110}
                  }
                },
                1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 123},
                2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 129}
              }
            },
            em_jdomain = JoinDomain jd_relids: (b 2 3)
          }
        }
      }
    }
  },
  subpath = SortPath T_Sort (cost=0.03..0.03 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
    path.parent = <>,
    path.pathtarget = PathTarget {cost: (0.00..0.01), width: 50, has_volatile_expr: VOLATILITY_UNKNOWN} = {
      sortgrouprefs = [1, 0],
      exprs = List with 2 elements = {
        0 = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 100} = {
          args = List with 3 elements = {
            0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
              args = List with 1 elements = {
                0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110}
              }
            },
            1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 123},
            2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 129}
          }
        },
        1 = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152}
      }
    },
    path.pathkeys = List with 1 elements = {
      0 = PathKey {pk_opfamily: 1994, pk_strategy: 1, pk_nulls_first: false} = {
        pk_eclass = EquivalenceClass {ec_collation: 100, ec_relids: (b 2), ec_has_const: false, ec_has_volatile: false, ec_broken: false, ec_sortref: 1, ec_min_security: 4294967295, ec_max_security: 0} = {
          ec_opfamilies = OidList with 2 elements = {1994, 2095},
          ec_members = List with 1 elements = {
            0 = EquivalenceMember {em_relids: (b 2), em_is_const: false, em_is_child: false, em_datatype: 25} = {
              em_expr = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 100} = {
                args = List with 3 elements = {
                  0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
                    args = List with 1 elements = {
                      0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110}
                    }
                  },
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 123},
                  2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 129}
                }
              },
              em_jdomain = JoinDomain jd_relids: (b 2 3)
            }
          }
        }
      }
    },
    subpath = ProjectionPath T_Result (cost=0.00..0.02 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) dummypp: true = {
      path.parent = (b 2 3),
      path.pathtarget = PathTarget {cost: (0.00..0.01), width: 50, has_volatile_expr: VOLATILITY_UNKNOWN} = {
        sortgrouprefs = [1, 0],
        exprs = List with 2 elements = {
          0 = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 100} = {
            args = List with 3 elements = {
              0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
                args = List with 1 elements = {
                  0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110}
                }
              },
              1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 123},
              2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 129}
            }
          },
          1 = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152}
        }
      },
      subpath = NestPath T_NestLoop (cost=0.00..0.01 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0)  = {
        jpath.path.parent = (b 2 3),
        jpath.path.pathtarget = PathTarget {cost: (0.00..0.00), width: 82, has_volatile_expr: VOLATILITY_UNKNOWN} = {
          exprs = List with 2 elements = {
            0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110},
            1 = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152}
          }
        },
        jpath.outerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 2),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 86, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 3 elements = {
              0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110},
              1 = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152},
              2 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 653}
            }
          }
        },
        jpath.innerjoinpath = T_SeqScan (cost=0.00..0.00 rows=1 parallel_aware=False parallel_safe=True parallel_workers=0) = {
          parent = (b 3),
          pathtarget = PathTarget {cost: (0.00..0.00), width: 4, has_volatile_expr: VOLATILITY_UNKNOWN} = {
            exprs = List with 1 elements = {
              0 = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: 641}
            }
          }
        },
        jpath.joinrestrictinfo = List with 1 elements = {
          0 = RestrictInfo {is_pushed_down: false, can_join: true, pseudoconstant: false, has_clone: false, is_clone: false, leakproof: false, has_volatile: VOLATILITY_NOVOLATILE, security_level: 0, num_base_rels: 2, clause_relids: (b 2 3), required_relids: (b 2 3), incompatible_relids: <>, outer_relids: (b 2), left_relids: (b 3), right_relids: (b 2), rinfo_serial: 3, eval_cost: (0.00..0.00), norm_selec: 0.0050, outer_selec: 0.0050, outer_is_left: true, hashjoinoperator: 96, left_bucketsize: -1.0000, right_bucketsize: -1.0000, left_mcvfreq: -1.0000, right_mcvfreq: -1.0000, left_hasheqoperator: 96, right_hasheqoperator: 96} = {
            clause = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 651} = {
              args = List with 2 elements = {
                0 = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: 641},
                1 = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 653}
              }
            },
            mergeopfamilies = OidList with 1 elements = {1976}
          }
        }
      }
    }
  },
  groupClause = List with 1 elements = {
    0 = SortGroupClause {tleSortGroupRef: 1, eqop: 98, sortop: 664, nulls_first: false, hashable: true}
  }
}

Breakpoint 2, standard_planner (parse=0x5591d145f3c0, query_string=<optimized out>, cursorOptions=<optimized out>, boundParams=<optimized out>) at /home/asky/postgres/src/backend/optimizer/plan/planner.c:520
520		result->hasReturning = (parse->returningList != NIL);
$63 = Agg (cost=0.04..0.07 rows=1 width=72 async_capable=0 plan_id=0 parallel_aware=False parallel_safe = False) {aggstrategy: AGG_SORTED, aggsplit: AGGSPLIT_SIMPLE, numCols: 1, numGroups: 1, transitionSpace: 128, aggParams: 0x0} = {
  grpColIdx = [1],
  grpOperators = [98],
  grpCollations = [100],
  plan.targetlist = List with 3 elements = {
    0 = TargetEntry {resno: 1, resname: 'cntrycode', ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Var {varno: -2, varattno: 1, vartype: 25, vartypmod: -1, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
    },
    1 = TargetEntry {resno: 2, resname: 'numcust', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2803, aggtype: 20, aggcollid: 0, inputcollid: 0, aggtranstype: 20, aggstar: true, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 0, aggtransno: 0, location: 22}
    },
    2 = TargetEntry {resno: 3, resname: 'totacctbal', ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
      expr = Aggref {aggfnoid: 2114, aggtype: 1700, aggcollid: 0, inputcollid: 0, aggtranstype: 2281, aggstar: false, aggvariadic: false, aggkind: 110 'n', aggpresorted: false, agglevelsup: 0, aggsplit: AGGSPLIT_SIMPLE, aggno: 1, aggtransno: 1, location: 45} = {
        aggargtypes = OidList with 1 elements = {1700},
        args = List with 1 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152}
          }
        }
      }
    }
  },
  plan.lefttree = Sort (cost=0.03..0.03 rows=1 width=50 async_capable=0 plan_id=1 parallel_aware=False parallel_safe = True) numCols: 1 = {
    sortColIdx = [1],
    sortOperators = [664],
    collations = [100],
    nullsFirst = [False],
    plan.targetlist = List with 2 elements = {
      0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 1, vartype: 25, vartypmod: -1, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 0, varattnosyn: 0, location: -1}
      },
      1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
        expr = Var {varno: -2, varattno: 2, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
      }
    },
    plan.lefttree = NestLoop (cost=0.00..0.02 rows=1 width=50 async_capable=0 plan_id=2 parallel_aware=False parallel_safe = True) {join.jointype: JOIN_ANTI, join.inner_unique: false} = {
      join.plan.targetlist = List with 2 elements = {
        0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 1, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 100} = {
            args = List with 3 elements = {
              0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
                args = List with 1 elements = {
                  0 = Var {varno: -2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 110}
                }
              },
              1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 123},
              2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 129}
            }
          }
        },
        1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
          expr = Var {varno: -2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 152}
        }
      },
      join.plan.lefttree = SeqScan (cost=0.00..0.00 rows=1 width=86 async_capable=0 plan_id=3 parallel_aware=False parallel_safe = True) scan.scanrelid: 2 = {
        scan.plan.targetlist = List with 8 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 2, vartype: 1043, vartypmod: 29, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 3, vartype: 1043, vartypmod: 44, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 4, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 4, location: -1}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: -1}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: -1}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 7, vartype: 1042, vartypmod: 14, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 7, location: -1}
          },
          7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 2, varattno: 8, vartype: 1043, vartypmod: 121, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 8, location: -1}
          }
        },
        scan.plan.qual = List with 2 elements = {
          0 = OpExpr {opno: 1756, opfuncid: 1720, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 308} = {
            args = List with 2 elements = {
              0 = Var {varno: 2, varattno: 6, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 6, location: 298},
              1 = Param {paramkind: PARAM_EXEC, paramid: 0, paramtype: 1700, paramtypmod: -1, paramcollid: 0, location: -1}
            }
          },
          1 = ScalarArrayOpExpr {opno: 98, opfuncid: 67, hashfuncid: 0, negfuncid: 0, useOr: true, inputcollid: 100, location: 234} = {
            args = List with 2 elements = {
              0 = FuncExpr {funcid: 936, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_SQL_SYNTAX, funccollid: 100, inputcollid: 100, location: 202} = {
                args = List with 3 elements = {
                  0 = FuncExpr {funcid: 401, funcresulttype: 25, funcretset: false, funcvariadic: false, funcformat: COERCE_IMPLICIT_CAST, funccollid: 100, inputcollid: 100, location: -1} = {
                    args = List with 1 elements = {
                      0 = Var {varno: 2, varattno: 5, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 5, location: 212}
                    }
                  },
                  1 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 1, constisnull: false, constbyval: true, location: 225},
                  2 = Const {consttype: 23, consttypmod: -1, constcollid: 0, constlen: 4, constvalue: 2, constisnull: false, constbyval: true, location: 231}
                }
              },
              1 = Const {consttype: 1009, consttypmod: -1, constcollid: 100, constlen: -1, constvalue: 94084770131800, constisnull: false, constbyval: false, location: -1}
            }
          }
        }
      },
      join.plan.righttree = SeqScan (cost=0.00..0.00 rows=1 width=4 async_capable=0 plan_id=4 parallel_aware=False parallel_safe = True) scan.scanrelid: 3 = {
        scan.plan.targetlist = List with 9 elements = {
          0 = TargetEntry {resno: 1, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 1, location: -1}
          },
          1 = TargetEntry {resno: 2, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: -1}
          },
          2 = TargetEntry {resno: 3, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 3, vartype: 1042, vartypmod: 5, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 3, location: -1}
          },
          3 = TargetEntry {resno: 4, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 4, vartype: 1700, vartypmod: 983046, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 4, location: -1}
          },
          4 = TargetEntry {resno: 5, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 5, vartype: 1082, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 5, location: -1}
          },
          5 = TargetEntry {resno: 6, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 6, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 6, location: -1}
          },
          6 = TargetEntry {resno: 7, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 7, vartype: 1042, vartypmod: 19, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 7, location: -1}
          },
          7 = TargetEntry {resno: 8, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 8, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 8, location: -1}
          },
          8 = TargetEntry {resno: 9, resname: 0x0, ressortgroupref: 0, resorigtbl: 0, resorigcol: 0, resjunk: false} = {
            expr = Var {varno: 3, varattno: 9, vartype: 1043, vartypmod: 83, varcollid: 100, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 9, location: -1}
          }
        }
      },
      join.joinqual = List with 1 elements = {
        0 = OpExpr {opno: 96, opfuncid: 65, opresulttype: 16, opretset: false, opcollid: 0, inputcollid: 0, location: 651} = {
          args = List with 2 elements = {
            0 = Var {varno: -1, varattno: 2, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 3, varattnosyn: 2, location: 641},
            1 = Var {varno: -2, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varnullingrels: 0x0, varlevelsup: 0, varnosyn: 2, varattnosyn: 1, location: 653}
          }
        }
      }
    }
  },
  plan.initPlan = List with 1 elements = {
    0 = SubPlan {subLinkType: EXPR_SUBLINK, plan_id: 1, plan_name: 'InitPlan 1 (returns $0)', firstColType: 1700, firstColTypmod: -1, firstColCollation: 0, useHashTable: false, unknownEqFalse: false, parallel_safe: true, startup_cost: 0, per_call_cost: 0.014999999999999999} = {
      setParam = IntList with 1 elements = {0}
    }
  }
}
